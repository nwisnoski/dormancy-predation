(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1580061,      31292]
NotebookOptionsPosition[   1571645,      31021]
NotebookOutlinePosition[   1571998,      31037]
CellTagsIndexPosition[   1571955,      31034]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Four-Equations, explicit resources and predator", "Section",
 CellChangeTimes->{{3.657837762769829*^9, 3.6578377699199333`*^9}, {
  3.6578378078237953`*^9, 3.657837813287681*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dRdt", "=", 
  RowBox[{
   RowBox[{"r", "*", "R", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"R", "/", "K"}]}], ")"}]}], "-", 
   RowBox[{"fc", "*", "R", "*", "C"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"dCdt", "=", 
  RowBox[{
   RowBox[{"ec", "*", "fc", "*", "R", "*", "C"}], "-", 
   RowBox[{"fp", "*", "C", "*", "P"}], "+", 
   RowBox[{"\[Alpha]", "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", "*", 
       RowBox[{"R", "/", "K"}]}]}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"dDdt", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Alpha]"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", "*", 
       RowBox[{"R", "/", "K"}]}]}], ")"}]}], "-", 
   RowBox[{"fp", "*", "D", "*", "P"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"dPdt", "=", 
  RowBox[{
   RowBox[{"ep", "*", "fp", "*", "C", "*", "P"}], "+", 
   RowBox[{"ed", "*", "fp", "*", "D", "*", "P"}], "-", "d"}]}]}], "Input",
 CellChangeTimes->{{3.657825214754189*^9, 3.657825260242434*^9}, {
  3.657825873691004*^9, 3.657825934443467*^9}, {3.6578261309347353`*^9, 
  3.657826134172573*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "C"}], " ", "fc", " ", "R"}], "+", 
  RowBox[{"r", " ", "R", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox["R", "K"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.6578252613803663`*^9, 3.657825939121147*^9, 
  3.657826136322757*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "C"}], " ", "fp", " ", "P"}], "+", 
  RowBox[{"C", " ", "ec", " ", "fc", " ", "R"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"2", " ", "R"}], "K"]}], ")"}], " ", "\[Alpha]"}]}]], "Output",
 CellChangeTimes->{3.6578252613803663`*^9, 3.657825939121147*^9, 
  3.657826136333013*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "D"}], " ", "fp", " ", "P"}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     FractionBox[
      RowBox[{"2", " ", "R"}], "K"]}], ")"}], " ", "\[Alpha]"}]}]], "Output",
 CellChangeTimes->{3.6578252613803663`*^9, 3.657825939121147*^9, 
  3.65782613634107*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "d"}], "+", 
  RowBox[{"D", " ", "ed", " ", "fp", " ", "P"}], "+", 
  RowBox[{"C", " ", "ep", " ", "fp", " ", "P"}]}]], "Output",
 CellChangeTimes->{3.6578252613803663`*^9, 3.657825939121147*^9, 
  3.6578261363488283`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Equil", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dRdt", "\[Equal]", "0"}], ",", 
       RowBox[{"dCdt", "\[Equal]", "0"}], ",", 
       RowBox[{"dDdt", "\[Equal]", "0"}], ",", 
       RowBox[{"dPdt", "\[Equal]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"R", ",", "C", ",", "D", ",", "P"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6578252636378183`*^9, 3.6578252922498293`*^9}, {
  3.6578259473969316`*^9, 3.657825954251225*^9}, {3.657826209356648*^9, 
  3.65782621153125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"K", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"ed", "-", "ep"}], ")"}], " ", "fc", " ", "fp", " ", 
             "r", " ", "\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "d"}], "+", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["fc", "2"], " ", 
              SuperscriptBox["fp", "2"], " ", 
              SuperscriptBox["r", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"d", "-", 
                 RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", "d"}], "+", 
                   RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
                "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
                 SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}], "/", 
          
          RowBox[{"(", 
           RowBox[{"ec", " ", "ep", " ", "fc", " ", "fp", " ", 
            SuperscriptBox["r", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "d"}], "+", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], ")"}]}]}], 
        ")"}]}]}], ",", 
     RowBox[{"C", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"fc", " ", "fp", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
           ")"}]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["fc", "2"], " ", 
           SuperscriptBox["fp", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "d"}], "+", 
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "ec", " ", "ep", " ", 
         SuperscriptBox["fc", "2"], " ", "fp", " ", "K", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", 
           RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], ")"}]}]}], ",", 
     RowBox[{"D", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", " ", "fp", " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "d"}], "+", 
           RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}], " ", 
         "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", 
           RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"d", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
          ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "8"}], " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"ed", "-", "ep"}], ")"}], " ", "fc", " ", "fp", " ", "r", 
          " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["ec", "2"], " ", "ep", " ", "fc", " ", "fp", " ", 
          SuperscriptBox["K", "2"], " ", 
          SuperscriptBox["r", "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"d", "-", 
             RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"]}], "-", 
         RowBox[{"2", " ", "ec", " ", "fc", " ", "fp", " ", "K", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"d", "-", 
             RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "d"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], ")"}]}], 
         "-", 
         RowBox[{"d", " ", "ec", " ", "K", " ", "r", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["fc", "2"], " ", 
            SuperscriptBox["fp", "2"], " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "d"}], "+", 
                 RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
              "+", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
               SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], "-", 
         RowBox[{"4", " ", "d", " ", "\[Alpha]", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["fc", "2"], " ", 
            SuperscriptBox["fp", "2"], " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "d"}], "+", 
                 RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
              "+", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
               SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], "+", 
         RowBox[{"ec", " ", "ed", " ", "K", " ", "r", " ", "\[Alpha]", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["fc", "2"], " ", 
            SuperscriptBox["fp", "2"], " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "d"}], "+", 
                 RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
              "+", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
               SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}]}], ")"}]}]}], 
     ",", 
     RowBox[{"P", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["fc", "2"], " ", 
            SuperscriptBox["fp", "2"], " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "d"}], "+", 
                 RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
              "+", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
               SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], "+", 
         RowBox[{"fc", " ", "fp", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"d", " ", "ec", " ", "ep", " ", "K", " ", "r"}], "+", 
            RowBox[{"2", " ", "d", " ", 
             RowBox[{"(", 
              RowBox[{"ed", "+", "ep"}], ")"}], " ", "\[Alpha]"}], "-", 
            RowBox[{"ed", " ", "\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
              ")"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "ep", " ", 
         SuperscriptBox["fp", "2"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"d", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
          ")"}]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"R", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"fc", " ", "fp", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], ")"}]}], 
         "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["fc", "2"], " ", 
           SuperscriptBox["fp", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "d"}], "+", 
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "ec", " ", "ep", " ", "fc", " ", "fp", " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", 
           RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], ")"}]}]}], ",", 
     RowBox[{"C", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"fc", " ", "fp", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
           ")"}]}], "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["fc", "2"], " ", 
           SuperscriptBox["fp", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "d"}], "+", 
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "ec", " ", "ep", " ", 
         SuperscriptBox["fc", "2"], " ", "fp", " ", "K", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", 
           RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], ")"}]}]}], ",", 
     RowBox[{"D", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", " ", "fp", " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "d"}], "+", 
           RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}], " ", 
         "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", 
           RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"d", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
          ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "8"}], " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"ed", "-", "ep"}], ")"}], " ", "fc", " ", "fp", " ", "r", 
          " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["ec", "2"], " ", "ep", " ", "fc", " ", "fp", " ", 
          SuperscriptBox["K", "2"], " ", 
          SuperscriptBox["r", "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"d", "-", 
             RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"]}], "-", 
         RowBox[{"2", " ", "ec", " ", "fc", " ", "fp", " ", "K", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"d", "-", 
             RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "d"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], ")"}]}], 
         "+", 
         RowBox[{"d", " ", "ec", " ", "K", " ", "r", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["fc", "2"], " ", 
            SuperscriptBox["fp", "2"], " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "d"}], "+", 
                 RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
              "+", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
               SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], "+", 
         RowBox[{"4", " ", "d", " ", "\[Alpha]", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["fc", "2"], " ", 
            SuperscriptBox["fp", "2"], " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "d"}], "+", 
                 RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
              "+", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
               SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], "-", 
         RowBox[{"ec", " ", "ed", " ", "K", " ", "r", " ", "\[Alpha]", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["fc", "2"], " ", 
            SuperscriptBox["fp", "2"], " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "d"}], "+", 
                 RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
              "+", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
               SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}]}], ")"}]}]}], 
     ",", 
     RowBox[{"P", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["fc", "2"], " ", 
           SuperscriptBox["fp", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "d"}], "+", 
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]], "+", 
         RowBox[{"fc", " ", "fp", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"d", " ", "ec", " ", "ep", " ", "K", " ", "r"}], "+", 
            RowBox[{"2", " ", "d", " ", 
             RowBox[{"(", 
              RowBox[{"ed", "+", "ep"}], ")"}], " ", "\[Alpha]"}], "-", 
            RowBox[{"ed", " ", "\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
              ")"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "ep", " ", 
         SuperscriptBox["fp", "2"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"d", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
          ")"}]}], ")"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.657825293683908*^9, 3.657825980914706*^9, 
  3.657826169794601*^9, 3.65782621769485*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JacGen", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dRdt", ",", "R"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dRdt", ",", "C"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dRdt", ",", "D"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dRdt", ",", "P"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dCdt", ",", "R"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dCdt", ",", "C"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dCdt", ",", "D"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dCdt", ",", "P"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dDdt", ",", "R"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dDdt", ",", "C"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dDdt", ",", "D"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dDdt", ",", "P"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dPdt", ",", "R"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dPdt", ",", "C"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dPdt", ",", "D"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dPdt", ",", "P"}], "]"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.657825303207368*^9, 3.6578253698407507`*^9}, {
  3.657825978527506*^9, 3.657826030086273*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "C"}], " ", "fc"}], "-", 
      FractionBox[
       RowBox[{"r", " ", "R"}], "K"], "+", 
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox["R", "K"]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", "fc"}], " ", "R"}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"C", " ", "ec", " ", "fc"}], "-", 
      FractionBox[
       RowBox[{"2", " ", "\[Alpha]"}], "K"]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "fp"}], " ", "P"}], "+", 
      RowBox[{"ec", " ", "fc", " ", "R"}]}], ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "C"}], " ", "fp"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "\[Alpha]"}], "K"], ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "fp"}], " ", "P"}], ",", 
     RowBox[{
      RowBox[{"-", "D"}], " ", "fp"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"ep", " ", "fp", " ", "P"}], ",", 
     RowBox[{"ed", " ", "fp", " ", "P"}], ",", 
     RowBox[{
      RowBox[{"D", " ", "ed", " ", "fp"}], "+", 
      RowBox[{"C", " ", "ep", " ", "fp"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6578253708211184`*^9, 3.657826032027813*^9, 
  3.657826174762538*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JacGen", "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.65782538992587*^9, 3.657825393857347*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"-", "C"}], " ", "fc"}], "-", 
       FractionBox[
        RowBox[{"r", " ", "R"}], "K"], "+", 
       RowBox[{"r", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox["R", "K"]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"-", "fc"}], " ", "R"}], "0", "0"},
     {
      RowBox[{
       RowBox[{"C", " ", "ec", " ", "fc"}], "-", 
       FractionBox[
        RowBox[{"2", " ", "\[Alpha]"}], "K"]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "fp"}], " ", "P"}], "+", 
       RowBox[{"ec", " ", "fc", " ", "R"}]}], "0", 
      RowBox[{
       RowBox[{"-", "C"}], " ", "fp"}]},
     {
      FractionBox[
       RowBox[{"2", " ", "\[Alpha]"}], "K"], "0", 
      RowBox[{
       RowBox[{"-", "fp"}], " ", "P"}], 
      RowBox[{
       RowBox[{"-", "D"}], " ", "fp"}]},
     {"0", 
      RowBox[{"ep", " ", "fp", " ", "P"}], 
      RowBox[{"ed", " ", "fp", " ", "P"}], 
      RowBox[{
       RowBox[{"D", " ", "ed", " ", "fp"}], "+", 
       RowBox[{"C", " ", "ep", " ", "fp"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.657825394075577*^9, 3.6578260346156683`*^9, 
  3.657826177633685*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Jac1", "=", 
  RowBox[{"JacGen", "/.", 
   RowBox[{"Equil", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.657826046459412*^9, 3.6578260488381367`*^9}, {
  3.657826179492772*^9, 3.657826242348205*^9}, {3.657826277995565*^9, 
  3.657826279571403*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"fc", " ", "fp", " ", "r", " ", 
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}],
              ")"}]}], "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["fc", "2"], " ", 
             SuperscriptBox["fp", "2"], " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"d", "-", 
                RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", "d"}], "+", 
                  RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
               "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
                SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
          "2", " ", "ec", " ", "ep", " ", "fc", " ", "fp", " ", "K", " ", "r",
            " ", 
           RowBox[{"(", 
            RowBox[{"d", "-", 
             RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], ")"}]}], ")"}]}], 
      "-", 
      FractionBox[
       RowBox[{"r", " ", 
        RowBox[{"(", 
         RowBox[{"K", "+", 
          FractionBox[
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"ed", "-", "ep"}], ")"}], " ", "fc", " ", "fp", " ", 
             "r", " ", "\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "d"}], "+", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["fc", "2"], " ", 
              SuperscriptBox["fp", "2"], " ", 
              SuperscriptBox["r", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"d", "-", 
                 RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", "d"}], "+", 
                   RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
                "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
                 SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], 
           RowBox[{"ec", " ", "ep", " ", "fc", " ", "fp", " ", 
            SuperscriptBox["r", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "d"}], "+", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}]]}], ")"}]}], 
       RowBox[{"2", " ", "K"}]], "+", 
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"K", "+", 
           FractionBox[
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"ed", "-", "ep"}], ")"}], " ", "fc", " ", "fp", " ", 
              "r", " ", "\[Alpha]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "d"}], "+", 
                RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["fc", "2"], " ", 
               SuperscriptBox["fp", "2"], " ", 
               SuperscriptBox["r", "2"], " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"d", "-", 
                  RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "d"}], "+", 
                    RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
                 "+", 
                 RowBox[{"4", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
                  SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], 
            RowBox[{"ec", " ", "ep", " ", "fc", " ", "fp", " ", 
             SuperscriptBox["r", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "d"}], "+", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}]]}], 
          RowBox[{"2", " ", "K"}]]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", "fc", " ", 
      RowBox[{"(", 
       RowBox[{"K", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"ed", "-", "ep"}], ")"}], " ", "fc", " ", "fp", " ", "r",
             " ", "\[Alpha]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "d"}], "+", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["fc", "2"], " ", 
             SuperscriptBox["fp", "2"], " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"d", "-", 
                RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", "d"}], "+", 
                  RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
               "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
                SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"ec", " ", "ep", " ", "fc", " ", "fp", " ", 
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "d"}], "+", 
             RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], ")"}]}]}], ")"}]}], 
     ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[Alpha]"}], "K"]}], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", "ep", " ", "fc", " ", "fp", " ", "K", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", 
           RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"fc", " ", "fp", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
           ")"}]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["fc", "2"], " ", 
           SuperscriptBox["fp", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "d"}], "+", 
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["fc", "2"], " ", 
              SuperscriptBox["fp", "2"], " ", 
              SuperscriptBox["r", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"d", "-", 
                 RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", "d"}], "+", 
                   RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
                "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
                 SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], "+", 
           RowBox[{"fc", " ", "fp", " ", "r", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"d", " ", "ec", " ", "ep", " ", "K", " ", "r"}], "+", 
              RowBox[{"2", " ", "d", " ", 
               RowBox[{"(", 
                RowBox[{"ed", "+", "ep"}], ")"}], " ", "\[Alpha]"}], "-", 
              RowBox[{"ed", " ", "\[Alpha]", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
                ")"}]}]}], ")"}]}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "ep", " ", "fp", " ", 
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"d", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
            ")"}]}], ")"}]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", "ec", " ", "fc", " ", 
       RowBox[{"(", 
        RowBox[{"K", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"ed", "-", "ep"}], ")"}], " ", "fc", " ", "fp", " ", 
             "r", " ", "\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "d"}], "+", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["fc", "2"], " ", 
              SuperscriptBox["fp", "2"], " ", 
              SuperscriptBox["r", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"d", "-", 
                 RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", "d"}], "+", 
                   RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
                "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
                 SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}], "/", 
          
          RowBox[{"(", 
           RowBox[{"ec", " ", "ep", " ", "fc", " ", "fp", " ", 
            SuperscriptBox["r", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "d"}], "+", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], ")"}]}]}], 
        ")"}]}]}], ",", "0", ",", 
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", "ec", " ", "ep", " ", 
         SuperscriptBox["fc", "2"], " ", "K", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", 
           RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"fc", " ", "fp", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
           ")"}]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["fc", "2"], " ", 
           SuperscriptBox["fp", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "d"}], "+", 
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "\[Alpha]"}], "K"], ",", "0", ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["fc", "2"], " ", 
             SuperscriptBox["fp", "2"], " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"d", "-", 
                RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", "d"}], "+", 
                  RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
               "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
                SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], "+", 
          RowBox[{"fc", " ", "fp", " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"d", " ", "ec", " ", "ep", " ", "K", " ", "r"}], "+", 
             RowBox[{"2", " ", "d", " ", 
              RowBox[{"(", 
               RowBox[{"ed", "+", "ep"}], ")"}], " ", "\[Alpha]"}], "-", 
             RowBox[{"ed", " ", "\[Alpha]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
               ")"}]}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", "ep", " ", "fp", " ", 
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"d", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
           ")"}]}], ")"}]}], ")"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", 
          SuperscriptBox["fp", "2"], " ", 
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", "d"}], "+", 
            RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}], " ", 
          "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"d", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
           ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "8"}], " ", "d", " ", 
           RowBox[{"(", 
            RowBox[{"ed", "-", "ep"}], ")"}], " ", "fc", " ", "fp", " ", "r", 
           " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"d", "-", 
             RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["ec", "2"], " ", "ep", " ", "fc", " ", "fp", " ", 
           SuperscriptBox["K", "2"], " ", 
           SuperscriptBox["r", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"]}], "-", 
          RowBox[{"2", " ", "ec", " ", "fc", " ", "fp", " ", "K", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "d"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], ")"}]}],
           "-", 
          RowBox[{"d", " ", "ec", " ", "K", " ", "r", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["fc", "2"], " ", 
             SuperscriptBox["fp", "2"], " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"d", "-", 
                RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", "d"}], "+", 
                  RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
               "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
                SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], "-", 
          RowBox[{"4", " ", "d", " ", "\[Alpha]", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["fc", "2"], " ", 
             SuperscriptBox["fp", "2"], " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"d", "-", 
                RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", "d"}], "+", 
                  RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
               "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
                SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], "+", 
          RowBox[{"ec", " ", "ed", " ", "K", " ", "r", " ", "\[Alpha]", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["fc", "2"], " ", 
             SuperscriptBox["fp", "2"], " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"d", "-", 
                RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", "d"}], "+", 
                  RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
               "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
                SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}]}], ")"}]}], 
       ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["fc", "2"], " ", 
           SuperscriptBox["fp", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "d"}], "+", 
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], "+", 
        RowBox[{"fc", " ", "fp", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"d", " ", "ec", " ", "ep", " ", "K", " ", "r"}], "+", 
           RowBox[{"2", " ", "d", " ", 
            RowBox[{"(", 
             RowBox[{"ed", "+", "ep"}], ")"}], " ", "\[Alpha]"}], "-", 
           RowBox[{"ed", " ", "\[Alpha]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
             ")"}]}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "fp", " ", 
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"d", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
         ")"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"ed", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["fc", "2"], " ", 
             SuperscriptBox["fp", "2"], " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"d", "-", 
                RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", "d"}], "+", 
                  RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
               "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
                SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], "+", 
          RowBox[{"fc", " ", "fp", " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"d", " ", "ec", " ", "ep", " ", "K", " ", "r"}], "+", 
             RowBox[{"2", " ", "d", " ", 
              RowBox[{"(", 
               RowBox[{"ed", "+", "ep"}], ")"}], " ", "\[Alpha]"}], "-", 
             RowBox[{"ed", " ", "\[Alpha]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
               ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "ep", " ", "fp", " ", 
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"d", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
         ")"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", "ec", " ", 
         SuperscriptBox["fc", "2"], " ", "K", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", 
           RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"fc", " ", "fp", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
           ")"}]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["fc", "2"], " ", 
           SuperscriptBox["fp", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "d"}], "+", 
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", " ", "ed", " ", 
         SuperscriptBox["fp", "2"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "d"}], "+", 
           RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}], " ", 
         "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", 
           RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"d", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
          ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "8"}], " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"ed", "-", "ep"}], ")"}], " ", "fc", " ", "fp", " ", "r", 
          " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["ec", "2"], " ", "ep", " ", "fc", " ", "fp", " ", 
          SuperscriptBox["K", "2"], " ", 
          SuperscriptBox["r", "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"d", "-", 
             RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"]}], "-", 
         RowBox[{"2", " ", "ec", " ", "fc", " ", "fp", " ", "K", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"d", "-", 
             RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "d"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], ")"}]}], 
         "-", 
         RowBox[{"d", " ", "ec", " ", "K", " ", "r", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["fc", "2"], " ", 
            SuperscriptBox["fp", "2"], " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "d"}], "+", 
                 RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
              "+", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
               SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], "-", 
         RowBox[{"4", " ", "d", " ", "\[Alpha]", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["fc", "2"], " ", 
            SuperscriptBox["fp", "2"], " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "d"}], "+", 
                 RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
              "+", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
               SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], "+", 
         RowBox[{"ec", " ", "ed", " ", "K", " ", "r", " ", "\[Alpha]", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["fc", "2"], " ", 
            SuperscriptBox["fp", "2"], " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "d"}], "+", 
                 RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
              "+", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
               SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}]}], ")"}]}]}]}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6578261817043533`*^9, 3.657826231793418*^9, 
  3.657826280255085*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Jac2", "=", 
  RowBox[{"JacGen", "/.", 
   RowBox[{"Equil", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.657826283820236*^9, 3.657826290433997*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"fc", " ", "fp", " ", "r", " ", 
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}],
              ")"}]}], "-", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["fc", "2"], " ", 
             SuperscriptBox["fp", "2"], " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"d", "-", 
                RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", "d"}], "+", 
                  RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
               "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
                SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
          "2", " ", "ec", " ", "ep", " ", "fc", " ", "fp", " ", "K", " ", "r",
            " ", 
           RowBox[{"(", 
            RowBox[{"d", "-", 
             RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], ")"}]}], ")"}]}], 
      "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"fc", " ", "fp", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], ")"}]}], 
         "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["fc", "2"], " ", 
           SuperscriptBox["fp", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "d"}], "+", 
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
        "2", " ", "ec", " ", "ep", " ", "fc", " ", "fp", " ", "K", " ", "r", 
         " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", 
           RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], ")"}]}], "+", 
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"fc", " ", "fp", " ", "r", " ", 
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
              ")"}]}], "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["fc", "2"], " ", 
              SuperscriptBox["fp", "2"], " ", 
              SuperscriptBox["r", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"d", "-", 
                 RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", "d"}], "+", 
                   RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
                "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
                 SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}], "/", 
          
          RowBox[{"(", 
           RowBox[{
           "2", " ", "ec", " ", "ep", " ", "fc", " ", "fp", " ", "K", " ", 
            SuperscriptBox["r", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], ")"}]}]}], 
        ")"}]}]}], ",", 
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", "ec", " ", "ep", " ", "fp", " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", 
           RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"fc", " ", "fp", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], ")"}]}], 
         "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["fc", "2"], " ", 
           SuperscriptBox["fp", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "d"}], "+", 
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}]}]}], ",",
      "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[Alpha]"}], "K"]}], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", "ep", " ", "fc", " ", "fp", " ", "K", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", 
           RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"fc", " ", "fp", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
           ")"}]}], "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["fc", "2"], " ", 
           SuperscriptBox["fp", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "d"}], "+", 
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", "ep", " ", "fp", " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", 
           RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"fc", " ", "fp", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], ")"}]}], 
         "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["fc", "2"], " ", 
           SuperscriptBox["fp", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "d"}], "+", 
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          RowBox[{
           SuperscriptBox["fc", "2"], " ", 
           SuperscriptBox["fp", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "d"}], "+", 
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]], "+", 
         RowBox[{"fc", " ", "fp", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"d", " ", "ec", " ", "ep", " ", "K", " ", "r"}], "+", 
            RowBox[{"2", " ", "d", " ", 
             RowBox[{"(", 
              RowBox[{"ed", "+", "ep"}], ")"}], " ", "\[Alpha]"}], "-", 
            RowBox[{"ed", " ", "\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
              ")"}]}]}], ")"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "ep", " ", "fp", " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{"d", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
          ")"}]}], ")"}]}]}], ",", "0", ",", 
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", "ec", " ", "ep", " ", 
         SuperscriptBox["fc", "2"], " ", "K", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", 
           RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"fc", " ", "fp", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
           ")"}]}], "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["fc", "2"], " ", 
           SuperscriptBox["fp", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "d"}], "+", 
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}]}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "\[Alpha]"}], "K"], ",", "0", ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["fc", "2"], " ", 
            SuperscriptBox["fp", "2"], " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "d"}], "+", 
                 RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
              "+", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
               SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]], "+", 
          RowBox[{"fc", " ", "fp", " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"d", " ", "ec", " ", "ep", " ", "K", " ", "r"}], "+", 
             RowBox[{"2", " ", "d", " ", 
              RowBox[{"(", 
               RowBox[{"ed", "+", "ep"}], ")"}], " ", "\[Alpha]"}], "-", 
             RowBox[{"ed", " ", "\[Alpha]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
               ")"}]}]}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", " ", "ep", " ", "fp", " ", 
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"d", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
           ")"}]}], ")"}]}], ")"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", 
          SuperscriptBox["fp", "2"], " ", 
          SuperscriptBox["r", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", "d"}], "+", 
            RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}], " ", 
          "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"d", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
           ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "8"}], " ", "d", " ", 
           RowBox[{"(", 
            RowBox[{"ed", "-", "ep"}], ")"}], " ", "fc", " ", "fp", " ", "r", 
           " ", 
           SuperscriptBox["\[Alpha]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"d", "-", 
             RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["ec", "2"], " ", "ep", " ", "fc", " ", "fp", " ", 
           SuperscriptBox["K", "2"], " ", 
           SuperscriptBox["r", "3"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"]}], "-", 
          RowBox[{"2", " ", "ec", " ", "fc", " ", "fp", " ", "K", " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "d"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], ")"}]}],
           "+", 
          RowBox[{"d", " ", "ec", " ", "K", " ", "r", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["fc", "2"], " ", 
             SuperscriptBox["fp", "2"], " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"d", "-", 
                RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", "d"}], "+", 
                  RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
               "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
                SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], "+", 
          RowBox[{"4", " ", "d", " ", "\[Alpha]", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["fc", "2"], " ", 
             SuperscriptBox["fp", "2"], " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"d", "-", 
                RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", "d"}], "+", 
                  RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
               "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
                SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], "-", 
          RowBox[{"ec", " ", "ed", " ", "K", " ", "r", " ", "\[Alpha]", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["fc", "2"], " ", 
             SuperscriptBox["fp", "2"], " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"d", "-", 
                RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", "d"}], "+", 
                  RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
               "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
                SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}]}], ")"}]}], 
       ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SqrtBox[
         RowBox[{
          SuperscriptBox["fc", "2"], " ", 
          SuperscriptBox["fp", "2"], " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"d", "-", 
             RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "d"}], "+", 
               RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], "+", 
            
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
             SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]], "+", 
        RowBox[{"fc", " ", "fp", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"d", " ", "ec", " ", "ep", " ", "K", " ", "r"}], "+", 
           RowBox[{"2", " ", "d", " ", 
            RowBox[{"(", 
             RowBox[{"ed", "+", "ep"}], ")"}], " ", "\[Alpha]"}], "-", 
           RowBox[{"ed", " ", "\[Alpha]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
             ")"}]}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "fp", " ", 
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"d", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
         ")"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"ed", " ", 
        RowBox[{"(", 
         RowBox[{
          SqrtBox[
           RowBox[{
            SuperscriptBox["fc", "2"], " ", 
            SuperscriptBox["fp", "2"], " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "d"}], "+", 
                 RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
              "+", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
               SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]], "+", 
          RowBox[{"fc", " ", "fp", " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"d", " ", "ec", " ", "ep", " ", "K", " ", "r"}], "+", 
             RowBox[{"2", " ", "d", " ", 
              RowBox[{"(", 
               RowBox[{"ed", "+", "ep"}], ")"}], " ", "\[Alpha]"}], "-", 
             RowBox[{"ed", " ", "\[Alpha]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
               ")"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", "ep", " ", "fp", " ", 
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"d", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
         ")"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", "ec", " ", 
         SuperscriptBox["fc", "2"], " ", "K", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", 
           RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"fc", " ", "fp", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
           ")"}]}], "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["fc", "2"], " ", 
           SuperscriptBox["fp", "2"], " ", 
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"d", "-", 
              RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "d"}], "+", 
                RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
              SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", " ", "ed", " ", 
         SuperscriptBox["fp", "2"], " ", 
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "d"}], "+", 
           RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}], " ", 
         "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"d", "-", 
           RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"d", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "ed"}], "+", "ep"}], ")"}], " ", "\[Alpha]"}]}], 
          ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "8"}], " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"ed", "-", "ep"}], ")"}], " ", "fc", " ", "fp", " ", "r", 
          " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"d", "-", 
            RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["ec", "2"], " ", "ep", " ", "fc", " ", "fp", " ", 
          SuperscriptBox["K", "2"], " ", 
          SuperscriptBox["r", "3"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"d", "-", 
             RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"]}], "-", 
         RowBox[{"2", " ", "ec", " ", "fc", " ", "fp", " ", "K", " ", 
          SuperscriptBox["r", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"d", "-", 
             RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "d"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"ed", "-", "ep"}], ")"}], " ", "\[Alpha]"}]}], ")"}]}], 
         "+", 
         RowBox[{"d", " ", "ec", " ", "K", " ", "r", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["fc", "2"], " ", 
            SuperscriptBox["fp", "2"], " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "d"}], "+", 
                 RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
              "+", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
               SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], "+", 
         RowBox[{"4", " ", "d", " ", "\[Alpha]", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["fc", "2"], " ", 
            SuperscriptBox["fp", "2"], " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "d"}], "+", 
                 RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
              "+", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
               SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}], "-", 
         RowBox[{"ec", " ", "ed", " ", "K", " ", "r", " ", "\[Alpha]", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["fc", "2"], " ", 
            SuperscriptBox["fp", "2"], " ", 
            SuperscriptBox["r", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"ed", " ", "\[Alpha]"}]}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ec", " ", "ep", " ", "K", " ", "r", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "d"}], "+", 
                 RowBox[{"ec", " ", "ep", " ", "K", " ", "r"}]}], ")"}]}], 
              "+", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"ed", "-", "ep"}], ")"}], "2"], " ", 
               SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}]]}]}], ")"}]}]}]}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6578262908715153`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigs1", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Eigenvalues", "[", "Jac1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.657826294308827*^9, 3.657826298648841*^9}, {
  3.65782679038057*^9, 3.657826824713868*^9}, {3.657830004496913*^9, 
  3.657830018680277*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.657831245424115*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["No-predator, Implicit Resources, Stochastic Resuscitation", "Section",
 CellChangeTimes->{{3.657837788529409*^9, 3.65783780370368*^9}, {
  3.659880880474286*^9, 3.659880886519951*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"R", "=", 
  RowBox[{"1", "-", 
   RowBox[{"A", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
   RowBox[{"D", "*", 
    SubscriptBox["\[Gamma]", "m"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"dAdt", "=", 
  RowBox[{
   RowBox[{"R", "*", "r", "*", "A", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
   RowBox[{
    SubscriptBox["\[Delta]", "max"], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", "R"}], ")"}], "*", "A", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
   RowBox[{"\[Alpha]", "*", "D", "*", 
    SubscriptBox["\[Gamma]", "m"]}], "-", 
   RowBox[{
    SubscriptBox["m", "a"], "*", "A", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"dDdt", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Delta]", "max"], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", "R"}], ")"}], "*", "A", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
   RowBox[{"\[Alpha]", "*", "D", "*", 
    SubscriptBox["\[Gamma]", "m"]}], "-", 
   RowBox[{
    SubscriptBox["m", "d"], "*", "D", "*", 
    SubscriptBox["\[Gamma]", "m"]}]}]}]}], "Input",
 CellChangeTimes->{{3.6578349951593122`*^9, 3.65783508601048*^9}, {
   3.6578351276085663`*^9, 3.657835142431384*^9}, {3.657835172748931*^9, 
   3.657835173123654*^9}, {3.6578353966518106`*^9, 3.6578354275462*^9}, {
   3.65783797208996*^9, 3.657837999544742*^9}, 3.657838129034318*^9, {
   3.657907191583003*^9, 3.657907201565024*^9}, {3.657907676664372*^9, 
   3.657907683087576*^9}, {3.657908101694631*^9, 3.657908106892516*^9}, {
   3.659097053561223*^9, 3.65909709171319*^9}, {3.659097320194972*^9, 
   3.659097323553306*^9}, {3.659105663087964*^9, 3.659105681398448*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"D", " ", 
   SubscriptBox["\[Gamma]", "m"]}], "-", 
  RowBox[{"A", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.65783508851589*^9, 3.6578351438140583`*^9, 3.657835174439577*^9, 
   3.657835433877486*^9, 3.657838002636219*^9, 3.657838130528221*^9, 
   3.6578394641315737`*^9, 3.657907203276125*^9, 3.657907684999604*^9, 
   3.65790810848608*^9, 3.657918953092493*^9, 3.659096949362824*^9, {
   3.6590970720631866`*^9, 3.659097102594997*^9}, 3.6590973302343407`*^9, 
   3.6591021829352293`*^9, 3.659102350780675*^9, 3.6591056826296797`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", " ", "\[Alpha]", " ", 
   SubscriptBox["\[Gamma]", "m"]}], "-", 
  RowBox[{"A", " ", 
   SubscriptBox["m", "a"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
  RowBox[{"A", " ", "r", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"D", " ", 
      SubscriptBox["\[Gamma]", "m"]}], "-", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}]}], "-", 
  RowBox[{"A", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"D", " ", 
      SubscriptBox["\[Gamma]", "m"]}], "+", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}], " ", 
   SubscriptBox["\[Delta]", "max"]}]}]], "Output",
 CellChangeTimes->{
  3.65783508851589*^9, 3.6578351438140583`*^9, 3.657835174439577*^9, 
   3.657835433877486*^9, 3.657838002636219*^9, 3.657838130528221*^9, 
   3.6578394641315737`*^9, 3.657907203276125*^9, 3.657907684999604*^9, 
   3.65790810848608*^9, 3.657918953092493*^9, 3.659096949362824*^9, {
   3.6590970720631866`*^9, 3.659097102594997*^9}, 3.6590973302343407`*^9, 
   3.6591021829352293`*^9, 3.659102350780675*^9, 3.659105682642033*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "D"}], " ", "\[Alpha]", " ", 
   SubscriptBox["\[Gamma]", "m"]}], "-", 
  RowBox[{"D", " ", 
   SubscriptBox["m", "d"], " ", 
   SubscriptBox["\[Gamma]", "m"]}], "+", 
  RowBox[{"A", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"D", " ", 
      SubscriptBox["\[Gamma]", "m"]}], "+", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}], " ", 
   SubscriptBox["\[Delta]", "max"]}]}]], "Output",
 CellChangeTimes->{
  3.65783508851589*^9, 3.6578351438140583`*^9, 3.657835174439577*^9, 
   3.657835433877486*^9, 3.657838002636219*^9, 3.657838130528221*^9, 
   3.6578394641315737`*^9, 3.657907203276125*^9, 3.657907684999604*^9, 
   3.65790810848608*^9, 3.657918953092493*^9, 3.659096949362824*^9, {
   3.6590970720631866`*^9, 3.659097102594997*^9}, 3.6590973302343407`*^9, 
   3.6591021829352293`*^9, 3.659102350780675*^9, 3.659105682651333*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Equil", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dAdt", "\[Equal]", "0"}], ",", 
       RowBox[{"dDdt", "\[Equal]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"A", ",", "D"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.657835098187402*^9, 3.6578351135580072`*^9}, {
  3.657835184003831*^9, 3.657835185395637*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "\[Rule]", "0"}], ",", 
     RowBox[{"D", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"r", "-", 
          SubscriptBox["m", "a"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", 
          SubscriptBox["m", "d"]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", 
             SubscriptBox["m", "d"]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "-", 
             SubscriptBox["m", "a"], "+", 
             SubscriptBox["m", "d"]}], ")"}], " ", 
           SubscriptBox["\[Delta]", "max"]}]}], ")"}]}]]}], ",", 
     RowBox[{"D", "\[Rule]", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"r", "-", 
           SubscriptBox["m", "a"]}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", 
          SubscriptBox["m", "d"]}], ")"}], " ", 
        SubscriptBox["\[Delta]", "max"]}], 
       RowBox[{
        SubscriptBox["\[Gamma]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", 
             SubscriptBox["m", "d"]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "-", 
             SubscriptBox["m", "a"], "+", 
             SubscriptBox["m", "d"]}], ")"}], " ", 
           SubscriptBox["\[Delta]", "max"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", " ", "\[Alpha]"}], "+", 
          RowBox[{
           SubscriptBox["m", "d"], " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", 
             SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.657835114106292*^9, 3.657835151729498*^9, 3.657835186965685*^9, 
   3.657835436055895*^9, 3.657838012273365*^9, 3.6578381401965513`*^9, 
   3.657839473191437*^9, 3.657907212877651*^9, 3.657907687398191*^9, 
   3.657908111104912*^9, 3.657918962186084*^9, 3.659096949614099*^9, {
   3.659097078712851*^9, 3.6590971029033527`*^9}, 3.65909733065137*^9, {
   3.659102179162043*^9, 3.659102185979596*^9}, 3.659102352820961*^9, 
   3.659105689751813*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JacGen", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dAdt", ",", "A"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dAdt", ",", "D"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dDdt", ",", "A"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dDdt", ",", "D"}], "]"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.657835189691493*^9, 3.6578352395472317`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["m", "a"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
      RowBox[{"A", " ", "r", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["\[Gamma]", "g"]}], "-", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"D", " ", 
          SubscriptBox["\[Gamma]", "m"]}], "-", 
         RowBox[{"A", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{"A", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}], "2"], " ", 
       SubscriptBox["\[Delta]", "max"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", " ", 
          SubscriptBox["\[Gamma]", "m"]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}], ",", 
     RowBox[{
      RowBox[{"\[Alpha]", " ", 
       SubscriptBox["\[Gamma]", "m"]}], "-", 
      RowBox[{"A", " ", "r", " ", 
       SubscriptBox["\[Gamma]", "m"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
      RowBox[{"A", " ", 
       SubscriptBox["\[Gamma]", "m"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"A", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}], "2"], " ", 
       SubscriptBox["\[Delta]", "max"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", " ", 
          SubscriptBox["\[Gamma]", "m"]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Alpha]"}], " ", 
       SubscriptBox["\[Gamma]", "m"]}], "-", 
      RowBox[{
       SubscriptBox["m", "d"], " ", 
       SubscriptBox["\[Gamma]", "m"]}], "+", 
      RowBox[{"A", " ", 
       SubscriptBox["\[Gamma]", "m"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.657835240606516*^9, 3.65783543827591*^9, 3.657838014960504*^9, 
   3.657838145599725*^9, 3.65783947506275*^9, 3.657907222714848*^9, 
   3.657907696034635*^9, 3.657908114402459*^9, 3.657918966578454*^9, 
   3.6590969496543903`*^9, {3.659097098569437*^9, 3.659097102947815*^9}, 
   3.659097330690515*^9, 3.659102354715809*^9, 3.659105690166717*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Jtriv", "=", 
  RowBox[{"JacGen", "/.", 
   RowBox[{"Equil", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.657835244684657*^9, 3.657835261170986*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
      RowBox[{
       SubscriptBox["m", "a"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ",", 
     RowBox[{"\[Alpha]", " ", 
      SubscriptBox["\[Gamma]", "m"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Alpha]"}], " ", 
       SubscriptBox["\[Gamma]", "m"]}], "-", 
      RowBox[{
       SubscriptBox["m", "d"], " ", 
       SubscriptBox["\[Gamma]", "m"]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.657835262007155*^9, 3.657835444538683*^9, 
  3.65783801783891*^9, 3.657838150197969*^9, 3.657839477897621*^9, 
  3.6579072285360413`*^9, 3.657907699061263*^9, 3.657908115980966*^9, 
  3.657918995000061*^9, 3.6590969496978073`*^9, 3.65909710299714*^9, 
  3.6590973307346087`*^9, 3.659102356994766*^9, 3.6591056902143784`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Jint", "=", 
  RowBox[{"JacGen", "/.", 
   RowBox[{"Equil", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.657835263563579*^9, 3.65783527190707*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["m", "a"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
      FractionBox[
       RowBox[{"r", " ", 
        RowBox[{"(", 
         RowBox[{"r", "-", 
          SubscriptBox["m", "a"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", 
          SubscriptBox["m", "d"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["\[Gamma]", "g"]}], "-", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}]}], 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", 
           SubscriptBox["m", "d"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "-", 
           SubscriptBox["m", "a"], "+", 
           SubscriptBox["m", "d"]}], ")"}], " ", 
         SubscriptBox["\[Delta]", "max"]}]}]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"r", "-", 
          SubscriptBox["m", "a"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", 
          SubscriptBox["m", "d"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
        SubscriptBox["\[Delta]", "max"]}], 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", 
           SubscriptBox["m", "d"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "-", 
           SubscriptBox["m", "a"], "+", 
           SubscriptBox["m", "d"]}], ")"}], " ", 
         SubscriptBox["\[Delta]", "max"]}]}]], "+", 
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "-", 
             SubscriptBox["m", "a"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", 
             SubscriptBox["m", "d"]}], ")"}]}], 
          RowBox[{
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "+", 
              SubscriptBox["m", "d"]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r", "-", 
              SubscriptBox["m", "a"], "+", 
              SubscriptBox["m", "d"]}], ")"}], " ", 
            SubscriptBox["\[Delta]", "max"]}]}]], "-", 
         FractionBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", 
              SubscriptBox["m", "a"]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", 
             SubscriptBox["m", "d"]}], ")"}], " ", 
           SubscriptBox["\[Delta]", "max"]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                SubscriptBox["m", "d"]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r", "-", 
                SubscriptBox["m", "a"], "+", 
                SubscriptBox["m", "d"]}], ")"}], " ", 
              SubscriptBox["\[Delta]", "max"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", "\[Alpha]"}], "+", 
             RowBox[{
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]]}], 
        ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "-", 
             SubscriptBox["m", "a"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", 
             SubscriptBox["m", "d"]}], ")"}]}], 
          RowBox[{
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "+", 
              SubscriptBox["m", "d"]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r", "-", 
              SubscriptBox["m", "a"], "+", 
              SubscriptBox["m", "d"]}], ")"}], " ", 
            SubscriptBox["\[Delta]", "max"]}]}]], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", 
              SubscriptBox["m", "a"]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", 
             SubscriptBox["m", "d"]}], ")"}], " ", 
           SubscriptBox["\[Delta]", "max"]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                SubscriptBox["m", "d"]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r", "-", 
                SubscriptBox["m", "a"], "+", 
                SubscriptBox["m", "d"]}], ")"}], " ", 
              SubscriptBox["\[Delta]", "max"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", "\[Alpha]"}], "+", 
             RowBox[{
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]]}], 
        ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Alpha]", " ", 
       SubscriptBox["\[Gamma]", "m"]}], "-", 
      FractionBox[
       RowBox[{"r", " ", 
        RowBox[{"(", 
         RowBox[{"r", "-", 
          SubscriptBox["m", "a"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", 
          SubscriptBox["m", "d"]}], ")"}], " ", 
        SubscriptBox["\[Gamma]", "m"]}], 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", 
           SubscriptBox["m", "d"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "-", 
           SubscriptBox["m", "a"], "+", 
           SubscriptBox["m", "d"]}], ")"}], " ", 
         SubscriptBox["\[Delta]", "max"]}]}]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"r", "-", 
          SubscriptBox["m", "a"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", 
          SubscriptBox["m", "d"]}], ")"}], " ", 
        SubscriptBox["\[Gamma]", "m"], " ", 
        SubscriptBox["\[Delta]", "max"]}], 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", 
           SubscriptBox["m", "d"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "-", 
           SubscriptBox["m", "a"], "+", 
           SubscriptBox["m", "d"]}], ")"}], " ", 
         SubscriptBox["\[Delta]", "max"]}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"r", "-", 
          SubscriptBox["m", "a"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", 
          SubscriptBox["m", "d"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
        SubscriptBox["\[Delta]", "max"]}], 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", 
           SubscriptBox["m", "d"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "-", 
           SubscriptBox["m", "a"], "+", 
           SubscriptBox["m", "d"]}], ")"}], " ", 
         SubscriptBox["\[Delta]", "max"]}]}]], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "-", 
             SubscriptBox["m", "a"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", 
             SubscriptBox["m", "d"]}], ")"}]}], 
          RowBox[{
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "+", 
              SubscriptBox["m", "d"]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r", "-", 
              SubscriptBox["m", "a"], "+", 
              SubscriptBox["m", "d"]}], ")"}], " ", 
            SubscriptBox["\[Delta]", "max"]}]}]], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"r", "-", 
              SubscriptBox["m", "a"]}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", 
             SubscriptBox["m", "d"]}], ")"}], " ", 
           SubscriptBox["\[Delta]", "max"]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "+", 
                SubscriptBox["m", "d"]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r", "-", 
                SubscriptBox["m", "a"], "+", 
                SubscriptBox["m", "d"]}], ")"}], " ", 
              SubscriptBox["\[Delta]", "max"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", "\[Alpha]"}], "+", 
             RowBox[{
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]]}], 
        ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Alpha]"}], " ", 
       SubscriptBox["\[Gamma]", "m"]}], "-", 
      RowBox[{
       SubscriptBox["m", "d"], " ", 
       SubscriptBox["\[Gamma]", "m"]}], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"r", "-", 
          SubscriptBox["m", "a"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Alpha]", "+", 
          SubscriptBox["m", "d"]}], ")"}], " ", 
        SubscriptBox["\[Gamma]", "m"], " ", 
        SubscriptBox["\[Delta]", "max"]}], 
       RowBox[{
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", 
           SubscriptBox["m", "d"]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "-", 
           SubscriptBox["m", "a"], "+", 
           SubscriptBox["m", "d"]}], ")"}], " ", 
         SubscriptBox["\[Delta]", "max"]}]}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.65783527240974*^9, 3.657835446424217*^9, 
  3.6578380196713877`*^9, 3.657838151949204*^9, 3.657839479686924*^9, 
  3.6579072305074587`*^9, 3.6579077016581707`*^9, 3.6579081175200233`*^9, 
  3.657918997926833*^9, 3.659096949743869*^9, 3.659097103045516*^9, 
  3.659097330771139*^9, 3.659102359162525*^9, 3.659105690264052*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Jtriv", "//", "Eigenvalues"}], "]"}]], "Input",
 CellChangeTimes->{{3.6578356394460297`*^9, 3.6578356420303164`*^9}, {
  3.657835722328991*^9, 3.6578357281133413`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]", "+", 
       SubscriptBox["m", "d"]}], ")"}]}], " ", 
    SubscriptBox["\[Gamma]", "m"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"r", "-", 
      SubscriptBox["m", "a"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.657835642430519*^9, 3.657835730329527*^9, 3.657838038907131*^9, 
   3.657838157848124*^9, 3.6578394859728603`*^9, 3.657907235708284*^9, 
   3.657907706322336*^9, 3.6579081198725777`*^9, 3.657919121921894*^9, 
   3.6590969497952642`*^9, {3.659097103095478*^9, 3.6590971124629374`*^9}, 
   3.659097330823802*^9, 3.6591056990115757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A1", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"-", 
    RowBox[{"Tr", "[", "Jint", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"A2", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Det", "[", "Jint", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.659108590396988*^9, 3.659108592763535*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"r", "-", 
       SubscriptBox["m", "a"]}], ")"}], " ", 
     SubscriptBox["\[Gamma]", "g"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", 
           SubscriptBox["m", "d"]}], ")"}], "2"]}], "+", 
       RowBox[{"2", " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", 
           SubscriptBox["m", "d"]}], ")"}], "2"], " ", 
        SubscriptBox["\[Delta]", "max"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[Alpha]", " ", 
           SubscriptBox["m", "a"]}], "+", 
          RowBox[{"2", " ", "\[Alpha]", " ", 
           SubscriptBox["m", "d"]}], "+", 
          SubsuperscriptBox["m", "d", "2"]}], ")"}], " ", 
        SubsuperscriptBox["\[Delta]", "max", "2"]}]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["\[Gamma]", "m"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", 
           SubscriptBox["m", "d"]}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"r", "+", "\[Alpha]", "-", 
          SubscriptBox["m", "a"], "+", 
          SubscriptBox["m", "d"]}], ")"}]}], "+", 
       RowBox[{"2", " ", "r", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[Alpha]", "+", 
           SubscriptBox["m", "d"]}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"r", "-", 
          SubscriptBox["m", "a"], "+", 
          SubscriptBox["m", "d"]}], ")"}], " ", 
        SubscriptBox["\[Delta]", "max"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"r", "-", 
          SubscriptBox["m", "a"], "+", 
          SubscriptBox["m", "d"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[Alpha]", " ", 
           SubscriptBox["m", "a"]}], "+", 
          RowBox[{
           SubscriptBox["m", "d"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", 
             SubscriptBox["m", "d"]}], ")"}]}]}], ")"}], " ", 
        SubsuperscriptBox["\[Delta]", "max", "2"]}]}], ")"}]}]}], ")"}], "/", 
  
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "+", 
         SubscriptBox["m", "d"]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "-", 
         SubscriptBox["m", "a"], "+", 
         SubscriptBox["m", "d"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"r", " ", "\[Alpha]"}], "+", 
      RowBox[{
       SubscriptBox["m", "d"], " ", 
       RowBox[{"(", 
        RowBox[{"r", "+", 
         SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.659105732278365*^9, 3.659108598441864*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"r", "-", 
    SubscriptBox["m", "a"]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"\[Alpha]", "+", 
    SubscriptBox["m", "d"]}], ")"}], " ", 
  SubscriptBox["\[Gamma]", "m"], " ", 
  RowBox[{"(", 
   RowBox[{
    SubscriptBox["\[Gamma]", "g"], "+", 
    SubscriptBox["\[Gamma]", "m"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.659105732278365*^9, 3.659108598501981*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"A1", "\[Equal]", "0"}], ",", 
   SubscriptBox["m", "a"]}], "]"}]], "Input",
 CellChangeTimes->{{3.659108583053801*^9, 3.659108655550557*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["m", "a"], "\[Rule]", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]", " ", 
           SubscriptBox["\[Gamma]", "g"], " ", 
           SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
          RowBox[{"\[Alpha]", " ", 
           SubscriptBox["\[Gamma]", "m"], " ", 
           SubsuperscriptBox["\[Delta]", "max", "2"]}]}], ")"}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", 
         SubscriptBox["\[Gamma]", "g"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["r", "2"], " ", "\[Alpha]", " ", 
         SubscriptBox["m", "d"], " ", 
         SubscriptBox["\[Gamma]", "g"]}], "+", 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SubsuperscriptBox["m", "d", "2"], " ", 
         SubscriptBox["\[Gamma]", "g"]}], "+", 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", 
         SubscriptBox["\[Gamma]", "m"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["r", "2"], " ", "\[Alpha]", " ", 
         SubscriptBox["m", "d"], " ", 
         SubscriptBox["\[Gamma]", "m"]}], "+", 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SubsuperscriptBox["m", "d", "2"], " ", 
         SubscriptBox["\[Gamma]", "m"]}], "+", 
        RowBox[{"2", " ", "r", " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", 
         SubscriptBox["\[Gamma]", "g"], " ", 
         SubscriptBox["\[Delta]", "max"]}], "+", 
        RowBox[{"4", " ", "r", " ", "\[Alpha]", " ", 
         SubscriptBox["m", "d"], " ", 
         SubscriptBox["\[Gamma]", "g"], " ", 
         SubscriptBox["\[Delta]", "max"]}], "+", 
        RowBox[{"2", " ", "r", " ", 
         SubsuperscriptBox["m", "d", "2"], " ", 
         SubscriptBox["\[Gamma]", "g"], " ", 
         SubscriptBox["\[Delta]", "max"]}], "+", 
        RowBox[{"2", " ", "r", " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", 
         SubscriptBox["\[Gamma]", "m"], " ", 
         SubscriptBox["\[Delta]", "max"]}], "+", 
        RowBox[{"4", " ", "r", " ", "\[Alpha]", " ", 
         SubscriptBox["m", "d"], " ", 
         SubscriptBox["\[Gamma]", "m"], " ", 
         SubscriptBox["\[Delta]", "max"]}], "+", 
        RowBox[{"2", " ", "r", " ", 
         SubsuperscriptBox["m", "d", "2"], " ", 
         SubscriptBox["\[Gamma]", "m"], " ", 
         SubscriptBox["\[Delta]", "max"]}], "+", 
        RowBox[{"2", " ", "r", " ", "\[Alpha]", " ", 
         SubscriptBox["\[Gamma]", "g"], " ", 
         SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
        RowBox[{"2", " ", "\[Alpha]", " ", 
         SubscriptBox["m", "d"], " ", 
         SubscriptBox["\[Gamma]", "g"], " ", 
         SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
        RowBox[{
         SubsuperscriptBox["m", "d", "2"], " ", 
         SubscriptBox["\[Gamma]", "g"], " ", 
         SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
        RowBox[{"2", " ", "r", " ", "\[Alpha]", " ", 
         SubscriptBox["\[Gamma]", "m"], " ", 
         SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
        RowBox[{"2", " ", "\[Alpha]", " ", 
         SubscriptBox["m", "d"], " ", 
         SubscriptBox["\[Gamma]", "m"], " ", 
         SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
        RowBox[{
         SubsuperscriptBox["m", "d", "2"], " ", 
         SubscriptBox["\[Gamma]", "m"], " ", 
         SubsuperscriptBox["\[Delta]", "max", "2"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", " ", "\[Alpha]"}], "+", 
           RowBox[{"r", " ", 
            SubscriptBox["m", "d"]}], "+", 
           RowBox[{
            SubscriptBox["m", "d"], " ", 
            SubscriptBox["\[Delta]", "max"]}]}], ")"}], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["r", "2"], " ", "\[Alpha]", " ", 
             SubscriptBox["m", "d"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["r", "2"], " ", "\[Alpha]", " ", 
             SubscriptBox["m", "d"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["r", "2"], " ", 
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"]}], "+", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "m", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["r", "2"], " ", "\[Alpha]", " ", 
             SubscriptBox["m", "d"], " ", 
             SubsuperscriptBox["\[Gamma]", "m", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "m", "2"]}], "+", 
            RowBox[{"4", " ", "r", " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"6", " ", "r", " ", "\[Alpha]", " ", 
             SubscriptBox["m", "d"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"2", " ", "r", " ", 
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"8", " ", "r", " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"12", " ", "r", " ", "\[Alpha]", " ", 
             SubscriptBox["m", "d"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"4", " ", "r", " ", 
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"4", " ", "r", " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "m", "2"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"6", " ", "r", " ", "\[Alpha]", " ", 
             SubscriptBox["m", "d"], " ", 
             SubsuperscriptBox["\[Gamma]", "m", "2"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"2", " ", "r", " ", 
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "m", "2"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"], " ", 
             SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
            RowBox[{"4", " ", "\[Alpha]", " ", 
             SubscriptBox["m", "d"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"], " ", 
             SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
            RowBox[{
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"], " ", 
             SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"], " ", 
             SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
            RowBox[{"4", " ", "\[Alpha]", " ", 
             SubscriptBox["m", "d"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"], " ", 
             SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
            RowBox[{"2", " ", 
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"], " ", 
             SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
            RowBox[{
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "m", "2"], " ", 
             SubsuperscriptBox["\[Delta]", "max", "2"]}]}], ")"}]}]}]}], 
       ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["m", "a"], "\[Rule]", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]", " ", 
           SubscriptBox["\[Gamma]", "g"], " ", 
           SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
          RowBox[{"\[Alpha]", " ", 
           SubscriptBox["\[Gamma]", "m"], " ", 
           SubsuperscriptBox["\[Delta]", "max", "2"]}]}], ")"}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", 
         SubscriptBox["\[Gamma]", "g"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["r", "2"], " ", "\[Alpha]", " ", 
         SubscriptBox["m", "d"], " ", 
         SubscriptBox["\[Gamma]", "g"]}], "+", 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SubsuperscriptBox["m", "d", "2"], " ", 
         SubscriptBox["\[Gamma]", "g"]}], "+", 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", 
         SubscriptBox["\[Gamma]", "m"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["r", "2"], " ", "\[Alpha]", " ", 
         SubscriptBox["m", "d"], " ", 
         SubscriptBox["\[Gamma]", "m"]}], "+", 
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         SubsuperscriptBox["m", "d", "2"], " ", 
         SubscriptBox["\[Gamma]", "m"]}], "+", 
        RowBox[{"2", " ", "r", " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", 
         SubscriptBox["\[Gamma]", "g"], " ", 
         SubscriptBox["\[Delta]", "max"]}], "+", 
        RowBox[{"4", " ", "r", " ", "\[Alpha]", " ", 
         SubscriptBox["m", "d"], " ", 
         SubscriptBox["\[Gamma]", "g"], " ", 
         SubscriptBox["\[Delta]", "max"]}], "+", 
        RowBox[{"2", " ", "r", " ", 
         SubsuperscriptBox["m", "d", "2"], " ", 
         SubscriptBox["\[Gamma]", "g"], " ", 
         SubscriptBox["\[Delta]", "max"]}], "+", 
        RowBox[{"2", " ", "r", " ", 
         SuperscriptBox["\[Alpha]", "2"], " ", 
         SubscriptBox["\[Gamma]", "m"], " ", 
         SubscriptBox["\[Delta]", "max"]}], "+", 
        RowBox[{"4", " ", "r", " ", "\[Alpha]", " ", 
         SubscriptBox["m", "d"], " ", 
         SubscriptBox["\[Gamma]", "m"], " ", 
         SubscriptBox["\[Delta]", "max"]}], "+", 
        RowBox[{"2", " ", "r", " ", 
         SubsuperscriptBox["m", "d", "2"], " ", 
         SubscriptBox["\[Gamma]", "m"], " ", 
         SubscriptBox["\[Delta]", "max"]}], "+", 
        RowBox[{"2", " ", "r", " ", "\[Alpha]", " ", 
         SubscriptBox["\[Gamma]", "g"], " ", 
         SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
        RowBox[{"2", " ", "\[Alpha]", " ", 
         SubscriptBox["m", "d"], " ", 
         SubscriptBox["\[Gamma]", "g"], " ", 
         SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
        RowBox[{
         SubsuperscriptBox["m", "d", "2"], " ", 
         SubscriptBox["\[Gamma]", "g"], " ", 
         SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
        RowBox[{"2", " ", "r", " ", "\[Alpha]", " ", 
         SubscriptBox["\[Gamma]", "m"], " ", 
         SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
        RowBox[{"2", " ", "\[Alpha]", " ", 
         SubscriptBox["m", "d"], " ", 
         SubscriptBox["\[Gamma]", "m"], " ", 
         SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
        RowBox[{
         SubsuperscriptBox["m", "d", "2"], " ", 
         SubscriptBox["\[Gamma]", "m"], " ", 
         SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", " ", "\[Alpha]"}], "+", 
           RowBox[{"r", " ", 
            SubscriptBox["m", "d"]}], "+", 
           RowBox[{
            SubscriptBox["m", "d"], " ", 
            SubscriptBox["\[Delta]", "max"]}]}], ")"}], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["r", "2"], " ", "\[Alpha]", " ", 
             SubscriptBox["m", "d"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["r", "2"], " ", "\[Alpha]", " ", 
             SubscriptBox["m", "d"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["r", "2"], " ", 
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"]}], "+", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "m", "2"]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["r", "2"], " ", "\[Alpha]", " ", 
             SubscriptBox["m", "d"], " ", 
             SubsuperscriptBox["\[Gamma]", "m", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "m", "2"]}], "+", 
            RowBox[{"4", " ", "r", " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"6", " ", "r", " ", "\[Alpha]", " ", 
             SubscriptBox["m", "d"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"2", " ", "r", " ", 
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"8", " ", "r", " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"12", " ", "r", " ", "\[Alpha]", " ", 
             SubscriptBox["m", "d"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"4", " ", "r", " ", 
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"4", " ", "r", " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "m", "2"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"6", " ", "r", " ", "\[Alpha]", " ", 
             SubscriptBox["m", "d"], " ", 
             SubsuperscriptBox["\[Gamma]", "m", "2"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"2", " ", "r", " ", 
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "m", "2"], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"], " ", 
             SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
            RowBox[{"4", " ", "\[Alpha]", " ", 
             SubscriptBox["m", "d"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"], " ", 
             SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
            RowBox[{
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "g", "2"], " ", 
             SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Alpha]", "2"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"], " ", 
             SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
            RowBox[{"4", " ", "\[Alpha]", " ", 
             SubscriptBox["m", "d"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"], " ", 
             SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
            RowBox[{"2", " ", 
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubscriptBox["\[Gamma]", "g"], " ", 
             SubscriptBox["\[Gamma]", "m"], " ", 
             SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
            RowBox[{
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubsuperscriptBox["\[Gamma]", "m", "2"], " ", 
             SubsuperscriptBox["\[Delta]", "max", "2"]}]}], ")"}]}]}]}], 
       ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.659108650191668*^9, 3.6591086566983023`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Parms", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", "\[Rule]", "2"}], ",", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "\[Rule]", ".02"}], ",", 
    RowBox[{
     SubscriptBox["\[Gamma]", "m"], "\[Rule]", ".01"}], ",", 
    RowBox[{"\[Alpha]", "\[Rule]", ".03"}], ",", 
    RowBox[{
     SubscriptBox["\[Delta]", "max"], "\[Rule]", ".1"}], ",", 
    RowBox[{
     SubscriptBox["m", "a"], "\[Rule]", ".01"}], ",", 
    RowBox[{
     SubscriptBox["m", "d"], "\[Rule]", "0.001"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.657836791101138*^9, 3.6578369032375307`*^9}, {
   3.657837047275097*^9, 3.6578370476094503`*^9}, {3.6578370873625307`*^9, 
   3.6578371032968407`*^9}, {3.657838072482644*^9, 3.657838077246369*^9}, {
   3.657838806716035*^9, 3.6578388241087217`*^9}, {3.6578388573193693`*^9, 
   3.6578388706199827`*^9}, {3.657838952662613*^9, 3.657838958276593*^9}, 
   3.6578395217017097`*^9, {3.657907280138755*^9, 3.657907284322071*^9}, 
   3.6579077540245857`*^9, {3.657910642976322*^9, 3.657910660424062*^9}, {
   3.659096974891604*^9, 3.6590969932342987`*^9}, 3.659097034480784*^9, {
   3.659098021272317*^9, 3.659098042167173*^9}, {3.6591033681553993`*^9, 
   3.659103368905095*^9}, 3.65910343242725*^9, 3.6591034929034977`*^9, {
   3.659105741927082*^9, 3.659105751509512*^9}, {3.659110231027125*^9, 
   3.6591102312089977`*^9}, 3.659111799821974*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"r", "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["\[Gamma]", "g"], "\[Rule]", "0.02`"}], ",", 
   RowBox[{
    SubscriptBox["\[Gamma]", "m"], "\[Rule]", "0.01`"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "0.03`"}], ",", 
   RowBox[{
    SubscriptBox["\[Delta]", "max"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["m", "a"], "\[Rule]", "0.01`"}], ",", 
   RowBox[{
    SubscriptBox["m", "d"], "\[Rule]", "0.001`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6578369070610228`*^9, 3.657837049856925*^9, {3.657837096693191*^9, 
   3.6578371047034807`*^9}, 3.6578380793976517`*^9, 3.657838175746892*^9, {
   3.657838791250641*^9, 3.6578388249188957`*^9}, 3.657838872115847*^9, 
   3.6578389609803343`*^9, {3.657839512662703*^9, 3.657839527284305*^9}, 
   3.65790724998785*^9, {3.657907281558536*^9, 3.657907285159387*^9}, 
   3.657907712004046*^9, 3.6579077548681593`*^9, 3.657908125338825*^9, {
   3.657910645462639*^9, 3.657910662026609*^9}, 3.657920137479999*^9, 
   3.6590969598482533`*^9, 3.659097349140238*^9, {3.659098022993703*^9, 
   3.65909804274154*^9}, 3.659102365390751*^9, {3.659103369510894*^9, 
   3.6591033786078997`*^9}, 3.65910344861366*^9, 3.659103495326152*^9, 
   3.659105752347451*^9, 3.659110233690536*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Amax", "=", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Gamma]", "m"], "+", 
       SubscriptBox["\[Gamma]", "g"]}], ")"}]}], "/.", "Parms"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dmax", "=", 
   RowBox[{
    RowBox[{"1", "/", 
     SubscriptBox["\[Gamma]", "m"]}], "/.", "Parms"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.659097665364066*^9, 3.659097749965571*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"dAdt", "/.", "Parms"}], ",", 
   RowBox[{"{", 
    RowBox[{"A", ",", "0", ",", "Amax"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"D", ",", "0", ",", "Dmax"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Active\>\"", ",", "\"\<Dormant\>\"", ",", "\"\<dA/dt\>\""}],
      "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "Amax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "Dmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", ".5"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657836908736711*^9, 3.6578369297571297`*^9}, {
   3.6578369696376743`*^9, 3.6578369786476393`*^9}, {3.65783706367459*^9, 
   3.657837068698104*^9}, {3.657837107736948*^9, 3.657837151999578*^9}, {
   3.6578373168521023`*^9, 3.657837337706089*^9}, {3.6578374473695393`*^9, 
   3.657837478679192*^9}, {3.657838884437954*^9, 3.657838928303049*^9}, {
   3.657839532485478*^9, 3.657839580275837*^9}, 3.6578468279122057`*^9, {
   3.657907260020049*^9, 3.6579072612741623`*^9}, {3.6579081764531603`*^9, 
   3.6579081786430893`*^9}, {3.657908555030221*^9, 3.657908587019766*^9}, 
   3.6579098964949837`*^9, {3.657915124988982*^9, 3.6579151259886713`*^9}, {
   3.659097400494506*^9, 3.659097410517885*^9}, {3.659097441954111*^9, 
   3.65909746042412*^9}, {3.659097511823138*^9, 3.659097512941436*^9}, {
   3.6590976103063602`*^9, 3.659097644067556*^9}, {3.659097686584633*^9, 
   3.659097700982408*^9}, {3.659097763311123*^9, 3.6590977675748243`*^9}, 
   3.6591036007449903`*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJytnXlUT9sb/zNG0g1R5q6S6VKUFOkcMoXIPM8UkXkqGUuGa0zIlEhJhkil
VJonUSlJRWYZc42Z0k93nfdzvr/n/D5/3LV+/rnrvtZeu31eZ59n7/2cffbn
z5mLRs6prqampl1bTa3G7/9WGFXM0/qWZO129Yfv/s/3rY9pDpnuO8Xdukbz
L7e7atYQwSv+ztl9OjdeuHy6c/eumo2It3jYRadNaZbwtM/D9bZeLYgbL3Gd
EdkqX6i30PaZiaYB8Zm2DbIynAoFw+iTGr2z2xE/87V4eMq4e0LvOj+Nbb3+
Il5jfdHz4Gf3hbPBVf9MiC++p7nPVadE6DFiXKyJpinxMu1lo82e3hOSymvk
RDh3J76+Rf1Od0cXCcN9Lz62yu5B3KiyqImDwx2huN+Uz4kmPYkXRd7TLdG7
JTi+rlvH1suK+LB9hpM33E0WPu6NaJb90Zp4vR33M2fW9Bf6HL10IDhYJK4m
/YPnze2XxA3+7anuq1/mnXfNEOAZ3PG95iCvZXHkGfyZv09s50U3yDP4UesM
0dQ0jzyDT6j+/UpU9h3yDN7h2NR+HesXkmdwzT/Kn3m8LiTP4NXHJx2tul/w
DK6+Omnu1+0F5Bm87aJy2wZDb5Nn8EDXaxvaT84mz+AGKZ8PVp+ZRJ7BLcpH
OiQFniTP4PAJz5zD8841ydlV17esQ+Ka2ruWkGfwvOurF+f3iSXP4Gcdqzta
lmeQZ3ANTT39CwNvkWdw++jHJ86Y3SbP4MF9HlnsTswnz+BNjjd6NvV9PnkG
985zCdRLuE2ewQ0fNFob0zWXPIPvc0+65e15gzyD1yhPzfN4nUCewYfNTFcz
tD1JnsHhDZ45h2fO4XlB1xetr/xu1+P7NSd/Ge1KnsGtTz310dOOJs/gyzst
0O6/Po08g5eF3vw1IjKLPIMPWp7596FDt8gzeMfnszp/WpVLnsFbGps8tSi/
RZ7BjYabXHTUzSHP4Ot2pLepdimDPIMXt/f5Q31FPHkGX3uz9xGP1yfIMzj8
wDPn8Mw5PHMOzw3alo2rqq99hkGrjzs3kmfw4LX2CZNKIskzuNW7/Ch79RTy
DH7dbn7swEfXyTP42olzXzesuEmewUc2vmkTOjGLPIPbrTuU2vZ7JnkGX7z/
5jLn4lTyDD4vPPdAw4pY8gy+z+Jy92c7T5BncHiAZ87hmXN45hyeOYfnSZrf
05yL+4jTDPprzX+/mTyD642Leel7LoI8g6tfFmZN3p1InsFPv6jj1lsjjTyD
O92wjPuQmk6ewUdPzf3LLSWNPIPP8c1NLqyVTJ7BuzZdoaX7+/mCZ/BE//Y5
/U1OkGdwXC88cw7PnMMz5/DMOTxzDs9dalc8iXDuLx5Y6/Dr8ejt5Bl8k0n7
ho9dw8gzePbKM5pzdePJM/hG98CepqZJ5Bl8gnW9fbl7ksgz+JjTBY0HmCSQ
Z/BXbrqezQ0iyTP4Jy1fp8BcP/IMjuuCZ87hmXN45hyeOYdnzuGZc3iu9u//
2YpZBVvKJkbuIs/gZXW9e7a1DSXP4J1XGC0otY4mz+CXrbZ+GBF5jTyDe06P
ujk7PIY8g598GFXR2jycPINruTaqpb7CjzyDo/3wzDk8cw7PnMMz5/DMOTxz
Ds+cw/Ptb9Vb2HoNFWscGr3o5c695Bl84pPKmXN1L5Jn8Nif3679GhZBnsHn
LU1a1FvjCnkGn95v8grD3/cLnsFtnm097qjrR57B0U545hyeOYdnzuGZc3jm
HJ45h2fO4ZlzeM6r4g3txVYD5jgGxO0jz+A7XQqajMs8S57B7T1uNmgy7RJ5
Bh9gX1E4IvICeQZXO/Fz2Z5lx8kzcekfPHMOz5zDM+fwzDk8cw7PnMMz5/DM
OTxzDs8xK2sGOxePEC0/rpg24/1+8gw++68Qx/uOp8kzeLxu34yJJUHkGXzW
qtKgEZG+5BkcfxeeOYdnzuGZc3jmHJ45h2fO4ZlzeOYcnjmHZ87hOeBjLQuv
U6PE0X6e41oa+JBncOsHnpGzfq8r4Rn8ul3u/YYVx8gzOOqHZ87hmXN45hye
OYdnzuGZc3jmHJ45h2fO4ZlzeOYcnnctVk+NcB4jLrI7OLxw9GHyDN7BMLbh
7T7HyDO47l1x5ENXD/IMzj1zDs+cwzPn8Mw5PHMOz5zDM+fwzDk8cw7PnMMz
5/C86m2d0cXm48Tt308P3O95lDyD39u2IOyhqzd5Bkc98Mw5PHMOz5zDM+fw
zDk8cw7PnMMz5/DMOTxzDs+cwzPn8DzDSeNxZeV48fTpSKEqrsIzuNaDHueK
HLeQZ3DumXN45hyeOYdnzuGZc3jmHJ45h2fO4ZlzeOYcnjmHZ879q23RMdX8
KKzYdN13qJemeHrLuX4P9S4J8A9uNn/1edddI4RjS2s3tG0oiuC8fs5R/5uz
dY84Nx8vJvo0/O5z6BDVD950xEWbZcePUf3gqAdcVfuRh3Tx1I423XSJ6uH5
SZRHPUuPbdIf8ukg5TP5332SFbSvu+YTYbT52in2Xj+FdnNTA5zTTwiL1Cff
dpkqiuC8vFG97dcido4Xu/k9a/G5/VEqD47y8IB6djrPP9x4dx8qz9uP+tH+
Glfc2xbWOkrt5/WjPOq5NnnViR+FJ6g8bz/ag3qmuYX1edzJl9qjqr+ZmAQm
5n/8RfWoTd14sm733oq85c+/m+5Zs09QXBf688nZmurPHdpQ+VoHT71/fb+n
Ii+H58KzQmuPx1oT4mbFCZHXtloo8kt4vsLu7Wnf+/d/wbeW9q1oZm6uyJPg
OW0VMSPIopNAvPvoA0UPnpsq1vt43q0MLcLCBtsQb37KL3fa0a6KdSvihsa/
/wYS7xbp+GvBpS6K9Rfij0X7+2ov7g4mXvn+3ON31h0V6wjEMcMhXStqJAwj
vrJHgxi3sraK+TDiYZbf8cy28+X5m9bXg3nOxX8q5nWIq511RnT733mIWBo6
/f81T4s/+LLjFefGivEUcbtma3WT+IljiRuftlE3UNdWjAuBPteTZq2to+iH
Tp83ZrypZy3q5H7758LlBsQz88b/1A7pJT59e2zbN+t2xC0O3fln6RMrseNp
j9v6JvrE00yC8luOshSNP6fHp93uRjyitdcZvS09xdCj1eoO9ekit3/hp8Cp
X81F6wNRpy7U70m82au+g8M6WYjZOsfHtnQ3l8vnbja1OW4mJt22mhIfIBLf
VRgyae+t7uLS6++/343tTXzAyq9Jqwd1E1Niy962GdSPeINIt/stXUzFk0bd
Vt9a15f4G7tpq81fGYtLXAcWBb2T+9XABa1Wqhl0FX2COu7v0WYA8fcZdy2t
hnUSm/89d5ZwfAhxu0ZLfD38Oot26QVe567L/XDJyJ7TvJKNRP2AVT28Jg8n
rtv3ReWgWh1EjdbljXJd7eR61gzy0pjaRgxv/nRw68Ny/+m2+PqXBFdD8eTE
fZvijsj90O1rI+eq/vMoYL3Z//YfvTvJ/r219MXgnssrx24eSdwja+iEnfG6
4pvrmetmeY4mPtaiUK9ThLZ4QC+qy9VUuV85DmiasHaujmjva6NfK0Tuh1/j
3g+u+1RDLPPQ26L7Ue5v3ousfiyxEcT41xV/Gdx/S/FNVRxTVV5VnFTVb1XF
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
je//9nctI91zd4Or5Fmj19z5i4obiG8POy9Yo5NO/dxna9qmGmp1xQU9a1Wf
q3uL4nlfaZ+Ay5hmV75uz6dx88eC8/kOXveE461W5r+bLedXT3dZ6F9Nral4
8YN39xK9QpoHvrwy79u+U41ELR8t9Qnni2gePlbaN7L5dVafnkHFtK7M9U4Y
vKS4mqjzNv/Zxrr3aB3kfuxx0TivN8LVowYfjW8Vy3mts4u6GmU0Ewd0OO66
L1/OW942m78l0rmx2CZco1fKuFzKqzS/5nB/cENtsXOJS8bVDVmU10ralexw
1bmW2O/C/HdXWqUJtH4UE797Pe0gdvA3C8l9IOcJc2rGt733+7rrlz2xM9ZP
JZ9LMmLt224zFKOeX23St2U2+Wy0K3rNwuI/xYxjfxTuWZZHPucELLVbNKmV
OGxlHe3Sa3L+2fdXYp+2GR3F+AnJW82eynlCISl+wcLm7cW1WsVLtV7dIZ8P
t1w7eMW5rThqiUXqsLEF5HP90JhEtfg2Yt9N9zZ9bl9APg0aXH1r21Bf7N8n
Laj6zDtyniQ2aeuV853E2Vfj9m4PkfOEYRsTLqupdRBL/smxqcr/wOf4AXEl
tiONRA/3RemHB8dTntYv+6rZvS/y+0rEhzPnJzeocUmZj41p5Bhe3MRMfFvv
/B/Xusr5wPpfng1Wi+8mGveZaPykUzJ5nnp39sOq6/MZP79DWL0b5Dnk6pMV
tg1NxKbPa/5oP/kWea6wTGlyb2Vn8dfNw4NL9OR87KelpXcNt5mJ2fEfi7eH
yPnA/mMcFtp2MxVfe5wuSTLKI88HejyrsbC4q/hn+YnBs2rmkednTWcf8vIw
ERfpPmk9b1AueXb+mjJl4aTf8/FnTlPzP+SQ5y65jj+df5iJVm36dCm7LOcD
N4Q93+t1ylR8U6ZncPSHnHc1dHkaU/zFRBEHXkWknlITjRWeW1tf/RpwQpl3
nanu/Na5Vy8xdHnbxWfc5bxf6MvXm7yeWor23jnaB3skkucaN5z0ruy0EF2u
N7cy+p5OnkdfeHm+qr25kz9ZbtqWRZ5P7Zlro/awuxjStvPm/KVy3vWww1vt
K+d/z0+HD5ia+FnO+70atCCweGxPMexLqfeH1Czy3KvT615qapbivW9NfN/N
vkmet9d3umV4podoOSHPJSr7Onm+9+6Fg+1IczFep2V7e/U08pyX4mympm8l
jm+v0Wngo0DybBT0JsMwQ36/jP68evv8abZLLRVxOH3Bq0/OzS0U/psNn7fd
K1l+rw3/4Q1nmc1Zocy7uq+Naqhm0kd0uX8sxztfzvudK1s9xctDFJeXDvgw
2Cae/AfFLba3DRXEiVY3hvm8SCH/3068e+Y8yVpc+rZkbejE6+Tf1mPhmn/n
+9/XrT906Cb5b33e5ZThvD7ivZYBNRftSCf/g1pZvouIFUXvJxsWTBHTyP/i
3V8tq/bTudZ6FaiXkEz+jastrnvlprV4wP3hZT+tBPIcc8/S3PakMu/3zO7b
huIv8nt2eNaKi8x0HiJzeHae/s9faqL8vh6e4/ouSjR8Kb/fh+eJtectKD+k
zK+OXRXTxTaxn9h7QJOuG9rJeb91L9a4FDfpJ3Za4Xq64lgMeT49oVey83wb
0eqC2wyNgkTynH39u5ZafF9RZ11GwuNOqeS5vNfVCV46fcXmwf6fttjJ+dUP
gW7xzj/6id9f1zjb3CCRPDfTs6qnZt9PfOhnunXPsjjybLPtxxivUzaiaRvX
ae49I8nn7jtWI73MlPm9yIE/jxpuk/cVwOejyOjSiPvyPgT4rNtxTTfbbjKH
z25Heq4t9uyr8Fnp1iO33wNlHrVD1Wu00YPEmlNbGhR8uEA+Rz5et9/wzEBx
QXNHpznhkeTTdZT1w4iKAWIPceKLr9vjyOfJ5IqOtiMHiKFaYbUaVSSQz+vd
Y1cUB/YX10xIn7eympxHTfFbfy9i5yCx0/KUk3uWXSGfbxsI7WwfDxQPuM7p
4eBwkfpn70+xMc5/y/soEB8c5qxVV3uozKPOzBEWFqcOUnj+u09lpHNzmcNz
WOi1GmqL5X0X8HzPYN0wr2T578Jzrf29Dxk2lTk8567sWbZziTKP+tMp0aH4
+RBxl7HW0/MH5Dye4b2Nl5x7DRFDEkZ1vnkjjDzb2fX5Wbl7sPjVILr+fcco
8rzimtpAr6e2op91732eR6PJ8zHj+L2GlrbihQZFsRlO0eTZ5/Cmr5Wth4o3
9Gs/yOsTQP3zpVu1XYYZ8v4QeNYui78b0VLm8Gw5bYOB7VJlvrT79b7bDSco
83VTe1XPjzgv7zOB5y3nElrbVpc5PIe03OhUPFb+u/B8d5cY7nxWmS8NWNxb
o6CGMl+aNTtlk6HLcLFZtcpTHj3lfF15vsfNiJvDxE+O4j9mT+V8XeuB/fRs
2wwTo9VbmCb0u0yeB0XWmFW80k58NK1h81Lry+TTyXuzjm2ovL8F/XZfrf7T
imvLHJ6jq/Iwk+R9MvD8pDTpU2WIvK8GnjUnuAteNWUOz+rJ/QOdX8v1w7NJ
91rvKwWZw/OEwOReXt7y34XnTboenoYv5frh+exWm1sRvWUOz6udRCP9A8q8
qL3x7OyIzSNE/9x3cyaVnCLPT6uuy3iE6NxiooNl+Rny7OJn0My2yF78cefb
xcE2cv6zVZX/k8q8XGilf2+vocq83MCq+/JFmf8sWjxrq+EJZf5zUYek885D
lPnPN1MNZxRfU+blNlb5mafMyzXJeXLWuZEyLxdc5S1Wmf+07uP/pdJRmf9s
G/rnCTMdZf7T8tycKcXDRonGpx4addsk5+VuVvXnbyPFL3NN39QxOknP+/Zd
Tz9UlivznP/2k/nK/NsRt4DMiMbK/Nu//SdO3h8Fn8lvZzexdZI5fI6v6lc6
MofPO8Vt31VuUebf/n1euinzb7+GPrP0uifXA5//PkeeMofP9tdOeRh2lTl8
ahkbGE+4r8xztung+LpSd4y45PXJ7AZD5fxbxKNUbdvE0eI3p6ZPL57xpuf9
wUjPScVN5H1c8Lys3vMNhgnKPOc/4kAzLzNlns3jW+CE4hK5HnhuGlp7veE2
mcPzOSeHU86mMofnPgapGRH3lXnOa+PbrTUcocyzjWqw5aTzD7keeH6R8Twt
IkDmtD9n04C3lcNlDs/avQIb2n5X5jnLzxrGrg1U5jnrBc51MXw0Vty6y2NE
3D45z2am2z45oru8bw2e07O3vKx8oMxnTt5aqmW7XZnPLIwdlBhRIdcDz84r
g0orT8scnqsb16lvO1Lm8Hyg1LGb109lPrOjX9q44kBlPjMov30922bKPJvV
rq0mXsly/fCcM+DFmOKFMofnOZUD1xg2lTk8f79y2s85SZnPfNjeaMjJRcp8
5uc2Tuq2wePFXwt9Ltd/JefZthVn/OU1Wplna+ndYWTxL2We89LQbasMzyjz
nP1rvTzqPEqZ50zqOdi+OFWZZxv38cwKwyXKPNtr9t0N5Stmz4uPSFHmORu1
zHhWuUiZ59w7suMh5yfKPJviuxvJ/9Wkl08qeyjzbMPcbOvaPlbmOZ+Yneni
tUOZzwzru6rtNefPQtGMzTsDFkfTfrMZ/pudvZYp8xuoZ1n29qw5DgeofEZA
u8JUC2Ue9Y/Q15N1fo1XcFV5P+x/m/voVaGhj7xfDvvfzG9Nu+/dw5PWy9gv
Yeu19UpVe+Af7/fffG84b5+nG40jeB/XycdkzBmzoxQP8f7obMDwGo9cvem5
xvuOml3ylkwskfsh8sM5J++lDs6cJOeLJJ9/hudn12gUS3mPnxqxdfedMhCd
MpzXje8cQnmnWwfmtLti1018MaBDrzv+e+i6Nj4p8y1e2VuMiE43ej0ikq5r
/verfobf+ooZVyKutDY/T+X3zXd9HWHXV9y66OqrkDMeNO9t7P5rSbH5QPHo
sw3JYzKP0Lojvl5fG6/lQ8T4fivmXdu3gvwsrpo/ZA4VFyw2CArMld/n1q+a
p3nYiwOqZ/ffnRhA5U80eDK7uIu9GGN12VbrlQ95m9GybZCz/+/xq/eq8rbf
j1A9X6rmpXYjxS6Nno3p09KDyg85bGTutWC0KE6/4xjmPJ88+01N93X+e6xo
om0SJ7RcTv3Nt9GDfl2v+gortfyyHjueJM/fu3SKatKhk+J5mR/vNzl8rqni
efSJK8zUjemreK6Hp+/vZ/o/6yl4W1JT7a5FrjyfhweLfc7dNUR5XMb1nrC8
FDbtiTyO43qP+OeffBetHI/cWqvdu3e7lSIO6D2u9eq4g5zPQdzwT+3henq3
nGdAPxlpPOJkaZS8LkN8O3NC/+/SpvL8GZ77xUxa3GCa8vldc2Fq5K9F8ncf
qriq9v/X+/Jfr1fVfVTl4b/eX1Xe/n/dd1X+8b1wqPQ+wnJl5eOMqDj6/hS8
yOXe2seRU+k7YvAF8+cP+uuafB4deNnsB0/9F8vn0YH3fB1ztWofNb53AD80
KCtg7Ur5PDrwemsbBWY4FdH5MOB7tu6IrqyUz6MDN5xv+by1+V067wg8x7CZ
Ucf6+XSuFPiu8C5rWm3OofO7wMN7ll3/1iuFzkkD//rocLtO14LpO+urUp5/
9e0pgf2yYskb+IWvM9X3Ry4kb+BXv5x2M99/nbyBh4zvN3d3ony+HHjDnXNP
OxfL58uBb/eJ/9F9/x3yBq6zZuicF+/ukDfwi2aaTz1e55M38Ckplavqbc0j
b+B9Jg7r+3V7NnkDf1NQM+78wBTyBr5YfcCNhTsu0nl94Ohv+K6Wc/jUkt5f
RHSLmRf3OJp8glsUvXacrLGKfILX3fT0orggnXyCLxx65rWrTg75BH/dRcc7
bl8u+QR3fRE6ouxyHvkEb+ay2VB9RR75BM9++LemRsEt8gneUdjRqOzyTfIJ
/tBprsXRH8nkE9xl2/g/emtcpv4GDj/wyTl8cg6f1tJ7gU97mnXuWR5FPsH1
LIyGLoxcRz7Bx9f/89lgm1TyCT55Q4uSGzdukE/wpJy4DQ2G5pBPcCeLgNOB
uTnkE7xfmVvakE/Z5BO8pKmuU6vNmeQT/PBHvR4p45LJJ3j18ppTNtwNo34I
Dg/wyTl8cg6fnMPnQinfbvZu9T9h9SLJJ/jPwSZ6oqk7+QQP8pnSdEyzZPIJ
ft/x+e84mUE+wc2f3SlKrXODfIKHaRv/iH2cST7Bx70q67/tVzr5BNdf2iS6
/eQk8gmuZz8k3KI8nPrhQvYeAT45h0/O4ZNz+OQcPvG+YJldwWVj/QjyCf7G
xU7DVkM+vwL8u8Fhu2nvE8gn+NThF38/76nkE7y0fZewqv3e8Al+4GKj0130
U8kn+Pzn05NT6ySST/A07056Dg4R5BP8V1rbJz3Kt1H/BMf1wjPn8Mw5PHMO
z5zDM+fw7Cjl8y+e7b4q2CyMxq/Kf/8NEt9J57/BP8oXBzn9HPFoO3GUvyGd
I4f7gvJeU8/XyNsjn1uL8ibsHDmULzF3/TAiUj4vEeWvsPPlUN5nweadWq8S
iaP8DnbuHMqvsv868viUeOIof4adR4fyn5IDNlftiwZH+dbsnDqUN2x85sWr
ET7UHxzZexNw1AOOfsLLg/Py6D+8PDgvj37Fy4Pz8uhvvDw4L49+yMuD8/Lo
n7w8OC+P/nlQes/SZe6HiuNTLlI/BJ/qPvKfSwP3Un8Dz/77+O0fb+Tz9MAj
67X4XXsk9R/wN6WOG84duEz9BLxArH22+kx/uu/g/P5yjvvIOe4X57gvnMM/
5/DMOXxyDp/G0nuNoh0nNnV/eo58gt9pNmOeuek+8gm+6KReb+0joeQT/GpR
SP0LAy+RT3Dfkr8cXrw7Rc+RMXufAp+cwyfn8Mk5fHIOn5zDJ+fwyTl8cg6f
eC8zxnZq3U71z5BP8GGhix5fbbWffILrLTUYYut1jnyCLxy1xTyyVQD5BL/t
NHxyVf4E/RMc7YFnzuGZc3jmHJ45h2fO4ZlzeOYcnjmHZ87hGe9Tcms136Nv
HkCewVNt100SNA6SZ/Axxxu3WFrmT57BY1KiB4z4PX7BM39fA8+cwzPn8Mw5
PHMOz5zDM+fwzDk8c07naTAOz5zTOf/S+4vhiQVNmkw7QZ7BrR/tuJ302Uc+
/1/i7Q79UdR9/wH5/H/2HoTO/2eczv9nnM7/Z5zO/2eczv9nnM7/Z5zO/2ec
zv9nnM7/Z5zO/2eczv9nHJ7xvuZgRfteutpHyDN4+OojdoMeHSbP4Ouzst+1
NF9Bnvl7H3jmHJ45h2fO4ZlzeOYcnjmHZ8X7Kckz5/DMOTxzDs+cw7OO9B5k
38qTg6rPlMc1HfZ+BD45h0/O4ZNz+OQcPjmHT87hk3P45Bw+OYdPzuGTc/jk
fOVy28SzwWqUByu/Y5b27F604Dy6oNPC4gbEX/g9KD/647rgW7ZtpeeM5sSv
1/z4zTo6V5jbz3d69rI2xM20O+48dOiOsFHKf4ayfdGHS+zPln7rRFw8Z/pR
07JIKGw85oXLVDkf+Niqdmrb74XCnJhqPyrjuhH3PqV5of3ku8LaupP0Nd3l
vJ/Ft7DYN9VvCXUvqptW7eMEt71x/vqk3anC/rFh/fUGyHk/n6DQrbPDLwpt
KqaP9z1tTRx+7t7y7F61H5Fzo2ob25wN1qZ819v5NmPvO6YJ44+YOieZNCPu
0TJleJB7jpDS7GNx1bkr4AaTj9Yd+ilPKA8LMPKc0Yn4kanPY0ZE3hHqbKxs
W7V/F3xpmwkRl+vdEbzbnbPIXtaN+OTYyuTKyjzhnJT3Br8t7U+2aB66eIaP
JfFuM4PjN26LEJITprqXfuulyNfZz613oGo/Jec4B4/zRCn/jDyVibQ/ueGg
+7PUfvsCD1/5KOXFuxtCm/cDx2na/Em8a+e5No9cbwkL7o5KM9lhTFx/Z63Z
hra5QqLX2JW+7boRXxfh023Z8Wzhw191EyLO91Lkx9blhedZ/aHMp9Xu3XXZ
DAtlPi3zk+fE3tm6lBc6HvPaYYBJhrAu7WhucLA+8YjazVdU/T5ChpT/By+Q
9uW+r1ALcy7uSnzjz6djqvz/6XP51+YZvRR5p/PW0xtoJvVWcJzfyHnxsfd2
VfvUkW8ZEKtX4qh7XWg97+x7q91diXscSi8dkxlH77MU+Z8zGsOr3gtyPtf+
yowZdwUF12gcviO4Y29F/uFA9IzjJjsEBf/a7P/OPzyX8g8XWN6gg5Q3eMDy
A2FSfqCOijzAn2y9f05a7/dk6/pO0ro+WIrPfB1qrmL9nqhinT5MxXq8SMW6
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwt13eUVdUZxuGz756LBUVAIyIqDEWKDk2KIiAWwEQYpKrA0AIWEIaiAkO1
0S0hUUAgiQIz44AlMgwksUQBgZiCQNAsTVSwLZayFFxZJrH9Xt/9x5n93H3P
PXPOLt/3ncJxpYOm5LIsGxiyLNIO40892qKCLKvIZ9ntfPknvBnPwLvwM3gW
fh1vwTPxbvw01sVewxvwUPyizueoz/Xr0y6ivwP/oxy/gBdzzhv4EXwZ/RW4
HP+c/lfwJjwKv4zn4facswlvxUvo/wveiG/BL+Gj+Dj+H34Xv49P4nfwe/gE
PoI/x//FU/E2fCeuwQ/hv+NqvBT/Fc/Bu/BM/Byeh/fiuXg3noUfxAfxQlyG
d+J7cCWejF/F+/EO/Cnei5/GH+BLGZvtjHk92pY839m0Q2nP1fXpb1zg52uC
7+O7rnzXlrZv9Pj1p/+F4PsdgKuDx0DXvIh2Jb+vi2+Kfu4afGHO41GB6+Q8
TpX4rJzn9iq8IXhue+Knguf/crwev8S9reXzYa69Da/Af8PP43vxPvwsnov3
4Co8He/Ex/A3ONDewz01z7xmNE6X4VXBY3wtrsR1a2VZF847n/Ov5bgzjafW
WifOWR28TtvhlfhNvBp/jw9w/mt8Psb5dbhOW65zntZXGv/R9I/HVXgMHoMr
8Cg8GC/DQ/BoXI5LcAneiEfgofgRPBS3xP1wW3wNnoT74h54Ar4aj8Kb8Ejd
P96KJ+KL8Q0577ur8UTcB/fCd+DeujeNAc/VGU/AhbgbvhU3xVficfgC3BWP
xY1wF/wzrjNbawX3xW347kl8HS6l/3rcG0/FP8XFeAG+Ed+Ay3Ax7o/na53h
Vri/xh23xsW4Pb4E34g74H1pbI/gPWls38e70zj8G+9K4/kv/DJeh9/Cf8CP
44P4Fbwev40P5z3Hn+PX07y8h7fjh/F+/Ee8Ch/CL+LV+B94Gq7Bk3EprsaT
cAd8U85j1QWPxN3x5Xg07oHb4sFac7g7Ho97af/igbgjPpM1dilj24C+bhxj
tZfoL8KDtL5xR3xzznN0BR6jPYbb42E5z29nPCLnOe2Eh+c81wdo1zCnWc57
SPGhiPYL2k84PtbeZt330Sm0l3AvvfFm3AzXoi2OXrPX0V8VvMZ74U14udYp
LsdHaY9zHOFYk2LLtpDWLN6Pi7jWENyU9gmtF1xDf6X2Ft6Nv858fwczx8hl
tCeC88ByfFLxj/4p+FBI86NzcTvOKcWHQ5or/GZIMRsfCI7Bc/HR4PwwD3+I
O+IVuHn0uC3FX9LfSfeKW9C24PN8fHpw/tHYBs6t0tzzuWfKRa3oX8E532be
Xw2Cn+nrNO6K0ZqLStod/G4c3ljg8fsPx7HMz9KU33WnPY12Kn3NaJ/i8+DM
a2Y6bpw55+q3J3Q/afy+SmNYt8AxXPHws/Sd5l1z0ZiTu0XHuSb4Strx0fFf
+bF2el49t/KqYu9i/D1tG46G+g3XHZfy7xJ+21Xxv8A5cI7WA+dsVlxT/uHc
LbgnfhSH4BzRSHmKzyUpd8e0JrU229E/JNUGqhEa0j8rOGeW4Q+Cx0Xjc2rw
tXRNDYRiVQu4NDgeaJz3BseMsXhPcAy7GC/D03BLvDw4bzTDi4Ljq+LnA8HP
rGf/LnP80Fz8PjhGtlZfcCxXjH0wOB4rF98fXC8MwjuC94jW/K7geDMK7wye
/+NpHh/XONI+VuD51Nx9lr4/lvZak/jj9s7Oj461ynFr+HFtPh/C3XOuAerg
hcFxrkQ5NHi96Frau4qdI2lfDa6VivHW4HyovfCF1oDyYeaYpnjfGT9B/xzF
M10jOD6di6fjVpx/Jl4QHMPOwPOC41wDfFfw2tE1ZwbHzp/gqcFr4Rw8OTgf
KpfNDY67tfGc4JhXH98eHIPPxhOD45/q0luDc45q1duC863GagIeAFha2STF
B+UtTqpNPG6d8uB8+gvx//H10Tmtg+YiODe2x7/CC5UH8NrgGK/1WRYc+0/F
M4JzHf8iuyM4rp+CpwXnAf5lVhq8xk/DdwfH9dPxbK2f6DWsnNIZt6HvKto/
R8cx1aLrcL/MuU/1lPbOFs5bSf81mWvUtdG1n3LcL6PrJeW+AXk/g2qwX0fH
ba3NBdE1kup21WsD8XY9r+JF5hq+T957RnWa6jXt/XUa57zXhGo51aUX8Juv
tI/zzhmq/aZE7yPVOXdFj61qmBnRY6sa5u7odaW6SPXOkbTOZ0ePuWqPWdHr
UDXJQ9H1p+r8h3GPLL0vRNeoqs9P4lWZa3vtEcVC3d8D0fXkj7V6zuNWwbM8
lnKWarZC7r8wOFYPzzuHqaadnndOUq2uml0x8yPO+5DfLslce0yMjjPK3R+l
3KE887vo/KVasRHXyfO7DfQ9F52zVPsdjd6DOn9rdO5TzflkdDxRnVMVvX9V
I/02er5UF6nuHqN55LrPR8cZ1VTro/e46pwW/N+i4Hz0m+i4pDUwOcU01S1j
887TegepiY6fqo234BGZ67GmfG4e/M71bHScUa1VHX0PqusOa/4y19j3RdcS
qjPLovOm3hk3R+du1cz3R9cYqidLouOG6qLFqVZRzXlL9N5XbfnPlMf1nnVz
dHxQjb0ouoZRLbovOjeplhuWd92zAU+Kjv+qwWKB33Ea8v2J6HcEvRu+FV2T
6H0tx1Ge+d3w7VSf6L1vW6pD9L4QCvzepHfM7dF5Su8Ov4iuf/S+8HGqMfQ+
WM1xXnC9vSc6x6nmHx4dD1Uzn1XLsUD3NjI63qqerOHox+cz+P626PylunRE
dFxVjV1P95f5feqNVP+ovv0Be2nfoA==
          "]], Polygon3DBox[CompressedData["
1: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
icIaXXy6NFi7d+T3H5nju3K0ppc2WxKsv+Qzykctki9J80r7zwrWH3oTLc6t
WR9O8dON+hPB+ks5XPFaQ/mpMF8oVy4L1pZDSsegNMGGaA4Ut08M5kZpqOO5
NYu0lTTtitxvJGldxVQP6k8Fx9r2wrG2jT6VKzkHKBfoDTc0xa/eJ7OD9ZX6
9JIf5f62aiVrE61nR/SaG0pfJD3Sk9+vsFXL/N6Qz2gtM4J96ZPcerWyODI6
H0p/HgvOZ8qJ0qJqk+3DaP15PDifi4+lPVcHa+cWhblHHKTcpjGUG5el7y9Q
qipXUXYV3q/iS3Gm/vLn6uIj6avCfNgpfaNvpXmlfaWJ9Xb6ILpeEaw/lGOO
JT3zSvQapT3kE1q7+kirKGfrW+U85T7lvMOKtdL70ZnqbD8srN/15tPbTzlI
uX9L4nNpgs/T/qQVxOHSpsqB4vbTwfvXfHoLKidKe0tDKFcqB0qrKj8oNx4H
H82dM1/CfrbwXqTRTpQeT/NvTvPpjae1Px/89vtbYa7WGBpL31QkfxTPfFA4
F+qNqP56wyrXbQve31+xD8vM+RUpnyr3K0fXKp1TFXsXKBup36c9ZOY06XXl
cGkv5TTldmkcaR35jN5O0pB5Oj+dhzQpx5zdG6xVpckrg+8L1nPiYGltcZi4
WZpG2nZ4sNYRnyl3DAnWItJYersMC9ZeuiPN1So6F4sDpZWkmcSNelN9nPxb
b0lpXmnpMcFa+ELKPcrJ8kVpzirg+4O16IzEr48Eaytp8MvBA4O1uTSw3k6j
g7Wx+FnxMSpYayq3Vcmd7zWH3ij/TVyv3CRO75xiQrGhN9hl2AcEv83EQco1
jaK56XrKFSmmpZ+kR+pSnxasLZXjqmZ+E7VK/K98MD5Ya+pMdDZDg9+SegPy
l/UJfhtKQ0ufKUcpV01N/KD/4eh/Q3pz6P9ifYPfIjv1/yvsl+XWU3rT6G2j
N8zL0f8jkUv3Dv7fid4U0vsPBr819CY8k/Tgoeg3ld5WeiP9THkGfHnuN+QR
xYP+3wa+LVoPyCflm72C9fH/AYTKRVY=
          "]], Polygon3DBox[CompressedData["
1:eJwt1leMVUUcB+C7d7kiQRBRwSxNpCoCAlKkKRpAI11A2sLu0rdQlt4RkF4i
SpGSKGVBQETYXTARlbogqCDVB6WIJSYYA/FBYvsm5z78OTPf/Obce3fOzKFm
1theY+KxWGyaSqiKpVRKLNZAtUiNxSrcF4vN1q5q7B9VSftJvlUltKurp7XL
yf1q7kE3u8guqXNueMhYae3HVSPt8nJb5Rpo72Z71APssus49y/j+oRqbPyG
3E73O6F/Up1yvzmu5eXuqUe168tdltsgV6x/UB2W+4ylszz9MWo728LStOOq
k/mLze3AhsvNZFXYGNaCvc5mhO/GMll7lsHyWWWWzV5gw9h0lsbyWDs2hI1j
ldho9jzLZBPZYyyHNWd92TRWlmWwnayhfpa6yGro31O/y1UPv4+l6Kf4LX/r
N1TH2UOspeqnP8vccizL/f5it1k1VcTi+q3VAP0RchXZcLk2bCAbxR5mI9hd
dp09qHawO+w2O6//n9w6dis1WvND7Cd2S+X7bh/xveqasQJjQ1hb7UHa2TKP
mDsyrL/apX4wtt3YYLkslZmI1v4DNlS7o/Zo7fnm1jR3gjl32DVWXhWwu6xI
FaqbxnbxYeZ+rL9PXWc7WAY7pT1Le6f7vWjuAuONWBc2nOnG+vmnKevJxrLS
bBDbwZq5pvAN7E/tAtYk/M3klrNftE+zuTIb2Sa1z+duY1nGaxnvpmqyIyxX
bqHMIrUzET0HJ+TqyfRRdVgJmyG3Nvzt1V72KevNJulPVlvZh/J71PfGthlL
Z5+Hz9WeIjNVFbDKiWjfhu8SvtMW12ZyveTGy9zP0tkxNp4tC79N7UpEf4P6
2hVUXZlVLC0RnRfhO4fvXkHmGdXN3NEp0dkywFhj1pWNZJqx/qyJRg+WyxwF
sYFsSHL9w54vTK5tODeqhnnhjNDvm4jOjj3J/ZzqWizztVoWngv9HapIrqzc
Zu1WYQ8FKxXtr7DPyrpXVVVJriF71dw0/XAu9nX9jR3V+cO8xewyO6vGxqJz
qq2qZm5nuRy5N+VqGZvEv2Er2CHWk61mF9hadoQNZJtSo++8PB6dX+Ec6+1+
59hK9ol+L7m35S6ydewoG8Q2sqMsHOLrWTM2OTV6NvrEo/UO6944+azlxaPn
JzxHL7Ev2Ci2OpzP5uanRmfn4Hj0PIbnsqXcYdafzdOvITdM7iu2hBWybmwV
u8I2sRKWwd5jV9nmsJYsk72fGj3PM+PR+oR16uIzzrBFbH/oy61M7qM34tEa
h/dFd7njbEI8Ws+WctPlOvPnwsZNrvEM7ZNyU+W2svZsTng22RS2hbVjc5Pv
j43x6B0T3jUD3Ku9amXsX5mnku+FS3Lr5Y7JpLPNyf2RH4/2eNjrncw7yxaz
A/pd5VbIdWLZbEF4dtnE1GhfDo1H+yrsrzbmbme1w3tH1ZaZxQYlz8cTiehc
DefrZHaM3ZCb4X5X2NRwbrAf2Sz2HRucPPdKzN2vfyD57u5tvKFra1XFWHry
rD6ZiM7LcG7msWJ2IbxD5c+wHFbIzrNcdpplswPsHMthJSyXFbFvWR77kmUk
z+XTPqNY/6Cawo6zm3Iz5a6yZ9lrbAIrwwazgcnz7HgiemfsTp67dcP/B1Qd
/YXG+rBVcrtYR3PXhN/KlrLtrAN7i73CxrGlrF74/w+byy6wO2E92M/sZTaW
LQlnHZvKurPZ7F3WnC1kPdic8E5gLdgi1pVNY++wJmxeOPfZdLaGNWXz2f/t
CCoQ
          "]], 
         Polygon3DBox[{{1189, 816, 484, 485, 849, 1314}, {1305, 821, 831, 273,
           183, 1027}, {951, 950, 1304, 814, 827, 1308}, {1185, 810, 398, 42, 
          255, 1204}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtmHeUVsUZh+83996l9wVEIkLE2EgzRkOIhSLNeKLEUDRVBcTkiEpRE0XK
go0iVVBkATUnRmmacyJFQcxR6YIgLLAUpe/KssKyLEvJ8zu/+8ec97nvvDN3
vjvzlvna3D+41yMhiqKHc1EUI0+kUZQCNZCLkijqDK+Ff097A8N70fWCx8G/
hXPqZ9z1PK+EB8CH0Ad4Hfwz9Lcz9wNwV+RKnofBxfBy+HG4CF4GPwbv0DoY
ux6+Ad1HtKHwbvQfox8IH2b+PqxhKn294ULas+gfQd6FvgD93XAPeDj8a/hu
eCzcC76A/Bz7HyN3MudE+Cn0y+EH4QNwX+yn0d8H7gdPh/vC98Hz4X7wh9j3
x/4g3B39MPR3SI8cgn4Xa56T+Hf9BTkKmw30PQ1fjvwD/fcwx++Qr2HTGzka
m430PYNNf/hd+Bv9PngN/A/4n4zpo28Cj0G/Cf0I+Gv0M9A/C79Hu53nCvpH
0D7H5u/oziM/w+ZHyI9pT8B7ee8WbMfCQxK/U/u1Bv3Q1Pt0FP2q2HvXH16B
bjR8DJsv0Y+Dh6JfFntP74c/ir13D8Kb4QL4ca2NsQ/Bmxi7Iva3egB9Efq5
cE3kU6nXNwz9BmxGoh+c+Az2g1cxthKb+vTVRZ6m1YPrIKtojeD6yIu0S+B8
5FlaY7gBchLjb6L14LlWXhQtDZ4/hgfAneEa8DvBv6U2/FnwOYngFoxryjwJ
PBR9T/TVPDdB3xBZpnOhs0SbznMJNi9iMw0+Br8AvyI7eDw8Ay6FX9L5hJsz
TxP9LvkAc1wVfL6ug19m3dvoW89zKfZz4drYT0583tthMxmbQvS10L+MfjGt
C/xlNm4KNmex2cfzEZ4r6f9f7PMwED6K/owCA/Lb1H6e6GwiR6F+FJvjqf08
RX6BHIP+MfRv6kzDOxP7Sl94Je9ajX44PAD9p/CT8CB4CuMPYvc8/B1cQ3uC
LKflwTX1nVLHhTzkHto32FckXuMq5rkGuR/9UeQZ9DvgbXAZXKWzjs21yD+z
jk/lj8iD2HyH7hw2R+BK+CJ8CD4Jn4dPwjV5b23kTjX05egL9JuDfU1x5ZfM
OZc5J6Av5nks+pS2NPL+Xs4c++BWyHLkUdoRWkTffyLv+2X0bYY76BzAPSPH
K73/C7h98Bn/Cr4l+Bu8CzdB1kW/Db45+LzvhXvAB2gL4HzkycjnsoRWFXkd
+2nfZqz1VMW217hn4A6RY9oJ+M3Iv6uWYhw8AVmO/i14XOJ5y7IzfxH9+5HP
/AX4vchnviJ7l95Zmdk3oI3A5leRY7X2fxP8C9ZwBd/zHr7rcX1DuCP8OjyV
1hK7XJ59vQj7TsHxYDt8a7Cv74Q7B5/xxfAlyJmJf+sryDnBMX8t87Zm/huR
ndCXMfYN9AU65/B8eIxyBO2P2ARsm6EvRt8t2O93wV2UI+l/G74vZz/eA3dH
35YxfdE9l/hcb0R/U/CZmgfXCs4BygV9kLNixzrlIJ3l13VckFtps+FYvyW2
fykPvgrfGzlPnYUXRvYpfeOT2XduxRpuZu7ZifNbD3SLc85vOm9L4BLGFsKj
E+fY7vAi9A8xdmFwPB+k+iA4FzwMLw72632MnRY5fw1JndcVK46hn4N+FPxE
6jpAuWZY6nypuDEQXhCcC4anzv3KF+Ph3cF78Rbz9FZuhScqFgSfvZfgXcF7
tBWb5yLnjv3w9Mj58Xlsvgpew5PwquCcpVpG53wev/EF9NuDf7vqiPboC9Hv
ZZ6pkXP3n7IYoljSL9tr7XlZdqYPZme8IvOvaYxpJf9F1kscixSTdIYPZPpW
tC2RY3iLLFb0VM6IvUeqZxTblsAtkJcljhWK7eOxuSNyPVae+bbiy79i51nV
Km/DgyLXby/yG3cwxwn4r/CS4Jh/Gpt/Rz6fioUr4auDY+EKuG1wvFwOX4HM
T1xHqZ7axdhJkWuMWcx5Kjg+NKB9gn4ScrdyUeQapj5tNTwRORv76mCb85lf
NUbOUkxUHEBepTogsv4I/RMix/b5POfz3Ah5ZeKaU/lXa/oAbq3YmPi76Ztf
DI7JbYLPi/JgNXvXlDl2w101jvGTkZsZ1zrxXtfJcqzW3I6+/6K/U7kvzzlW
e3pdcC2mOuo4c66DJ+u9quvgW5AdlUdjx88foCsMriHX0Tc3uH5eD0/lfYd4
Pi2/hivgC/Bh5CJsmiNHol+LLFEejB0fFLeLY9dmqg2KUtdV2ut1mX+pnpTf
yC8u8K7q2HWXaoB5wTX2BtWutA60nto39J0UG1VjJY6lqg22pv6dWsO52HFM
+bd24nUqn7ZJXHOqTltCG4P9Wr0LbsCYepl/y7/O5VznjlQ+kp8F7/UpeFXq
eF2UuEYuUB7J+awpZzUNrq9Vh5Tm/M0UA5spx6feY52TM7SG2XvfZ67rcz5j
H9B+oxqDPS2m72vGnUocM3RHOK24n+c8rdzxtzSrZeFrE+do1YRVmZ9eGrw/
qpeO5lyD655yOOe6T3GjIfI11abBvnAi2AcbKffxvCZyHds28T1LtWvX7D7V
LWe/UZ79HvLVxPWh8pdq2Bvovy12XancXS+4ZlGtXkbfNYnzbH72fuXolsir
E+emJlndqjxYN7iuUWw/n/P32wF3DK5nlR/rIJ+OXQupHt6eOlcpd+8Pzmsh
2LcUw1cwz6icfVy5fCn2U+jbolwQrFf/nNQ+UyPr193nQ/Tl8DL4+8jK2DlR
NeHq1L6kHHFr6rm6JI73qj/36C6Z2vdUo+psq15dnnPsVxyrhD9J7Q+6Z83M
4nO7xL7cDV6gWiR1TIlVtyaux1Q36g6teHUjfTNi2+t3NU8cS1XHNkscS1U/
b8jyqe6STRP/LtXb67OcqzvpxizP6n69N3UsUHwYk+XohaynReL7gmrmmanP
U7X2OYvzujvn0d6JXPduTn2X0/2uNHa8Un1bkvquqDrnQOpvrXkUk1Qb1Aiu
2ZXT8+Rn9LVX7YJ8lHl+GPmbt0xcn6t+npz6HMin8rM7/s95Hhz7zqI71+Hs
zqNYp9ig/PKTYF/UmhsH5y7lkTO8T39ayEd+iu7SxDlLdwfFQcXDFNkkcS5Q
TihNPUb7tRT9Xbpf4NP/B2s5Y70=
          "]], Polygon3DBox[CompressedData["
1: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
+avz6Bd8FruwC2lPo68q/h1F67XJSS9sTXpGHCuu1ZobJ/1QN3pPGqXzVjyI
Y2LSQ9J70ht1kn6UvjiA/4rgPawTfUYNkz65ALxdNSjpxUrR+qB+ig+dt/Rk
Mek71QpxYGnSWydyayDVt8+D6//e6NhRzip3paknpPgT9+iONSfVY929pLFn
F8xh0t7SZNIPK4K12sJUv3UH0X1pf/Te6wzEJVnRe6kz1dmeiM49rUlrq6zn
M++B9uJk9Fq159r7I9Fr0Z5r70+Dp2Y+I51Vi+hY3q6Ypf190Xpufqq/0rgt
U/1V/kqjSquqZjaM1kzXpfxVvqqGqpZKUzWKvhNflfRYg2iN3Szlm/JLNVi1
WBrhimiNIK0gjd44WrNKLywL1rJVio4VvaPetalqfmZNMjZa07dI+uHKaE0r
bSuO0n1iI/48uIYdzl1TVasHBtfab7HLg/e0dnQO6feOpP3XmteBz829F9oj
/Vbl3O+jHNf+7gzOfcWszuN/qV7qN3V+/w1+F8WYzndXqr+KUeX2d+l8lRPa
i0opV6pEv9sh/DuTXlGu707nqxxT7H+fzl85qNw4nM67Pnh15hqhWtEhmr+k
OVSfdWfU3VEaQFpAHCQt/kDB3CRNrbM8yXwVRXOQYqGQm5uUczr7kDsXa0XX
ngy8FzwoOnfrJH2lGBDXnp07NhQjXyu3c8eOclqxUZI7vqWJjxbMidLKOiPV
rmLus5PG3l2wJpf2HoL/n5nvmLofqGapvh8IrmWqRR0Lrq+qsy9Gc0Ex1feK
3Pp/LXhw0TVtAnhHcK0bEx17F6Va90rS27WS3lQMbla+5Y7NNrm1ifhCdatf
NBcqP3XXU46pVtbOnXvKiY3i+ty5opzYJG7LnSuDo+/OdZMefin6/UqS3nku
+i6oO6L0hmr8Br1f7tqvnFWtrZE7l5Wz5eDzcufyIWkq8FbmGwGuHlyb9H2s
I75bwDUL1huKqV/njhXFzMXiTOZ7I/OdVHwXgue7V3uu3I7W87oT6m44EPx+
5jue7noDou93usPpLqeYfCrzNy/FqmqEuCfPXTvKEn/qLKWd9E1I38rmBd/X
9A1I37fmB9+fZuW+8+iu0y2ZvsXoDiWfNKi05vhgbapvavoeMzf4flcerVXF
8eJ6aURpxRnBeaRvXGe+JQXfdx6O1nbSePr2o29iqsWzgu+P26O1tDS3tPfO
aG0rDSotuiNai0vzSvuuj64tqjmqPfrmcqTgmNW3GH3j0reqd4PvC9ui1yPN
Lu2umK4UHDOKddUg1aJJwfcbaTRx5VfB2k2aVO8/J/i+uCG61qmGqZYpxy8J
zjHlvjjqgmBOFHetitau0tzS3roj6ftD3+C7kzhFcaP4Edco5s4NvkMpFv8P
Xw4BAg==
          "]], Polygon3DBox[CompressedData["
1:eJwt1nmw1WMcx/Fzz7nn3hbtbknaCBEz2aVGpYXEDIVkhhlpwwyF7EU7iW7K
Fq2WQYowQ92WW9nalSX3VrKkXbdo0+r1nd/543N+z+f9fJ7n9/x+v2c5TXs9
2O2BdCqVGkZZquXn1EwqdRl4OR3jj+enUv8qN6MSmUL+BB3kz6VzaJLcAeqk
7d15qdQ3ck1kxlMV7AKZpVgjfgzt4k+hd7CT6vdjf/C1qRaN19cOrES5TH/l
tBY7iR3CmtNCbavwG2k6v0qmL/ZeJnmYw9h5tIitKjOOjvJn0OdYDX403a5d
D3oTO6jtJOwy/tLoTzZTkEo9h/2lXEBT5Y7IXY89wo+Ta4E9jV2Tn5SDdeGb
GMdrWEPl1rLr1L3O5+mzM9ZSbgs2IcZGe3PPH+9hi7aZ+ChyF/EtaTL/plwr
7a7MS+6fr68/sY+Ul2HLaYXcXuwX7DD/H5Vhy7Hh2Gz+Wl2/xS/R/2LapjxH
3f1yB5W3KdejujQh9z3mK+/UdkfcO5u8vw/1UxPvro9mWDFWWbkFtkRdQ34s
VaSTXOSz8R1pO38afYwd1WYadrO+b6Jv8SqebQM2TXkl1kfuXbm+7tMnmzz3
LHX9lMuVpyqvkOst947cC9hurBq9i6X4F2k/XxTvAarMH6A/+To0Ezuk7fPY
Tr4qvY2dwKZiN+r/BpqLVza+Vlgj9UOxBpnkWy50XUB/KX8sd6/xlfKLaCv2
CXYfli1Ivtk92ndy/ULd2lg36ufzt+KT+cO0A6tPn2DH9HMM+4c/i+ZhBbk5
tI8/k5rS69mkv3b6akuz6EtsvvYltEXdbLn+WJnylHQyf2JMMbaXsCNYA/rM
ParnJ2v1dz4da4M25dp21KYDlVAp1hObEeuP76nt++63G1uJHcHGY5uwodjP
2EFsHLYTG4atxw5hxdiuTDKfy7BKVEhj3KMC+ynWAL0lt12uX24er1G/lP+K
qipXc70a/ym3N/WnTyPnHvdiX6s/Ra66a1v8Z6ypTHWsVqxt7BfsrJjfWCF2
JbYaOx2rhBVgV8RehNXHCuMbZ5K9NPbUKXwVqoS1invLNZBLY3cZx53UGN8V
46Wacu35djSd75ubO6uzyZqNtRt7xMnc947vvjvWRm7ercomcy7mXi9sZnxf
bC4/jwZiC7ANsZ6N5XtsADYvnhV7CFuN7cPKY77TNGw3lq+fPNeLY9/BimQe
irnPb9R2ELZW/SBsMbYZexz7EXsEK8V+xR7DfsAexhbFfMIexdZhN2CPxnmA
XYgNwXrn5uzKbLLGYq3FfrU1Ny9ifmxW1xUbpFys7QXaDpabgnXhr8tL3kWh
Ob4LW55O9rTY237UtiPWL52s6VjbA7Qdhf2KncBexfZhw7EN2FFsArYnk5yh
Ra6d8U40g+8mNzLenVxruRfUd8dGxXfF2mBjsXXYy9gC7DbsVeye3B4Xe3qs
2Vi7t2ETYt+McybOlEyyT8R+UYxfwzfOzaEameTsiDPkMP9gfrJ3rdd2oPyq
TPIOVqSTcyLOi2ezydkQZ8QwvL1Mo5jfcSYpXxrjUVdP5g56my/V7g7sA/U3
YyPirMSuwsZkkv8MB3LnSZwr2/R1O/aK8hy5rnKT5HpgE2Ofw67H3sgk51ab
eHc0hebEc1FtdR1ky+SayTyRn5wbW2WewcozyXzv4Hptbp+Nuf+k3HcxhnhW
bANWU66Oa0e8HDtb5ilaxm+XG4ptVD8i/nNgx7CJWAU2EtuEHcdewfZiRfqr
H/8TYj5i5+f2g/xM8p8p/jvtjf2B0tglsTbl6srVweph18V6wJpjg2k1/7d7
jMR+Uz8EW4PtwUZhv2O1ta0bzxvrEDtX5hn6nq+QG439oX4PdgvfnfbTeu2e
xlbFHsKPkNssdyp+mmuXWK/YeTL/A+XjXoE=
          "]], 
         Polygon3DBox[{{1091, 614, 832, 307, 29, 879}, {1262, 724, 515, 514, 
          850, 1315}, {1282, 765, 558, 198, 351, 1211}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0stLVVEYhvF1jrfMS1pY3j1qmqY5LvMyNFAChWjQTIroQpKiICE2bORQ
ERoHpc6ygWMHzRX/AYUgHKmEqKm/jxo8PO96D2uv/e11mscnxt5lUkrL+IPI
B9jF07yUKvg5N/Ek9/BH7ucFHuHP/IxXeQ2v5Z88yzv8ifd4iQ/5C2fzU1rn
St7kRf7Fx9jCEfbRl01pm8e92D20FaT0xDNuyF24jjV7u7kSg367yxu6Cu7A
NQzoV3WdcjnaUYZ+/Yr+jlyK22hxxqi+JM7DVTTo+nQtcjFacQX1+of6nFyE
5kD3WFcoN6IAdbre+I5yfuzDiPUPZ+fF85FFLYb16/pM7Mv8u5QHumr+rr9Q
1cjnfF//TXfT+q/1LX6kO5W/6qusT+ShuDv5LO4vvgHPxzfguZidP3AJz8bM
PMPTMa88FfPy+5iTJ7iQ3/KbmFF+FbPxS3ZcehEzcc7i9///1yVCWzfD
       "]], 
      Line3DBox[CompressedData["
1:eJwt0rlPVFEYhvEjSE1jPaORUoPgggIyO8yCDMyAICCLVjZISWVrYwkW9hY2
qECCxNLIH2AUEFTAxMIQCmKMsfN3Eosnz3vfc89313P3HtbmToUQlvAHzfiF
I7RauITexhDauB2rp0O4zGndFb6KazjbFEJJ1yFfxw0sO7eTy/ou7sZNJJyb
0fXIqTgLGST1WX1WziGPW47XzSnE+0BfXNO91BXlUpyPqu6NriL3x30YwKB+
Q1+NGUNxru6VribXMYzzrl3Tj8i3MYoxtOjr+jvyOCbw2t7JuE9/l6fwVjfN
M5hFwdqK7r58Jj53QwifvNMe3uIUb3OaM9iRs/yZc7zLed7jAvfii9zHX7nI
37jE+1zmA0667k/+i0P8xjEuuJcPnOB38TvzGgd+Tif2PeXv/Jg/8gJv8ns8
kF/wOD/jCj/hbn7EF3meE7xo5o///9M/GNFDag==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{855, 1170, 1318, 1069, 854, 1319, 1070, 856, 1320, 1071, 857,
        1321, 1072, 858, 1322, 1323, 1073, 859, 1324, 1074, 860, 1325, 1075, 
       861, 1326, 1076, 862, 1327, 1212, 1443, 863, 1328, 1077, 864, 1329, 
       1078, 865, 1330, 1079, 866, 1331, 1193}], 
      Line3DBox[{868, 1213, 1444, 867, 1332, 1082, 869, 1333, 1083, 870, 1334,
        1084, 871, 1335, 1214, 1445, 872, 1336, 1085, 873, 1337, 1086, 874, 
       1338, 1087, 875, 1339, 1215, 1446, 876, 1340, 1088, 877, 1341, 1089, 
       878, 1342, 1194}], 
      Line3DBox[{882, 1216, 1447, 881, 1344, 1093, 883, 1345, 1094, 884, 1346,
        1095, 885, 1347, 1217, 1448, 886, 1218, 1449, 887, 1348, 1096, 888, 
       1349, 1097, 889, 1350, 1219, 1450, 890, 1220, 1451, 891, 1351, 1185, 
       1204}], Line3DBox[{896, 1221, 1452, 895, 1222, 1453, 897, 1354, 1101, 
       898, 1355, 1102, 899, 1356, 1223, 1454, 900, 1224, 1455, 901, 1357, 
       1103, 902, 1358, 1104, 903, 1359, 1225, 1456, 904, 1186, 1547, 1205}], 
      Line3DBox[{910, 1227, 1458, 909, 1228, 1459, 911, 1229, 1460, 912, 1363,
        1108, 913, 1364, 1230, 1461, 914, 1231, 1462, 915, 1232, 1463, 916, 
       1365, 1109, 917, 1366, 1187, 1548, 1206}], 
      Line3DBox[{924, 1235, 1466, 923, 1236, 1467, 925, 1237, 1468, 926, 665, 
       927, 1370, 1238, 1469, 928, 1239, 1470, 929, 1240, 1471, 930, 1303, 
       1549, 931, 1307}], 
      Line3DBox[{941, 1373, 1115, 939, 1374, 1116, 943, 1375, 1117, 945, 1376,
        1118, 947, 1378, 1379, 1119, 949, 1380, 1120, 951, 1308}], 
      Line3DBox[{968, 1390, 1130, 967, 1391, 1131, 969, 1392, 1132, 970, 1393,
        1133, 971, 1394, 1256, 1488, 972, 1309}], 
      Line3DBox[{982, 1258, 1490, 981, 1402, 1142, 983, 1403, 1143, 984, 1404,
        1144, 985, 1405, 1189, 1314}], 
      Line3DBox[{996, 1261, 1494, 995, 722, 997, 1413, 1152, 998, 1414, 1190, 
       999, 1415, 1195}], 
      Line3DBox[{1011, 1266, 1499, 1010, 1267, 1500, 1012, 1423, 1191, 1013, 
       1424, 1196}], 
      Line3DBox[{1026, 1273, 1506, 1025, 1274, 1507, 1027, 1305, 1551, 1210}],
       Line3DBox[{1041, 1281, 1514, 1040, 1306, 1552, 1042, 1197}], 
      Line3DBox[{1174, 1173, 1524, 1302, 1055, 1192, 1317}], 
      Line3DBox[{1313, 1188, 952, 1550, 1304, 950, 1481, 1250, 948, 1480, 
       1249, 1377, 946, 1479, 1248, 944, 1478, 1247, 942, 1477, 1246, 938, 
       1476, 1245, 940}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{357, 588, 1319, 358, 602, 1332, 387, 617, 1344, 403, 1453, 
       632, 419, 1459, 648, 435, 1467, 663, 450, 1477, 677, 1374, 465, 692, 
       1391, 481, 707, 1402, 497, 722, 512, 1500, 736, 527, 1507, 750, 542, 
       1552, 822, 807, 853}], 
      Line3DBox[{359, 589, 1320, 360, 603, 1333, 388, 618, 1345, 404, 633, 
       1354, 420, 1460, 649, 436, 1468, 664, 451, 1478, 678, 1375, 466, 693, 
       1392, 482, 708, 1403, 498, 723, 1413, 513, 819, 1423, 806, 1551, 821, 
       831}], Line3DBox[{361, 590, 1321, 362, 604, 1334, 389, 619, 1346, 405, 
       634, 1355, 421, 650, 1363, 437, 665, 452, 1479, 679, 1376, 467, 694, 
       1393, 483, 709, 1404, 499, 817, 1414, 805, 820, 1424, 830}], 
      Line3DBox[{363, 591, 1322, 365, 605, 1335, 390, 620, 1347, 406, 635, 
       1356, 422, 651, 1364, 438, 666, 1370, 453, 680, 1377, 1378, 468, 695, 
       1394, 484, 816, 1405, 804, 818, 1415, 829}], 
      Line3DBox[{367, 593, 1324, 368, 607, 1336, 392, 1449, 622, 408, 1455, 
       637, 424, 1462, 653, 440, 1470, 668, 455, 1481, 682, 1380, 470, 815, 
       828}], Line3DBox[{369, 594, 1325, 370, 608, 1337, 393, 623, 1348, 409, 
       638, 1357, 425, 1463, 654, 441, 1471, 669, 456, 1550, 814, 827}], 
      Line3DBox[{371, 595, 1326, 372, 609, 1338, 394, 624, 1349, 410, 639, 
       1358, 426, 655, 1365, 442, 1549, 812, 803, 846}], 
      Line3DBox[{373, 596, 1327, 375, 610, 1339, 395, 625, 1350, 411, 640, 
       1359, 427, 811, 1366, 802, 813, 826}], 
      Line3DBox[{377, 598, 1328, 378, 612, 1340, 397, 1451, 627, 413, 1547, 
       843}], Line3DBox[{379, 599, 1329, 380, 613, 1341, 398, 810, 1351, 
       825}], Line3DBox[{381, 600, 1330, 382, 809, 1342, 824}], 
      Line3DBox[{383, 808, 1331, 801, 840}], Line3DBox[{384, 823, 839}], 
      Line3DBox[{572, 779, 796, 1524, 557, 764, 1514, 541, 749, 1506, 526, 
       735, 1499, 511, 721, 1494, 496, 706, 1490, 480, 1390, 691, 464, 1373, 
       676, 1476, 449, 662, 1466, 434, 647, 1458, 418, 631, 1452, 402, 616, 
       1447, 386, 601, 1444, 356, 1318, 587, 794, 800}], 
      Line3DBox[{849, 485, 696, 1488, 469, 1379, 681, 1480, 454, 667, 1469, 
       439, 652, 1461, 423, 636, 1454, 407, 621, 1448, 391, 606, 1445, 366, 
       1323, 592, 364}], 
      Line3DBox[{374, 1443, 597, 376, 1446, 611, 396, 1450, 626, 412, 1456, 
       641, 428, 1548, 844}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
pzdf/NiInE8GtJyvQz+w/aT+29flm5wELZMJ5VbzN/6ZEgTjudCnVegT15/U
keNcdBpSmwgknBjPj5ThuFBabWjYiDw3/aSOnIKCo8jXVdeImpKDZ77geBmO
bX7biLrMT+rLqZ3vzFqVfhX8mY7QPMJxNForc7gedanf6s7d/63unNdvdec6
/R/xDKr7gy2rgMtXRycoW/ZjByfqlb/Vo5P9rR7d7t/q0XmJ+e7w1o2GPR12
InQ47s2UN4rKkQ/NT+rUPRw+aCgYnQRbWcR2DX30BBh4Tlnwb1QP8N9Fl3nj
Qr+4P4Qo2NEcHYn+PDd/XYGsUzry8tBh3eYY4pJNeFI2+tBHu3UoGserbFNh
jE+mHVFJ33talNsQjj7tkn5N7tsmmXztMTOEEyLcs9Poq4WjhzPI/R25jNGJ
I5j3nTIRotZB/xi3mzmT52cSZ75I9O2NAmb5np6vDk7gH2HZR/UfsL/j4To/
JSTuQwS7rKJtRZ5pu16vvI79vatTPz1RH0kopNWnsGdLEGKu850q2N8eyPlW
T6dP3OBY+UEBea7fxF40jn+fwbxgTHHGAd7EiLL2IM+nQaovyDpOnP57Ur0w
796Uwu28Gnkmellqtv8HcPuZHj52JoFV3pkoFdJyos5RBWjUOEier3Ypfzai
VBNKOEh9LLNBnom7n5z/hByUvIf5lUw14X24X7cS8kw5tDFlCv9eQsRxNrHc
C0ZnOsvKkacy8dHUFnWNXVzKu5kjIdGbBtIwb+Lv4Kg4/B/M82d6KevBEaYD
ZsSm3UOz/Mi5Sc6egvThti0uL1uc/YhDoY5tBHKut1kwOEfmiSOqK2zKbWC+
f+jKTuRM07OwphV18+tvouxfBQHPkkufB3Lm3WIfsvbfaD3kf1s/Zn+4tmcc
IDDxsaMIcl6lkC1L7u/cr1rJ3HjFjTiXwEQ5hZzH1wd/vYO6J/+mt0OXPaB0
fKsXLXKeN8yYj/3F8x/qqtLEl24eSzCP56PiRs4R5y2nPpOcUyKPiDy0JLIe
Ht7NkiNBaElZ/02v1tWnJteBd5UybXyOcRRr7DJD6V+c/6G+h1pOSpzXDWY+
00Z/x/luuNtJpPQXtz+sd7Mc0bN1yibajmcsXxd+AuDUoBNZ1+KKQ3He+v40
YmxH6pmjYQZweXtm6AvMfxkFRJnYbiQSicubYyIum8P48cJNiuT5txKdWF69
KCK84kDmQrgNBMxPtpL5vsNv56K//N256A/OTGYrs4yIZ3Ux4m+vuIGucbUi
ua71QNtvfJDGDi6KPixmdPOEz1yD966i3nKcierRWDAwsZzgrAz3AdFY+Swv
vL6Je5235Fgy5LGXb35wJwgM6ARbM8l1P/pWpXX+GVA5THw4phsKO14/bSme
wetcpdzjy5cLJzkes68fDIOj3ZKNjJP/c/+EMQQmb8Z8NsudcXEZrT5IbNfb
SNZJuBasS5OG+a/wO3rFllNXQWjXVidyf2TOsyFVGvNcAcV8gyf112Cl8OOG
AGz/6q1927LSmIj57VrUQfRuwJuppnqP/A7UtZ+4j/ns1MfjHDncnhB6Z4Uy
+V15vFmPYhnms6s71CLFxXxgg7zVc2G8zvHfziff+rvzyb6GdacD5jKBvdti
9Nb2ULjnKXC07E+sYxDy2/nk0b87n9zQnPqeCeP5hneG5WdeXgaTq+wSZP2N
2YN+BiEY/1vL2ouar7oGtUeOC4xi+12XP/jURuML3y9deLirwgNyu00l1mB/
13aol9ti3N64K9Yous4bOuwKFcv/xPXz0Z3B1cZTUUTkZ3mDIjkzODxwR4kR
21N2WvK4L8Yhz9eqWNMpWINLn0zDAWwPVel/ncvN+7tzucvpi1k3bIgBFspR
nQkTb9DZ/lVI9k9s5+YOjWidCg/i2Pqh/mg3KzgT8b3ZG9ujvaNyKW0hDg7R
eO09TOMNbV0rDQr/hedRuX9bf5gW/n+vP+z4bd1gz9+tG4T+tj7w5e/WBwR+
Wwco/bt1gIe/5ft7/y7fp/gtr3/zH1Z//mc6W8B1QhzzEb4tc8ba0Sdg63yV
Ifm9M0XL7cVuOWfiWzvTi8VIAzhcKbyZXPe2mD51xQjzFCko1Na5ag6nByQM
yO9t6VMli3wxT/l4ytWuNcIGLF8dWGvyHzCf9r7WZxqqsCQC950/10WnDyyr
efXJc7bSPW8kazBOy/t8aJOV2lXw+TzO+7fzdTPtJUkYjxEcTxdpX1+DadF6
VaF/Iw7XBC/c9Ux3gvhlWj/W1V4GZgNZyV/nMP+6+gPh9U+rvuURZdIWlPIW
XITE54B7tX/g97D2G4h1ZWN+J15brvrCiYsojnhd8QPH/TpDd8rt3oNEVOOL
KwKYd6g+JOx//B/0Q3z4G9fNxtlwmd3u1p7FEDDa85jq1tQITKyp3UbszwCx
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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"Active\"", TraditionalForm], 
    FormBox["\"Dormant\"", TraditionalForm], 
    FormBox["\"dA/dt\"", TraditionalForm]},
  BaseStyle->{FontSize -> 18},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{914.609375, 378.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 33.333333333333336`}, {0, 100.}, {0, 0.5}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.2178125866822724`, -2.9638500958431844`, 1.0874397054957239`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.657836931096026*^9, {3.657836979936071*^9, 3.657836982052703*^9}, {
   3.65783705145545*^9, 3.6578370700966177`*^9}, 3.657837108109602*^9, 
   3.657837153621821*^9, 3.6578373383468027`*^9, 3.657837480017371*^9, 
   3.657838081355097*^9, 3.657838177636868*^9, {3.6578387954810762`*^9, 
   3.657838827251614*^9}, 3.657838873907366*^9, {3.657838920523467*^9, 
   3.6578389291497393`*^9}, 3.657838963661721*^9, {3.657839514832327*^9, 
   3.657839580892748*^9}, 3.657846829828395*^9, {3.657907253708971*^9, 
   3.657907262359009*^9}, 3.6579077140107517`*^9, 3.65790775890455*^9, 
   3.657908129374628*^9, {3.65790816281052*^9, 3.657908180046248*^9}, {
   3.657908577942292*^9, 3.657908587670827*^9}, 3.657909897730412*^9, {
   3.657910647600243*^9, 3.657910664359379*^9}, 3.657915127628393*^9, 
   3.65792013957889*^9, 3.659096961019764*^9, 3.659097349238636*^9, 
   3.6590974132511673`*^9, 3.659097446366354*^9, {3.6590975042246637`*^9, 
   3.659097513552291*^9}, 3.6590976451515207`*^9, {3.659097752475635*^9, 
   3.659097768029601*^9}, {3.659098029278887*^9, 3.659098048153483*^9}, 
   3.6591023710799427`*^9, 3.659103379103138*^9, 3.659103459746636*^9, 
   3.659103504452589*^9, 3.659103601612445*^9, 3.6591057574306087`*^9, 
   3.6591102374906807`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"dDdt", "/.", "Parms"}], ",", 
   RowBox[{"{", 
    RowBox[{"A", ",", "0", ",", "Amax"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"D", ",", "0", ",", "Dmax"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Active\>\"", ",", "\"\<Dormant\>\"", ",", "\"\<dD/dt\>\""}],
      "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "Amax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "Dmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", ".25"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657837117760027*^9, 3.657837121456294*^9}, {
   3.657837182667378*^9, 3.6578371864467993`*^9}, {3.657837631666966*^9, 
   3.6578376349936533`*^9}, {3.657839650301421*^9, 3.6578396868210773`*^9}, {
   3.657907720600893*^9, 3.657907721782737*^9}, {3.657907913866791*^9, 
   3.657907975483479*^9}, {3.657908188277377*^9, 3.657908209026576*^9}, 
   3.6579103257234697`*^9, {3.657910677151659*^9, 3.6579107003817987`*^9}, {
   3.657915131092536*^9, 3.65791513223623*^9}, {3.659097918023387*^9, 
   3.659097925021326*^9}, {3.659103569473693*^9, 3.659103573815938*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJzNvXlUTu/38F+ZQpIUERpUUqHB0CDnjjRPUtJIhpSUzKSBJCJRmqVEk+Z5
nksplLeERIaSzENJSXo+Pp+z9/VZ5/61fuu71vM86/GPtV7rWufe53Wfs+9z
7XNdO7Fte013cnFwcHhN4OAY96//R6RGnHiHatd4lAzHhP54voaD/jdOeOCh
As84FvDFlxdJvClkUblJS1Yo8MxE7vnLke9t4VaqW+Olt27wPOQPfLv5u5v3
U1Nddd/I8yxEHuSrJ/628AQlUXp9inrLIuRCE27wWoqco9S5fy/TDZZDPvpK
/W1XczCVmvL3nzzymK3vsyIjI6lVGyzK5XmUkK/ylv3eU3iNqv057n6Bywrk
+c+rWVXSCZRxTNbr1S2rkDfqK9dtFkmhOjRtf9TIqyI/2hjokXUlk9r1YTK3
bvBq5Lapr/O6mnOovqCCuS19a5DfHfp0q5m/gNKIzg5LSWEhn2zitC8yspgC
z6el91Xq/csT0zOTg2fgy0c4u+Kr9NEz8IjTl35xcrmhZ+AS8S+9+22IZ+BP
1w21dbcQz8B/8jWO9qZdRs/Al8Sa/7EdiULPwPWlNuQmp8WhZ+AhARbR9lsT
0TPwg1xrStojU9Ezfu46H7+zaVnoGbhXoHnTuJZc9Az8wcuIZLvlhegZ+ICq
gVjksxL0fOF4Xcvf82N6ZnLwzOTgGXgRz7E6avdu9Aw8r/bwc04u4hl4lI/x
VbcT59Ez8M+UmdDncyHoGXj58yp9cfto9Azc7t7hg7vjrqNn4AfVPv3kikhC
z8BFi9dlWQmko2fgigvLm5XPZ6Nn4LH7br9Y2JKHnoG3N6w7/9m8CD0D75Jc
9k+ESBl63qPQK1L4r7iYnpkcPDM5eAa+lvefy8fv70DPwC/Wzzm8wMgbPQO3
qU7Y8Vs+AD0D73F9Id/nGIqegevPk4vsqbuKnoG7HYxeIRd2Az0D3/DeZ2N8
SzJ6Bn57r25iR2AGegbuwjU4651TDnoGXmWm9mNdSz56Bv4y47OL15Fi9Ay8
hY//ZMS2cvQ8Q/Kzxd/jMT0zOXhmcvAMPFnEtN7VxQ49A8+ZoKWgEuGFnoEL
c/yWPfuKeAbeeXW37qBWGHoG/tQqvCdFOhY9A/cVrhn4dC4ePQOXjxTKXD8p
BT0DV728yChjfBZ6xvhfKW6J1MlFz8Bfr8qYsqOlAD0D7w2NNOGNLEHPwMuH
++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
fDI5+ATeOUelL1fVDH0C/1raNmdqJvEJPF/j+80/SiHoE/jjMt2wWe0x6BN4
sBefua5xKvoEHiLvmFf+hfgEXrRo3v4/TnnoE3ihRHyXw6wi9Ak8cBHH5J/9
xCe+fxQS2veYqwp9At8uErVKW6IGfTLrIeCTycEnk4NP4KuVWvfp7dZDn/ie
7u3MF7uKiE/gv3a0WeWlE5/AKz+5hbY2xKJP4GkSveKZamnoE/iUSW9cFU9l
o0/g4ZwyHPlz89En8FHOdeu3dBOfwClu+TUKL8vQJ3DZc0cPCZ4hPoFLzKyV
lCokPpl1JPDJ5OCTycEncCkHx1+WFcroE/hhftP4umriEzjrbNHU3YtC0Sdw
8+kGejrWpN4CvL6p8quAdDr6BH7yuf3ipFk56BP4kY5Vgc53iE/gOi9eJVrk
FKNP4N96txxwvlOOPoGr/H5ybONUcl/nLnW9wfkvH0xvr5Y7nylyEWTlbNPv
O/hHB+tjvGqOzns7ZrA+j7cROaa9G+eJx+j3d4E9pv4OdcfQ26PAOocSlwks
I5609T3/9ZzpQL8/MrnbqffThdS11sS8fmoR/JFKbBeVyX14Gb0V03EGJP1Y
lc5H6lQf6Dgp/7vf1g7EozcROs6sg5lybstI3SmejvO1U0zv8rJ09Db14n/i
dMq7G6xjROpIb+g4q5Tv71vbm4ve4v/UaEg2yrB5Kz1Znfv3/JjX24PxVZLP
Vi5iZT2eaXJk3nb09u5MRXihiyTLZ2LlU65xpH7IMbV88uX4hazgVe+nrDtH
vM0OLD3u2iHGes6fkLbNntR/ls4o+aTLL8oKmqKz2K2W1P2S6DgTDe9NmDlC
vFXRccqtrHeQm0/qP0/pON2k7+g8v5SC3vrpOPdLPEuV3JyJ3njpOOeG/m7w
USH1n0V0nE/nBblXfCV1NoqO8/jN1E+3/iH1tMH9b59I+C9n83kqrycoOF6J
zSfvwBs9jipF1gezcM4Pry3QZ9SqN+NcOxRYR6Rk5WI1SD1N6lh3WceAPOvh
Nun7sZeJz+ySrkO6/PIsJ0tn3mYzUv85NnjL1tV6Keu42l7pJTmknjZEx1nZ
F9969B2p//jRcc7uquwQ1CT1H346ziXPenbofSf1tFg6Tp8vAaumupP6jxwd
591DciNlEqT+U0zH+YPD9JTqEKmn+dNx/rk00njqJ6mnRTt84itMV2PzKZ38
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
ZRLmSeArTJOvrN2bgXkS+JUzDheOTcjFPAn83SfHXQqzCjFPAh9Hr9N+TOdJ
5u8+5EkmVzd6ql3oIsjGIU8Cr+I5sYxrvg/lSOdJ4M70+mrIk8DPl426/l6Y
hHkS+GPXpmPF2zMwTwK3iSh5FiWQS32n8yTwuZwc4cqqhZQXnSeB39iX/yH/
eik1mc6TwIcP/mcddQCdD5nPOYN0PmTydDrvAZ+50W2K7wIvzHvAgyRHrFcp
X8a8B9yfXv8MeQ+49YPRhC/PEzHvAT/jb7LvqHYG5j3gEslVyluFczHvATeZ
qdvaZV6IeQ+4np8Gt3ZrKeY94Kc52j7U6VZRt+i8B89vxfQ6Z8iHMP4SvZ7Z
l77+mc8JcJ0wf2fHev6Hdb/wuRU9A0qR49biOmfg4j37bvq37cJ9uFgnd1Cq
Ciok+8RxXe68I/17Nv7XunSa++ceTDJ6RvbXA3+52v/3yuMhuP4cuNiab4s7
BEhfR+C7Xoac2uxJ9tEDtw98qSmpR/o0Ap8o8b7gWjnZRw88d6Ky96azZD84
eqD9gwd47tW/vSDUu8sePQDPnZhi1mR8BD0AdzzFxSvtSDwAV1c0uZRcTPbL
A/8wKXazklEoni9+bqf6wX8Kyf534POCbd/dKiD734G3JPN3jb9A9r8D3x2o
d7rZjezXBv782KaOSr8iPC943r6UKPqOq/cQnhfw4vcXFnV5/Ne+LZp/y5I9
xhVO9q0D//kgL2+ZWBjGD/yj3iet3CCy3xx41BK16U42ZL85cNFZtue1LMm+
AOAnxm8s1T9bjHHi+kzTORoxQSRO4K3h4xSWqpJ9zcDHxTTxyfWHYTy4bjNn
u9o9WbLvGPjjq3uDKjTIfm3gEheNrzz2L8HPhftOzmKfZEcy+Vxcx+j0co90
QzgeH3igpE/4Shmyrxl4wxyD49vPl+Jx4H6fs3zgtkRUBI4H7hSvY/0lgOzn
Zc5/IQ8wOVz/TA7XCXBrRj834Mx+bsCZ/dywXs3o5wac2c8NeACjnxtwZj83
4Mx+bsBnMfq5AS9k9HMDrkj3cwNvzOdS8Mbk4Af4Vz0Zy4EQ4gd4lsnXxSJr
yf5H4AaXrwzYc11BD8BDB+ts1CXJPlzgRjtlJVIuk324WJ83u234vJ54wHVl
OiqyynJk3yhwl3VeZSW1ZB8u8LZ14Zw7L1RinmQ+V8P5Al+Tk78/+yY5X+Dc
fHYL7maR8wW+yS7b1K7tCp4XHqfbO7pHnuzfxOM8mnhtiSfZDwv85j17i+hh
cl7AJe5cqlFMI/thga9+2+h2VLsKr2d43r44RyNgTwWJH/j2ljv8x0TIfkDg
2xY3ZFglR2OcwHss1n/3VCL7IoEfND13iuMO2WeK9W3TG7dTQsg+U+CBcre3
rrlN4oTn6lcn7iYsaiVx4vN2oMokqUASJ/C9/c+mWBy/ivEAV3+ck7kjiuzT
BH7paX6zuCfZpwn8xb56k/G61aSPNP3cO8coafjBb/K5wN0rvztsNIohfZJp
rr3t9sOonWTfInD5wjpWU2M1HgeeJ8+e4641FovF8cB9ftfIX9KrwXwCv+/Q
twfyIbMOtmiM+hgcB3htRPI9907SxwY49LGB4zPrYHB8JofjA//lb71dJ430
dQGutsQwS2w+6esCXI6uj8HnMutg8LlMDvcvcKV++86snvX4PAAc+q5AnMAV
j/MOCbqTfinA9SQeDs2aT/qlABds19i2S4L0SwF+m66PQfxjPa8yOcQJ3LPz
6pGQNtLnBDj0OYH4gTvtqQ7s0iZ9S4BbC1uv45lP+pYA/9MWvcV3E+lbAlzG
qPab5C/S7wX4Ero+BufFfD6H82JyOC/g5w7H7/skQ/r3Ar81bzAxPpLc77hf
gK6PwfkCj7M9KJEtSPqNAN/D/zqAcz7pNwL87YOfNnFnSZ9ejKfFSk8njfQb
wX0QpdOidtWTfiPA19H1MfDArHeBByaH65PJwQ9w5fmbHgdwkD69wOVP6Pd9
CSB+gH9qzVrkeYg8hwCXZPQVAf7EaFGJVxfxBvz4ZKdHA/NIXxHgvbsWL9li
S55DgH80+X59tx3pKwL8NnXx7tUg0lcEuNdyjpTBAdKnBfg0Rl8R5vOGA6M+
pkHXx2A88/d60Rj1MTgO8CMLA13XmZP+FcDj6PoYHJ9Z74LjMzn/GPUx+Fzg
mQIa42csJH0egGe8Fe06tYT0eQCuQNfHIB5mvQviYXKIh8m9GfWx5XR9DOIE
/nZCf2TnVxIn8C1fNoaVzSL7/YEnvDp5WWEX6Z8AvJauj+F+ZEa9C//eBIPj
35VgcPz7ETQvHNSr373MivydCEbfA/x7DbB+9WfisrQK0hcCeO/u2WqFYeS8
8Hd/6zJ+FgfZdw9c0lr46tcrpI8BcG66Pgbny6x3wfkyOZwvk8P5Auey3JnR
7LsRzxf4Nf3UqUs7SH4ADn0JwANwi17LW8cCSD8H4G49T19kzyL75YFf6Hx2
ySiSeADu9yznB78R6T8A3PylDe/octJ/APgoXTcDD8z6GHhgcvAA3GH/qNzO
PF30AHxK5h+LY83EA/D2pp6Rg42knwDWoxj9BIAHtvNYa1uR/gzAB+1jfNPC
iB9cz2l7brqtIuknALzHVs9oBQfpJwD8xo5O1goO0k8A+BXlGweWRpJ+AsBD
6LrZkTHen4IfyJOCF0z6Mzsc8fkH8lvdXfX5Yjzk77BAnjnBI6sVvHo7zoOY
zyfAmb/v/wsbyTRA
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwt2Hf8jtUfx/Fzvud7J1llVDLaIbQnKbJJNhmpzMrehaKINFGRFpXRMqKU
QqKFlHZk1S8Ns7JC4/d6977+OI/reZ/vfd/f676uc33GObVz3xZ98kIIh2MI
ieMPvDia49X5IbTPhTCT1w/hjvhFPAH3wG/gJ3BXvBBPwd3xIjwVt8BP4LG4
A34BP4xb4ifxONwaP43H46F4FX4R34bX4pdxN/wafhzfit/CT+Ob8Zv4SdwK
P4Xvxbfgxfgp/DrHt/ktP/PbpuMZ+HN8A+95hdeP8J7PGTXxd/z4jbgT3oY3
4RvwT3gzvhH/jP+nc8I78Re4Lt6Iv8T18Cb8Fb4Gb8Zf4yZ4C+7E/30ZT2Lu
eFwVN8LX45fwRLyEcRJ+n/d/q3uAv8fr8JV4Pf5G1xFvxcP57DD8Nx6B78VH
8fdhuBf+g/lyuDpuznxZXA03w2XwJbgpPh3XwW3xGbg+vg6Xx1fgFvhkXAO3
xOfi1rgLPg3Xxm10LXEPPAjP4biAa76Fa34m8w143Y75WvhmPBifh9vgrvgE
fA5ujC/A1+HuuApujm/E5+BWuDOuilvgm3A/vAI/h/vid/GzuD9eiZ/HPfHb
+Bk8GH+IZ+Mh+CP8Ah6EP8Cz8LZ8/5bdXMMmzD+E72JuAH5P6wlXxs3wDfgs
3BC3xwPx+3gmrogb4464MX4Aj9QawQ/iUbgCboQ74Nq4Hx6Kf9RzhXdxDlvw
TfgXvA+PwP/iXTonfBDv1G/GB/BePBz/g/fjO/Sgc9yt88N/Mv+brgU+jH/X
tcBH8B5dC3wIF+J85uITmCuCl+DS+G/G/bggx8I5P28n4n8ZE3Ahjv8wHsbH
cAy8ZyIujIvi4/IcZw4zxuAcxyOM8bgAx0nJz29JPBWvwMfjJ/DK4PN5Dq8J
/r/349dwCfwIXoJLaQ3rOcdvMDdNawF/xpqcjV/B6/Eh3jOa1/kcDzBG4cjx
L8Z9iokc/2TcjRPHWYpPfPZbPrsfV8Ef8/0H+dtdvM7jWJzfeDKuh4/D5XFd
XDDn/61ze4dRDn/EZ5fp+cQf4qV6PvEH+D09k3gtfl/rCX+Cl+NT8Cr8Lj4V
r8af4MvwN7pOerbzfG7f4y54O96KO+Nf8Qe4Ev4Uf4avwhtwKc6zCm7I3Ao9
53gN85/iy/G3uvb4fPwlXosvxV/jj/UM469wju95Bh/HXD6eio/FO/Ss4v28
JzH/OC7GXMSTcBF8dM7XWmsgD0/BRfEPjK54B58tkHN8133fzlBC28f8asUX
/AX+EJ+N1+Gjcl4HxZlbpViGP2f+p3zHpT34V9wb78Uf6TnHn+F6fPZOPIy5
+ngkHq5rlvNzOjDfuW4p6+EX1sZy3Qcc8hyf1oscy2hd4pU6T/0m3Do6L72L
d0bniuV4R3SOXYX34nb8rxm8fjA/iz3MT2D+bEYnXJnjp8oP+BPlAEal4HWy
D1cOvo/KOe/g7focr8cFP/vK88vwr8yvy/vv1MNXeY6p3+LIsTnnMJnjPfm+
BhOZfyf62kzAy6Lj3DQ9F3ge7yvE6zeTa4q3mN8WHWs34aPyHIO34KPzHJs3
4wIcy/G+7bh8dI2g31WQ4+86R13n4Bi/gWPiuEjrOLh+UAzeqNCT55j9nUJg
XpZP8ES+c4H+N/4jOrd0wY9G5+dLcW9ckdEUV4qOzXfh+dH56jLcJzqX1sJD
8MW4Jh4cnT/r4xG4Aj4f94jOpQ3wHdHP2SW4F35JMUG/i7l2jJvx1Oj4UQF3
io4rFfEN0bm9Hh4endvr4mG4Le6Op0TXZR/jA9G121p8MDovXYfvj87/zfGY
6BrqU3woOi+1xfdF5/yu+LGY5V48KbpGW4334fnKB7xenJzzWzN/b3RN0QqP
i67dPsF/Rtd067IaVPmzDR4fnat1H49E1wjd8OToWqMZHh1dI/TAj+NXlZ+0
tvi/i3AJrW/8Ji6l9ZscD87m/Z2j45aehS7RMUDPyE3R8fh43CA6ZpyBO0bH
gDPx9dFxuhSuh4vm/ZfaQm18LC6A60f//2Nwk+i1r+eoRnT8Pg23j75Oqruv
ij53pclauBg+CtfFxXFB3Dg63pfG10bH7NNxh+jYfxJuhi/PuV7trTyQcx3b
C1fLuX7oozidc63bE9fIOZb2x1fmXN8OwBfmvP56ZLmoJN9fR9ct57XVjfnq
OeeRvlmeKct7WkXnK63hNlr/OeedflkOKcN8i+iaYiHeqnvN30rrGeViLMbH
K17iYcn5WrWE6uIS6k14/x7FD8aPwX3GXI4bomu0ZxX38N7sXisn7syulepq
xa2X8NfRcXSxvie6L5mHv4vuS17Fm6J7i/l4o54dzqOk4jLf83q+780y1VrB
57SDsSDfa+Jt5hfm+14uSa71pvP3tXpe8r1WlibXQScy3yi6n7ga3xbdT9TG
t+OTco4p12Y59gLmb4nuA1rgsdH5VnVI1+jrVwS3jD7fQrhp9HNQGDePvt7F
cc3oHqURHqX1wzlV4XhZVgtUY75/dM6/CPeM7kva4Qej+6fqeEB03XEhvjW6
B2qIR0b3Lpfjfnh4ci+mOvCYnPsE1XW3M/9ccK3YEA8O7rOaMIYG1+GNGUOC
6+GmjNuC83V9xqDgeuAqRr/gfq1oclxV73NscqxW/1ID9w3u74olx3n1ONVx
n+Ae8ALGLcH9Vy1G/+DauzZjQHDttCV7LhRzpiSvGfWVk5PXjHq915JjqfqL
unhgcA32D589K7i+ej05Bqr/HYOfCe6di+CLg/u1zdn6V1w9MTm/qOealxx7
1ePMTa4T1Ae1xncG1zA/ZnFDa7U9Y3Rwv9COcXdwv9CBMSa4L/g3yzX/9ae8
HhvcI1RmdA7uPfOT77tqP+0bnBC8nhcmx3b1Vh3xPcF9xNYsZuq5aMsYFVz7
ddWzEdynzM/qefVW32dxWM9OG8bI4LqufHK+U5+lZ+5gFgu6M/8wRwXRnvjR
4Fq9G34ouFe6lfFIcH3eCz8WXPPfgicF1/w5fEVw7TonuTZQLzk7uTZT/3hN
cl5WD1spOW+qD62YnJvUq7bN1oz6uCrJuU/9cvfst6uGrJZcvyk+X5mcTxWf
r06uQxQza2bXXDG2UXK+U3/dI7kOUf1ZIbk+UR96XnJOV9wemlybqW89Jbne
UB96cnJNon6zXHLNoN5c97dlcH89JLmWU396TnJeVsw/N7keUG9eNTm/q39X
3FD9qZwyOLsX6nMfS46r2t+4IrnuUm6ql5zTlWsG4CeD9y7Uu80J3i+amVyj
aj+nC34geK9Dtd+hkNV/Wa5RvtiTrUP1Waqj1qge4NiKv90RvB/yc5anVA/M
Sq6xtadUJ7m2UR78KctTy7P/tV9xgHFfcs5S79Agub5Szb8guabSvsGu4M+o
Ln00OTdp3+xQNq/v2Zbla9Unv2XxX33i4aw+VJ2ota28UoxROrm21P5MSo7J
6mvuSa6xtZ9WKDl3qP9SX6UY+Gx0H6OYNi16n0DxZwYuwziAy0bvGSimPa+6
lO+6KLq2fzW5btQ+hvYMFGNnRvdYip/To3tlxZAF0b2vYsvC6D7vabwmej9A
z90K1cl811nRuUx7GIpRc6P7v6fw6ug+T+thVfSegZ7lldH9t2LUa9E9op7f
96L3NhQf5kXveehez8Eb8KnKP9FrUnFV+xUj8MzgHvPu5F5efeX45D0r9aoz
kvsg7TEqr+t+qN7YkdVvqlW0F7IC7+b7d2W1onp27XkonrzL/PPJ/aD2S9UH
K8et0znx+pLoPk57Lcp3s3i9Hp8c3XONTt6jUF+svRnlwRf424vJexrah9H+
jXLi7OjcoWdH/fWeLL9ob+FiXp+R9R9leV0neH9Pex6Kz6/rHiXXRdrvLZi8
DrU3OC65ptI+7bTkekn7vfuz9az1frrySvA+5/Tk/k57tqcl1wnaC92d5/pZ
+xtjk2sh7dn2xpOD93+UE5Xv1Gtrb0d7ONpPzkuuH9Snq2BW76N9wsLJNZL2
OjZl9Yx6zLJZHNN+7AHmqwbvn6jX1j1UXCiSXQftY/yd1TbaH/grq2G0H3Iw
u+96Bssk11ra7z2S1WDahynJaBy8h6y9K8Wot7me3yiHRveAA5PXtva1tGem
fLQ0et9LuXURHpT8vGivSfvfih/q37X/pPy4RL1Ack2lfeASyTWb9mr+DzXw
9Q4=
          "]], Polygon3DBox[CompressedData["
1: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
4X4p/Fkfxqnwnfz+Vg3Cd+o/GzN/wpq/E28G94A3I96j+L9LUvivnsUvXZ7C
b7Srh5/pxvoNWd8W/gt8IrwBfEg98nm7KvzOgfAqcNsq/NKnXK+9169Cn9QI
tcIc9hyxt3Lkm+Or0N8X4HnwlBT606ge9dL0FH71eeJz4ckp9KEl8d049/wU
9dDRHC8iPp8xlc+uYTT3Xa+iZmrB+l2Yz+bz81n/LNf7iLUTUuiJ3+ljeGKK
7zoc/gSelCLffm+eMrdVUfM0rwf7uX5tFOvnsP7NFHo2Gv4cfiuFfraqx/fx
e+kvN8mRnw5K8T6PgD+FX0+hVyPhz+A3UuiT+8/8dnCKfLFWjvzSMsX7rL8w
f+yb4n3Xn/n+75LCH+rPzDd7pnj+O+TIvx1S5EfrVfN7xxT5c+cc+6lTivfb
Ys781zTFfvC+e/93ZTxdxf5Vv/qk0Ds9hu+y77Reenv9kbmuipphzRz5s0WK
fLNFjvx+aIr82CSHnhyZIh/rb9WD9inyY6Mc+fGwFPl3qxx60C5F/v0jRb7b
OcV+XTtHfm6VIn9vmUMP2qbIz+Y0c5uaN794Pmtfc9aCopGdqshJauddOfzG
kyn89J05/PMTKfzFHTn86OMp9LuZ+sH586uol4fk8D8vpvCr9g/0V0+n8OND
c/ivl1L48WE5/NHLKfzN4Bz+5YUU/vHuHH7pqRT+xRq0exXvvLWpGqvW+oz3
y6Hharka3jpHD2FaivfH3kKvsuf1XNYm1uwfVuHJreV9nj5Hc6q51d/kb9Mj
2xuwhrSW0oPrxc03+qOLU/ibR3L4x1Ep/LT5V788NIXft2Y2h22tXnL8Ro58
3bUKf67n0/vpOa1N9Zh6TT2htZceU6+pB7V3oSfVm+p57SX4e+2dqEFP1sOT
daxCs/Rq1mvmqtEp/LseuXXJqfY2rszhJ+9L4QftP1lfj03hj9VP/dlNqfjB
HP7sxhR+fGAO/3hDCr9+dQ7/+UAK//ZYDj8+JoX/vSpH/XZ/Cr9pfWX99mAK
/9c9h9+/KIXfM8+Z75pW0fPaLYf/OzaFX1KDT66ihvu+eDxrSWtKvZ81zQlV
5OilRaNPq6JGW140tEfZXz5/a0J7DdZo1orWnPYCrHmsRdXYM6uoEdVea0a9
iTnKXKXGn1pFjbmsaJq9BzVKrbMGtZelBlubWgNeXEXNa22oxqg1ehprIzX5
qip6cGq1mq03NIeaS/Ukp1RRI+tVrDmtra2prEWtYfVm5kxzpzWZvSQ131rN
msDawBrZ2s+aW69qjjJXzauH97cGOCBHD/D28v6Za+fq36vQ+P3VCv17FRq/
r1oCP1yFZ26ZwzM/U4Vn1Uvbw3yoPN8m9ehxWktYU9j71MPb27SG0dsvhB+v
woMckcNjWGuYs83desAbq+iZ6g3nw8Oq8FBt4f/AQ6vwLIfC/4aHVOFBDoG/
gAdX4WEOyuFRnq3C0+td9DDPVeER9TYL4Meq6OG0z+FZ9C56vINz1Mh6YTVN
bdMj2WvRU+md7CnYu/Ad8F2wp2Dvzp6gvQZ7CvYC7bHYa9DD2VuzB6O30+NZ
m5tzzD32CGaX/Ga+0lPbK320Fl7bHqG90SG16B3qKe0t6fn0mtbo9hb1kNbu
NsvsrQ6uRa/TZ+Kz6ZKintk1h189JkU9sksOP9s5hd9vmuNeHJ2i3rHH1qXo
53b16AHYK9Wj2huwp3FcFTnSXoc5smvJz/Y29Fh6rW1r0fvQ81mrmpPNzXp2
e2f2kPXy9qTsJU6sRa9KT6e3a1j0XI9+eNFL84UesF3Re3th9riWF79nLrXn
ae9AjVPr7NnZO9Vz2suzB25v0hxqLrXmsLY1h5pLrWmmFD2x1rEms1doj8xa
zZrR3r09Y2tJazp7x9ZE1np6bnu51nR6cT25vUlrHL26nt3epDWVXt6eo71H
ezD24u2p2+u3B2OvXY9sb86ept7ZGthaWM90oM+fe7Ca+aSKnp453t6MOdrc
/yJjSS08rl73wqKXu1fhFfW0+lb9q15Xz6rP0m/pZdVf9X07xh7w3oydqqi5
98mhWQvLfvf+q8/6Vv2rXkRNGl9+v/dXD2NvUA3S2+hh7JWoOXobPYHeYIH5
tB6aZy9EDVML1fQRJV+7n9S4cWV/qX1q/ILyvqn9Pct+mFie93nl+c8q90PN
W1z2i1rYt+wnezp6cz2xvRs9lF5Zz20vSc+kF9dD2/vRI+mt9Xy9it7oBfXQ
g4qeqAdq5vCSD9VSPZu9FzVeL2fNYW9KTbYW0dPbG9OT6fX1ZPaextfCq+nZ
7KXqEfVy1jQryv621tHz2avUMw4pfst94n6xtrAmsdelR7JW0ePZK9RT6v2s
GQYWfbKW0PPNKflQL9i15LOnSn6bmkPr1Hy1/5McWqmGqqVf5tAiNUgt+jpH
LlfD1LKvcmiZmqV2Tcuh1WqoWjolh5fQQ+gl3s7hFdR0tX1GDu3XM+gd3syR
i8xZ5q6JObyYHluvvTCHFqqBauGEHN5bj6ZXm5lDe/UUeovpcNNaeBS9yuQc
9aoeRi+zKId2qVlq1xc+s1poptr5TQ4tU8PUss9zaKGarrbPy+GV1XC1/LMc
3kJPobeY6z2vhYaqpXq4GSV/6e30bPYKH6mFl9OzzSz6on51K3o2suTHOTn6
K3oYvcx/fUdqoeFq+eIc2qwmq80/5NBaPYJeYWkOrVdj1drlOfqBarBa/H0O
L2FOMbcsyaHFar7avyyHVqvhark1mb0razZrtQ/SnymuthWffVxqKHtd1ljW
Vvb87P1Zw7XIpedQxR74838FDaJ3p1/Sm1qjunfcQ3/Wrg2il3gS3CqHZvos
fCZqqT0ge0FqZpscNavPwmeiv7IGde+6h/U3aqi9Q2tGtdWa0d6dNbS1pDWo
vS9rRmtTe6T2StXsw3P0aN0r7pm/5aiJ7X1Zs1or23Oy96THbpejRrZ3op+2
drZHZa9KzT8sx//sdqii5+j/8qxx7T3aE7D21RPYq7Sm1StYo9vL1L9au1sD
64/0v/pNPYO9QmtavYQ1sL1I/ZO1sTWwvRt7On+UHoH+W3+uv7KHYG/QGt/e
wv8BYPvz6w==
          "]], Polygon3DBox[CompressedData["
1:eJwt1nW8VVUWAOD7uO8JSIiUQQooKqCOo6K00jDSIaB0jEqnAgpKg3QjpZQ4
1EiMSChg0KIzikU5EgLq/MRmjG957x/r7bW+s859556zz973hs59mvXOlkgk
1oos0TYzkagPJmQkEi3VxZOJxHcimpayvqyVup2+Bmwia8VKsDasHhvPWrBi
7CFWl41jzVlR1prVYqNZE3YduyR6sSWsD2upviwGs5fYE6y9+mcxkK1kg9nD
6gI+byl7n61gk1g+Np8dYIvZaNaK1WSjWGN2LbuaLWZH2DI2gX0v+rAXWD/W
Wp1f3xL2HlvOJrJOrBmbwTqyW9gvYhBbxYawR9Qv6tvNsomP2Dq2jO1RJ8XH
bD17ge1SZ4ij8UzYcvamOlN8wjawlext9RXiM/YKK8zWqk/4vxvZfLaKvcOy
i2NsIzst2qsretiV5JXFRdGNVWP15PXFNc5dx076vE3OXcCas6rsKVaX5WNf
ie6sunMbyBuKgvpWxnfVt0bfDNaEVWJDWS2WhzVlldkwVpvlZc1YFTac1WFX
sS9FZ1bZ/3hAXlMU0rcq7l1Gau7OZI3ZPWwwq8FysjqsBOvAyrL/ySdHn/pu
8aFo43N/0jvAsRXqQfraqX8VQ9ka9hTrov5W9GSLWW/WIu6dz2vN5rJu7DY2
hPVlG9jI9By6go1nr7HnWP/0/Yr7NtCxHo6dNt4mjsoHpb9HzNMHxd9ibjn2
d8fOGMuIknri/c3lz3r1/XpqxPzNTN2zk8aOoql8ut4Oem+OZ8YeYvNYd3Y7
68JastmsCyvPurJWbA7ryirEs2At2CzWmZVjp0TbuLesLbtTfVZ0ZPe5v9Xk
1dMReW+f0Snma2ZqvsW8G5CZmktfGP8hDskPx3fweVvSzz2ef1/HuvBTxoPq
0vIW/m8xfd/LG/AKxl7sHva7fL++G4xNWBF2Sf4D62dcxgawNvE84v6z3qwi
S7CqokqsT5mp73PceC6Zuv5KWan7Hff9R9GfLXfuwFhL1bX1Fmft2U3sG3l9
Vt7YM+Yg+03+MGtonMRas5LOPafOK98f65h4WU9tXiuuW96VfR7zRrSRz3du
D/13ON6BNWHTWHtWltWN9yGuMTP1vv/XuEK8Jc8Sn+r7p+MXkqnPrpqV6q+b
Xidiveipv0OsJ8aXxF55jrgnzt3k+EK2Vf2z/3uYrWCL2GvsF/YuW8nGsDnZ
Uu9fvIdV1WPFgljn0u90rNnj2PNxbWwdG8M+UJdQFxfn2ZHYr/QtiutiG9g4
fUfFvewxdhfLrf5I3MceT9/7WIfGO3dhrKVsPRubTK0Ry2MuxjwQ1dQHeCnW
TF1U33fy/7C/GLuw8ixTPSXua7zLbCubxvaJkqwRu559K/+A3WnsyirE/qv+
UFRkj7K/xnutnhr3mp1j29Nr3Yx4R9gF9jqbw6azl9l5tpPNZjeyUur8sc86
tk09TayWf8l38Fn6rmRT2S42kz3JGrG70+tQ2XiX1O/z21kn9a36siXjS1sf
Y/1Jr3Xd2e9iOFvHRrBu6s/ifWBPsJqsiPpYzEn2ZHpfiN8Hn8YaxvqzKqyg
+kSsgWwka8hKqz+OtYT1ZZVYfvUnscawfqwyK6A+HmsnG8EasFLq38QwtpY9
zbqmv+9N6hvjPYrnZP4f4mX0tYr5pu8H+XX6thu/ZnvYaj3Xss3sbPoZvcj+
Le5gnVm5WErUh8XNrC0rzS7LH3Du1bFusWvY5/J39d1ibMfKsP/L32PljI+k
15JYN46wW2P9iOtmv8Z1JVN7SY2s1J4Re0eueO5st75Z+oayPGwGe5PNYcPZ
N8nU/nK/cxvFnpp+V++K+Sj2iqaO7eXF9NVLX3Osa7tZYWPzjNS6FevXLlbI
2JTlYWfl77CixjqsMPs69sS4nvi/GanfoSfkb7CCxsYsNzsT15pMzeMarAC7
IH+bFTHWYoXYV/K32PVxb1lBdjHWR99jS6z77ED6GS1m29hldoStYvPYJvYd
28eWsm0iL6vJrmAn5c/re9X4EzvElutZzfaxnLG3sc1sAfuX+kd9B9kytlXk
ZtUz/nx9EsflryZT+3jVjD+3ncQx+TAHRxhfZ9NYDwe2i6tYbZadnZLP1bfR
eCmeEVui56Rozsamf3vHPp2hbyR7hY1ij7Js7Bm2kY1mj7Eke5ZtYmPY4ywH
m8i2sylsIDuTTO0H92al9sjYK3Pqm8R26Juqb1B8Vzad7WGz2TA2lD3Ndqb7
Yt3YIfKxuixH+l0Yoe8548GM1G/5+LyRbDI7xJawwXFP2Dy2ny1io9hOkZ81
ZFeyL+JesgLGB1kudlr+jHOnGA+zpWyInplsDbvI3mBzWXY2IdZRNpkNYJls
FNvMxrKe7Hwy9RulSlZqv459O6++uWyfvoX6nmVZbDTbwsaxXuwPJPqieg==

          "]], Polygon3DBox[{{1064, 300, 825, 1131, 606, 1244}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1lUdoV0EQh/e9fasiirFHUUxsoAcVjA3sBQsaewGNDRSNFRQ1loi9x4O9
N7DXg+WiXky8eEsiWC4mYkM0BsGA9Rt+z8Ow3/v9Z3dndmf2nz132YSlsXOu
CPNYYXCuDOFG4lw+4yK0kxEjvBg+BWdgS+CEcSz+B/ltC/4b4FL4esqv4Jvw
NRYuwf8snIt+AH0z/B2tCvuMjccnn3EV+mn4AdwWPofvPfgNe/VAnw4vQB+I
NUNrl2j/y+hlfA/gu2mkuYfQr6CX832duU+d/EcRww5+K4SHwWvgAngjPsfw
2QpPCdp7NzwNvgDvtbzwOeqU70n4LnwQHorPanzWwIXoR5xyHIm+HX0D3JA4
1qMHxgK0dfA1uD7WDf6LjcB/G7+tx786kd8v1hsXlI/FNhU+D++B6zE3m3l/
sDuxcvyG1hyrgDMj+d6HKyLlYWdbGens32PvsGexxlasWcn4xWn+QvS1jFfw
704cM0zD5yvfxek8863GkFxNeqel6ViT7vEYv+eWI063Ys21NZqz5gCnmnmE
Xm65oN+OVTNVcGt+e5LG9hC9DP6dxv893as6jdlir4tPQ8a+kWqrKs0xi/m/
GXMS3flu+AE+H1P/oYnucBd8Hz0z1tlOi1Szl2wvixnOgqfCn+AMeEga2/+z
bMP3T7g7Yy9yzIPz4RaR4mwZqS6s3koi3bnVVXGk2jwOP4Wvep3VGea2TLTX
61hs9zMo0X7mY75zsT1ONdMRy3Xq5UH4jIE3seaHRP38jd9PePXXIbRZXndt
vfA+7f8qWzOotg6jDY615mbWaYLeke8R6EVePWg9stfrrKw+98EXnfqoNtwF
Hg0vCaoJexMaRYq5FmNj9A7ow9GzMY/Wh3G5131Zzy4OqhU7E9vfeme+1Sfc
H15h60Q6w9qR1usKz4NrefEY5i6Ddzr12gtsOn4VaLOxAqdezg7KeTL8EpsB
V/L7KzgPfgsv9aoZ6/GCoPqze8kMisnyzYlV5yvtzYxVD/vhU169aWfbAR4N
58Gdg/xmwrODesbemU5wbiyfpl75Wmztve7X/HsGxWb1lhV095MshqAc7f0c
HNTb9t42Y24/J58eQTlaj/f2evMtX7sLe/Mt3xyv/wU7qwZB/WD13yIoTzvb
OUE9bHWVEdRL1l811htO99sk0vtcJ1JO9rYUwRO93kmrzx9pr1mNTfB6M60m
/wE/iNbG
          "]], Polygon3DBox[CompressedData["
1:eJwtlklslkUYx+eddz4EglIEQyEYWtQa9yYtW8KiIAENlKaCkCgKTTRSFjES
oUoREGQNHFhcAAVJUEBcDgochIvAhQuyRMWL1IgmRsELQUH5/fOfw5NvfvPM
OzPPOl9t68st82MIYTWSkE/LEM7ze4zJeZUQJiMnihDeY+5NdE8h8xhXMXcf
H8xFf5nxCeYOoGuCj8Pvwh2l97gCn8x7PwEfhtfBC+Bx8H74DXgWfCmZX4eb
S+95jvHR6LM2wF/Du+Gn4YdY3431h5nbhO4a87WMezBXh+5+1qxg3MRcHfrf
mDuQz2uBm9GfhN+Hl8Fn+P42uEBOM34S/RHG69G/gv5eOQkezU9X+HH0+/J9
n4cHw5vgGfBQuD/jP/1J+AcZg347MCfbt7Tic3TeUPZuRP4LtqGG8RbkK8Y/
o5/J2m3wIbgTboW3JvvjIjyrYh/IF3vYczo8KJnlo9GMG5DrcC9kIONdybFT
jBSrnaX5i+j9tsPH4c+jz78rOZbdWf8o4xv8/gH/inzDmg+T1ysnFC/F4H+4
Pjg2w+FUOIdqGX+W7G/5vYP1F0v7Rj76Ad0vOd92wheSfdST8dlo3ykHzsAf
B+eGbJJt3dG3o5uGnEX/CXMbS9skX8mHslU+7Mz580Fpn52D9+V86kTmMt7B
3I/sPQT9d+wd4frkM76H/83+bM73b4vO5Zb8/Zzo3JMPFUvFTL4dkOy7S8id
ij/6jeifhRtK2yl7dZ7O/QnpVLyR/sl3Vjy+jLalDzK9cP7I3xNZ8zDjF5ir
RjcFHgm/CtfAU+FR8EJ9A8+AJ8LLVd/wc/Ck4BpSLck+5frs6FxWTSnXJ0fr
7y5996bo71/i+2eCbZJts5P1qhHVysHk2jyd4zkeHghPQ98bvqP0+Y9F31c1
thZeFF17iqli+VF0rJUzyp025oagey15rDnddxL8CPwi3K/inqNetDi6F/Ut
fZ8x0f5YrBgH17jOa0+2Xz1K6yfANcE+l++VIztyfTeWrmHFopr9qtTrFNNc
K6eQDcm5qZxT7qknqte+Hd0rlybfTz1IvWgdvDc455X780v32lWsn1BxT1Jv
aoy2Tz1LvW117mVXo+2/J9q/S9hvDXyo8Pdj4Sp4BNwT/j3avr7RrB6p2tga
3TvXJ9eeakz+V88Xb45+C5Tf38J/FbZX/lbvbWf8d3KOqjfURfvvrWR79Obo
7dGbI/9sieYV6N8JfmO0/8pkf6mH6z5dSudzQ3S+tyXnp2pHtduRnD96g+Tf
B+Guud5l2xVkSfAboXq9nO+reKuelRMLc/9Xriim59n7Ru7X8rfeittZ80By
DJRr9fm9aM3791I9Ja+5Jb8/+lYxUe7L51dzTBUb3Vmxls+O5PdTvpSNqm3F
VLZfz+drjdZWF+4VeoP6Fe5psrVP4bdzWc6P3oV9oR6rXqueNax0zJUL6qnK
BdkgW24t/BaqJtVL5HPVqmpevUM1q14gG7vk91O26z9DpbAP9F/iJio6+iM=

          "]], Polygon3DBox[CompressedData["
1:eJwt0UtIVGEUB/CvpilwZQs12vTUTVALx5LogRXUQo2sKNCpEIq00qAoBxwj
e5fZIu1B2hN6aVSLslVtUtflKJWrdFWbdFULqX6XcXH4zvmd/x2+uXdRbWNV
w8wQwjIVVydmhVAHns0IIWXeFguhmZ1j/ewma2RN7CTrYxfZPtbLhtgnVckK
WIo1md/JXWJ7WZqdZwPsFmtgZSyHrWG5bL75hcqwzyrJiuSmot8098g1s1pz
p9wrNsH62R12mT1g39kbdpW1sAtskN1mR1kHe8l+sY+si7WxR2yc9bF2tpEV
sF1sAfupv8IeOsfYW9Ymt4nNY7vZQvZDn+DFqs6uxvzNWaES+uNy6+Rm20+o
etbFDrOq6fcyFr1L9sUuFc++5/UssFGWZltYkf4AW2H1W3+ffXD+Y8OsZ/p+
c/VTasQu17M32Gv9pNwA75ZbqUrUQbtqu6/OUvOq6I76JBt1LlH5nlutRjzb
a7+DldmfZuUsn02qQ6ybHWHbzTvlNrBWVsHy2B62lV1jNWwpO8s62TB7yk6x
M6yDZdgTlmbjsez7LYln7xndd7NcIdsvt1zuT/S9Ytn/lIhnv0v0fcrlitkx
ubVyc1iSVbJ2Vs0K2T32nv1lGfactbLrbIg9Zi1sMcsz56hBdpf9Bzb9bI8=

          "]], Polygon3DBox[{{996, 605, 1334, 1072, 259, 1057}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0DsvQ3Ecx+HfOS1FXFqXuiQiBhqKSNxCIrwAC6tExGjQ2WK2mC1mo807
8A7QSNgMEjGJQdDW03T45Pn+k3NyTv6TR5W9kyQiDvSj5v7Uq17SiDzfOcFv
LjCXidhkkTuc4j5XuKpje5enPOQ5K7zkGa95wVte8Y7j2Yi35jd0ry99qOaH
HljnIxuscoNFbXuvi0Pasjs5z0F2aM4eYE5lu5/tmrULbNOMnWdW63aGi0zZ
pzU7Ya9u7Oe0dVElu4cNx2m7267by3aNVc/9ccn5l0/Ow54Z0ajGktad/wPg
QSiD
       "]], Line3DBox[CompressedData["
1:eJwt0rkvg3EAx+GXus/Fhrrv+yh1R0REBEEsBoPNgNVgNzAb7Aa7xB/gDyAW
6jYYEJMgNs8vMXz6fN+2ya9v26q1rcXNtCiK9jVipPPCwxu/Veq5MpUrrgql
vF7J2owoquKN62rWua4Jzyth17FefXYDr7yv3W60m9RhN7NFSbuVjWxjuwbt
DnZqyO5it4btHvZqxE6EMzRq97OLSQ6E99tDzA836fwrpPE6XDLFGG+YwVtm
8o5ZvGc2H5jDR+byied85a+e9aUPncai6JLHPOMhT7jHI+7wgBvc5Sq3Oc85
rdvdXGENZ1jC4fDZ2BZ+G2fHw+/j/l74o2J96l3L7reISyzkAgvCGeG74Czz
OMNcTjOHU8zmJLM4wUyO01HRGGP//5U/7pIy4w==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{758, 973, 1220, 757, 972, 1219, 756, 971, 1218, 755, 970, 
       1217, 754, 969, 1216, 753, 1298, 1094, 752, 1297, 1093, 751, 968, 1215,
        750, 967, 1214, 749, 966, 1213, 748, 965, 1212, 747, 964, 1211, 
       1061}], Line3DBox[{773, 981, 1228, 772, 980, 1227, 771, 979, 1226, 770,
        978, 1225, 769, 1303, 1099, 768, 1302, 1098, 767, 1301, 1097, 766, 
       977, 1224, 765, 976, 1223, 764, 975, 1222, 763, 974, 1221, 762, 551, 
       1077}], Line3DBox[{788, 987, 1234, 787, 986, 1233, 786, 985, 1232, 785,
        1311, 1107, 784, 1310, 1106, 783, 1309, 1105, 782, 1308, 1104, 781, 
       984, 1231, 780, 983, 1230, 779, 982, 1229, 778, 1307, 1103, 777, 1306, 
       1102, 1078}], 
      Line3DBox[{803, 991, 1238, 802, 990, 1237, 801, 1320, 1116, 800, 1319, 
       1115, 799, 1318, 1114, 798, 1317, 1113, 797, 1316, 1112, 796, 989, 
       1236, 795, 988, 1235, 794, 1315, 1111, 793, 1314, 1110, 792, 1070}], 
      Line3DBox[{818, 993, 1240, 817, 1331, 1127, 816, 1330, 1126, 815, 1329, 
       1125, 814, 1328, 1124, 813, 1327, 1123, 812, 1326, 1122, 811, 992, 
       1239, 810, 1325, 1121, 809, 1324, 1120, 808, 1323, 1119, 807, 1071}], 
      Line3DBox[{846, 1345, 1141, 844, 1344, 1140, 842, 1343, 1139, 840, 1342,
        1138, 838, 1341, 1137, 836, 1340, 1136, 834, 1339, 1135, 832, 1338, 
       1134, 830, 1337, 1133, 828, 1336, 1132, 826, 1335, 1131, 825, 1080}], 
      Line3DBox[{862, 1019, 1265, 861, 1018, 1264, 860, 1017, 1263, 859, 1016,
        1262, 858, 1015, 1261, 857, 1014, 1260, 856, 1347, 1143, 855, 1013, 
       1259, 854, 1012, 1258, 853, 1011, 1257, 852, 1010, 1402, 1082}], 
      Line3DBox[{877, 1029, 1274, 876, 1028, 1273, 875, 1027, 1272, 874, 1026,
        1271, 873, 1025, 1270, 872, 1351, 1147, 871, 1350, 1146, 870, 1024, 
       1269, 869, 1023, 1268, 868, 1022, 1267, 867, 1021, 1403, 1083}], 
      Line3DBox[{892, 1037, 1281, 891, 1036, 1280, 890, 1035, 1279, 889, 1034,
        1278, 888, 1357, 1153, 887, 1356, 1152, 886, 1355, 1151, 885, 1033, 
       1277, 884, 1032, 1276, 883, 1031, 1275, 882, 1030, 1404, 1084}], 
      Line3DBox[{907, 1043, 1287, 906, 1042, 1286, 905, 1041, 1285, 904, 1365,
        1161, 903, 1364, 1160, 902, 1363, 1159, 901, 1362, 1158, 900, 1040, 
       1284, 899, 1039, 1283, 898, 1038, 1282, 897, 1361, 1157, 1085}], 
      Line3DBox[{922, 1047, 1291, 921, 1046, 1290, 920, 1375, 1171, 919, 1374,
        1170, 918, 1373, 1169, 917, 1372, 1168, 916, 1371, 1167, 915, 1045, 
       1289, 914, 1044, 1288, 913, 1370, 1166, 912, 1369, 1165, 1086}], 
      Line3DBox[{937, 1049, 1293, 936, 1387, 1182, 935, 1386, 1181, 934, 1385,
        1180, 933, 1384, 1179, 932, 1383, 1178, 931, 1382, 1177, 930, 1048, 
       1292, 929, 1381, 1176, 928, 1380, 1175, 927, 1379, 1073}], 
      Line3DBox[{951, 1054, 1400, 1195, 950, 1399, 1193, 949, 1398, 1192, 948,
        1397, 1191, 947, 1396, 1190, 946, 1395, 1189, 945, 1394, 1188, 944, 
       1393, 1187, 943, 1392, 1186, 942, 1391, 1185, 941, 1390, 1074}], 
      Line3DBox[{1051, 963, 1210, 1194, 744, 962, 1209, 743, 961, 1208, 742, 
       960, 1207, 741, 959, 1206, 740, 958, 1205, 739, 1294, 1090, 738, 957, 
       1204, 737, 956, 1203, 736, 955, 1202, 735, 954, 1201, 734, 953, 1200, 
       733, 952, 1199, 1060}], 
      Line3DBox[{1064, 1244, 997, 827, 1245, 998, 829, 1246, 999, 831, 1247, 
       1000, 833, 1248, 1001, 835, 1249, 1002, 837, 1250, 1003, 839, 1251, 
       1004, 841, 1252, 1005, 843, 1253, 1006, 845, 1254, 1007, 847}]}, 
     {GrayLevel[0.2], Line3DBox[{317, 523, 1199, 318, 730}], 
      Line3DBox[{319, 524, 1200, 320, 537, 1211, 345, 551, 359, 1306, 565, 
       373, 727}], 
      Line3DBox[{321, 525, 1201, 322, 538, 1212, 346, 552, 1221, 360, 1307, 
       566, 374, 1314, 579, 387, 1323, 592, 400, 1335, 606, 1244, 414, 620, 
       1402, 428, 634, 1403, 442, 648, 1404, 456, 1361, 662, 470, 1369, 676, 
       484, 1379, 690, 498, 1390, 704, 512}], 
      Line3DBox[{323, 526, 1202, 324, 539, 1213, 347, 553, 1222, 361, 567, 
       1229, 375, 1315, 580, 388, 1324, 593, 401, 1336, 607, 1245, 415, 621, 
       1257, 429, 635, 1267, 443, 649, 1275, 457, 663, 1282, 471, 1370, 677, 
       485, 1380, 691, 499, 1391, 705, 513}], 
      Line3DBox[{325, 527, 1203, 326, 540, 1214, 348, 554, 1223, 362, 568, 
       1230, 376, 581, 1235, 389, 1325, 594, 402, 1337, 608, 1246, 416, 622, 
       1258, 430, 636, 1268, 444, 650, 1276, 458, 664, 1283, 472, 678, 1288, 
       486, 1381, 692, 500, 1392, 706, 514}], 
      Line3DBox[{327, 528, 1204, 328, 541, 1215, 349, 555, 1224, 363, 569, 
       1231, 377, 582, 1236, 390, 595, 1239, 403, 1338, 609, 1247, 417, 623, 
       1259, 431, 637, 1269, 445, 651, 1277, 459, 665, 1284, 473, 679, 1289, 
       487, 693, 1292, 501, 1393, 707, 515}], 
      Line3DBox[{8, 738, 23, 751, 38, 766, 53, 781, 68, 796, 83, 811, 98, 832,
        833, 113, 855, 128, 870, 143, 885, 158, 900, 173, 915, 188, 930, 203, 
       944, 218}], 
      Line3DBox[{329, 1294, 529, 330, 1297, 542, 350, 1301, 556, 364, 1308, 
       570, 378, 1316, 583, 391, 1326, 596, 404, 1339, 610, 1248, 418, 1347, 
       624, 432, 1350, 638, 446, 1355, 652, 460, 1362, 666, 474, 1371, 680, 
       488, 1382, 694, 502, 1394, 708, 516}], 
      Line3DBox[{331, 530, 1205, 332, 1298, 543, 351, 1302, 557, 365, 1309, 
       571, 379, 1317, 584, 392, 1327, 597, 405, 1340, 611, 1249, 419, 625, 
       1260, 433, 1351, 639, 447, 1356, 653, 461, 1363, 667, 475, 1372, 681, 
       489, 1383, 695, 503, 1395, 709, 517}], 
      Line3DBox[{333, 531, 1206, 334, 544, 1216, 352, 1303, 558, 366, 1310, 
       572, 380, 1318, 585, 393, 1328, 598, 406, 1341, 612, 1250, 420, 626, 
       1261, 434, 640, 1270, 448, 1357, 654, 462, 1364, 668, 476, 1373, 682, 
       490, 1384, 696, 504, 1396, 710, 518}], 
      Line3DBox[{335, 532, 1207, 336, 545, 1217, 353, 559, 1225, 367, 1311, 
       573, 381, 1319, 586, 394, 1329, 599, 407, 1342, 613, 1251, 421, 627, 
       1262, 435, 641, 1271, 449, 655, 1278, 463, 1365, 669, 477, 1374, 683, 
       491, 1385, 697, 505, 1397, 711, 519}], 
      Line3DBox[{337, 533, 1208, 338, 546, 1218, 354, 560, 1226, 368, 574, 
       1232, 382, 1320, 587, 395, 1330, 600, 408, 1343, 614, 1252, 422, 628, 
       1263, 436, 642, 1272, 450, 656, 1279, 464, 670, 1285, 478, 1375, 684, 
       492, 1386, 698, 506, 1398, 712, 520}], 
      Line3DBox[{339, 534, 1209, 340, 547, 1219, 355, 561, 1227, 369, 575, 
       1233, 383, 588, 1237, 396, 1331, 601, 409, 1344, 615, 1253, 423, 629, 
       1264, 437, 643, 1273, 451, 657, 1280, 465, 671, 1286, 479, 685, 1290, 
       493, 1387, 699, 507, 1399, 713, 521}], 
      Line3DBox[{341, 714, 715, 1210, 342, 548, 1220, 356, 562, 1228, 370, 
       576, 1234, 384, 589, 1238, 397, 602, 1240, 410, 1345, 616, 1254, 424, 
       630, 1265, 438, 644, 1274, 452, 658, 1281, 466, 672, 1287, 480, 686, 
       1291, 494, 700, 1293, 508, 1400, 717, 718, 719}], 
      Line3DBox[{720, 725, 729}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzsvWk41uv7/2tOImOSoQglSSUq451ZExFJhjJVRGaVKdJEKJEMqaSRjCEU
VxmKUBRFZYqSBmkiSvb19vd7so5jrf/+rt3+7v3gvx5ex31Y9/36vD/ndZ7v
87rOpBw8zJxZmJiYQtiZmFiZ/u6/Qcboj4XRWsIaJPBdzypJ/cWMX5WuZHz8
EyNhG1+mhvA6wvGy1cf+rSzjjpPRMqw7TxuPvs5nQUZPSV/QnzmL0cjUoP2b
rq+qzP2pKmxDPNhnRUnsGdFSLfzx7hdd90hkX9ETbU9KcoIMnW5ykpkX6xR/
0vWo8c77V/mcSaKEzqoFM+aQF6wGPCN03fjntXj3uJ0kJG39ebM+ObJ82s7D
Q3Tdqy3Jb6mwGzldXWLDPncp2cmtlPyVrouY+ph9S/QgP7+arN7aqEJkzC8a
DdL1TQoZU15EexGu2N39JSFqxH8pif1A1z2V+1eom/iQgM9n+fgXMUjDinC/
t/hdkRylyXx+5MaXJauLPmqT9FODX3vwPf0FPUaa/EnpcVmpTj09smwhJ08n
XRfLXGZuGbeXDDW8H+E8Y0BmyD2400bX/47z3623yPMefB1tSoRvzB3YRjk7
cVtVgedD9uOOPnGbyc1U63A9yjmz7njaGF0/kvHTgilpKylMvuogRTkvLHSf
Bc5bXRRmGJg4EsUDF6eA843BLwtH6XpvuJHhtMfbSfWjbxZylPPFkjltw3Q9
wkY845G5K/kocJDXhHJmXvNN8jtdT4xknRr3zJ3k74+NYqWcDZi8WL/QdbnI
7iz5LE/iw//wsB3l7DE7IXSArgct+ax+bLc3iTo5f14x5azI65T4Dt+nXlX4
/WJfMjhfVouPcnY3f7HmDV0XFD62fM1nP7KJd77pDcqZb8Ov09103WVQ4MjV
/D1kucSMuHbK2TH+/v6XdH2OqtoIu+8+Mqf6/EMOytnvuibLs3/B+e/WVZLN
mNSobpXGf9bqUs4W2ZlvwTN/fL0KdGv8ZM+qOZTz+6fqi6HbyrelD6BbwQ+X
3Bwp5zeuPnzQ7ZPizETo1kNx3wA4r8kwi4Ju44/VhEK3EZ2sXespZ+MXbReg
29yMpi3QbbnEt0sslLO15VRz6PZzfSgXdNvBpvrThnJW3t19Dro9ucVQD7pl
DmCfVkQ5r45yOAzdJjpnVEG3W/fHDPJQzsJK0VN66XrrkFUodJv7enw4j3KO
bLaXhm6fz9bcDt0WKB96+YJynsXU3Qbdcu3Z7VhgHkDa7FOOs1HOlmbTFjb/
Qc7TUxVsoNv4LStEwLknS3ImOM8QzBWEbh2/7+2fTTnvl3ZUgG5ZxdTWQLfC
mY7KDpTzbsn1L6Hbxs3sOdDtW9+POvMpZ+Y3HfOg20cnVWdDt3HVJiXrKOfL
FSLc0K15e8AN6NY4KqebmXL2mf3zGHTLz31MG7qdW3mcFZw/6hy+DN025NvK
QrefFhdkFVDObOml1tDthxg3Heg28gJJmUY5tz9LzIRu86a4nYJuSbGPby7l
PEtPKgG6vczYycFBdRt79QTbc8pZN8ZcDLqVJO0xDiqBxOBN5WkWyvnT4mXq
TX+Qs0a4zoRuh+5U79KhnNWbBhSg29kNDTXQ7VA7UwHiM9/ZngnddgxYJ0O3
7rdd7tpTzgoCoceh2/1M9WHQLaedd50s5SwfUHUVutV/zuYB3ep37PddSznP
mJVnA93ODzLnh27bddybmSjnsy4GmdBtvUrIOug27s34gS2Us+zNg/HQbUyK
22Pods6JuCP5lPPvMDcR6Nb72JRj0G1L69CmqZRzsc3v5dDtK9FSH+hWo/HL
i2zKOSNHbRC6Pa/N4QvdNpbtlW+lnPml5+pBty/fKIbxCQeRNknetUyU80KD
QqWHf5BzQs3LCd3mb7c+r00535UQloduE2Y+1YNud2+WtwBnqU1lE7qdcSYv
D7q9/rnr+DbK+d46bnnoNjvl5YRuFz6/oylDOSfYswpAt5uHnW5Bt1sWzRVZ
Qzkf7LkQD906+g/oQbfPgkrKx6WWkj7993nQbaZVkzx0u9ZOr2Mz5dzR/NIF
uhUSajCGbuOqtEgu5Swqt/c2dGuhY5kG3W7b/bSRg3JeVV12DbrtcAsQg25f
3PI2yaKcLaWyl0K3y/oTzkK3/B3B5k8pZ1+mNeZNE3F7vmz5UBDxXJo+63eK
ASl5G8tf9wc510Q/rYZuHfiKGlZRzj7JCdOh26tbY5Og21PNK6XEKefLeoMT
utUIDoqAbjd/ZHHfSjmrv/ycCd1euBTgDd3WpVbVzKWcOwpSHKBbffkyEei2
nn/7ZSPK2URx4AZ0u6Ug1QS6vToim/GbcrYs6T8H3aaN/G6FbqN4SrdbUs4K
2THzoNtO8dZU6PbXjKm3syln28R2Q+hW+KB5OHR7kvWjChvlnCX1jPU5Xec5
+zEcuj3+YV5GJuX8qCJwC3TLPmoQCd0uPtuxrZlydparXwvdPmCJObXrWTAZ
fa3d8pNytqypeXb/D3L+u3VzXrdM6LZoeOS1KOVcEx40oduY6dkS0G1P7isV
O8p5U92SGdBtj+P0Uui267dhjSTlrHcoOhm6/VIbvh66tbukP2xAOSdxxJVC
txczvs2DbuO5nnmNUc6MPm0/6PbhgpBN0K3esbZWC8q50yT5AXR7Ws2/ELpt
MfaIuU45546cKYVu1zEryUK3KQo7DZkp59Ppa/Sh26PzWAqgW5f0YekMyvnh
0XRX6Fbj7VJV6NbB9KzFY8q56PxVeeh21soNJSLFIUS2Oz5khHK+b7zlUNV/
gTPDRuYIdJu4L/jNLMpZgs/hOnTbLGs0odvs1YbpNpTzGYlaZ+j2zfCjCd22
uck+mU05P6pvLYFua2f72kK3v2p0HPQp595dsVehW8e3Qu3QrZu0lOovynlf
5tel0K2Tvt5F6NZ4y51F5pRz191xC+h2i/zgCeg2aE3KhgzKOW57kRB0e+pe
bBx0uyaj7/ZvBQaxXySyG7qtzflxAbotW+hifZVyVk+TdYBunU9suAbdntZ2
C26knCsDOgehW/0tH5KqE/eTsPD7qsOU857tBqJ3/wucP2w4PRFvK1O9popQ
zut+nZ/Q7XEBgzvQrXiaUr015RzfVZoK3Vo2BmyEbk0EpthKUM7vE4LvQLer
dzJUoNtFKTuLdSnn7Qn9wRO69XloDd3a299k/Uk5RxuNt0C3+v2WBdCt3OmL
VmaU8+0VpAa6VZ0zvhK6DXP4vOQq5WzVuGATdBvPrnIHun2/9FPWT8p59xgj
BLp90KO3Ebp9rXqm5DLl/JGHRRu6rSja1Ajd9ktc0HlIOTM+e56FbsWKnwqX
aIQSo6nbbn2jnO2NohPK/gucn7kVuUO3ml5PxGdSzj0bVbdDt52pi2ZDt9kt
g2NWlLP4Ao4y6Nau3GozdCt77/0sMcp5dEZQNnTbsfdtP3Sbv2H5qDblrGeT
ogbdbtLyn9DtXLFLaSOU8/P7TvbQ7b6nJ89BtyXvhu9soJy9vFvnQrelCS/O
Q7cayglZlyhnM/fhEOh271KXXOj2+Fbevh+Ucyt3hR90W/vSqRy6LbGoab1I
Oc//sXJKDV0v0dO8Dt1qXXzMXk85l4rYLoNueXOWqvNmhZLeMTfeL5TzqTHF
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
nBICDG/t44KfsJ86K1xUr/ck3gklB4N+8TMu7eC3QT0l8/pz6xZXL+Kk2py2
SIWfIaY3nevjP8STqOM5y180eJHi3Ae3DAT4GUY83Is//MPnXZ9oWvnFGZHm
CmPFWIYcQ31T01bos9i1uZ01yYTIrme9cYKuv/dXGYPe9lVeY5zebUayWQTM
XadLMkQK1a9i3e9zzwq7zxZEXsWkxoWu388LFMV62dmTxugn3vqWys/jx8tI
H+FJhz5Xd/b0oW97pGvfW266HtG+YKJvm7R3JM+42I5opaz4Uf2jqrxipdEG
rL8IXOASKWFPeE9vNsqj6/cFV7lBn7uWF56P3+1AgrwHPvFy8ZOP0e9yoE/D
7rwdw4udyHwe11SsK/mUn4cOmYqUnJnDnElIyjRHhSJJ4irx/S50GL8m45mj
zg7yO8EzciFdV5S+dAR60y3T/916aRexFmfvUI1aQsbSdMfgjx3crHVBbYc7
8dBvmb6SrvdpXneDHn5/tL6oW7ybRIavba65qEz2Tjk6D3ror7Pe+VjDk5Rz
bHt4n66/ndXgiufO0DtUuum1J7FJjR2yLFtJFnuosOC5Z47p8ky550XOHI6P
20TX2edaiuE5PkmfMR91ylJer6OvWzSIwKJ1J7C/1DuULkFezXT1hGYvXd9z
eU0I8uonGyX4yLAPebHrTpHqnlXEKri+EfVL3X2hB7tbfQnrpSHLlXR91eCV
OOTbiUuvu38J9SMGulkHQ8N1yNKrRZWv6PoNBbOmNHt/Mlwi1RdM11XWelh3
oR7p0VOR5dpD9tnO3F51XI/cEJvm0kHXL+kEqTa/20NWLhMur6DrisJpLf+U
R/3duuElWWZZXysiLx6yC7oyrxDyhX5Wpo9oo6/nMT3m8jSqn4UdZ0Wgk/qH
luYfOxyI+Ii5aTHVyXOhWA/o4cNoKduWz86kLnNXBPRgHvF+L577Eh820Xus
LsRvn9oVPPeL27OVETfspw+xnZHzII+OCSqtoM/3jdruSry/yjdNWg9IeBGW
Hk63e/Q51l3dlYD3cfTLUZWbl71JjIlhtjl9XrtcH4vhuXwt8OdG/Zimqzz1
FX0uJY8ubAT/U+LiG2eX+BH/DqPZKyh/Ubl2TXCeF1/KZKqzh/jZnfcPopxr
qsOet6PuSFHkCqd5Y1PSnqE7lGcVR+yCf9P3z9OdFfd+yIZExR77uZPynPOe
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
ncLb
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"Active\"", TraditionalForm], 
    FormBox["\"Dormant\"", TraditionalForm], 
    FormBox["\"dD/dt\"", TraditionalForm]},
  BaseStyle->{FontSize -> 18},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{843.38671875, Automatic},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 33.333333333333336`}, {0, 100.}, {0, 0.25}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.176122988428572, -2.367825962986662, 1.0525630376557147`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.657908209672117*^9, 3.657910326948703*^9, {3.6579106520097637`*^9, 
   3.657910669591928*^9}, 3.657910701023429*^9, 3.657915132965551*^9, 
   3.657920142307888*^9, 3.65909696152218*^9, 3.6590973494179583`*^9, 
   3.659097925648766*^9, {3.65909803427527*^9, 3.659098051570013*^9}, 
   3.659102373863706*^9, 3.6591033792239923`*^9, 3.659103459861328*^9, 
   3.659103504568244*^9, {3.6591035708221416`*^9, 3.659103574488509*^9}, 
   3.659105761960601*^9, 3.659110242030027*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"StabParms", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", "\[Rule]", "2"}], ",", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "\[Rule]", ".02"}], ",", 
    RowBox[{
     SubscriptBox["\[Gamma]", "m"], "\[Rule]", ".01"}], ",", 
    RowBox[{"\[Alpha]", "\[Rule]", "0.03"}], ",", 
    RowBox[{
     SubscriptBox["\[Delta]", "max"], "\[Rule]", ".1"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"A1", "/.", "StabParms"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["m", "a"], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["m", "d"], ",", "0", ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(m\), \(a\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(m\), \(d\)]\)\>\"", ",", "\"\<A1\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", ".1"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.659108786834948*^9, 3.659108859406787*^9}, {
  3.659108894899621*^9, 3.659108915274001*^9}, {3.6591102478588467`*^9, 
  3.659110248336828*^9}, {3.659110320896591*^9, 3.659110406869545*^9}, {
  3.659110499885191*^9, 3.659110625112856*^9}, {3.659110703167276*^9, 
  3.659110729524095*^9}, {3.6591108823952217`*^9, 3.6591108825606117`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"r", "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["\[Gamma]", "g"], "\[Rule]", "0.02`"}], ",", 
   RowBox[{
    SubscriptBox["\[Gamma]", "m"], "\[Rule]", "0.01`"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "0.03`"}], ",", 
   RowBox[{
    SubscriptBox["\[Delta]", "max"], "\[Rule]", "0.1`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.659108820230719*^9, 3.659108860124983*^9, {3.659108907720393*^9, 
   3.659108915739337*^9}, {3.659110244611554*^9, 3.659110250708509*^9}, {
   3.659110381323151*^9, 3.659110407282229*^9}, {3.659110502400106*^9, 
   3.659110625889975*^9}, {3.659110704617608*^9, 3.6591107301101923`*^9}, 
   3.659110883094317*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nHk4VW/UsNGkUYrmSZRSSUlKaidUVIZoFInm0KAklQapZOwo83jOcQaz
EpGQSEWDREkjZUoUkjR4e79rr7Xe63zXr3/2de4e29r32fawnrUeJbv9a3fI
SElJqfWRkur1bxu7MSHz4kznJbC9Vet68k4/DrNXfUnoFKNrDPDV7+1n15Rc
ZhIbqnpUjAqQ/85eXDLd7zKjkq2gmelYgnznwppnjiaXmcdFqtdVjJ4hf7Vr
rpf7oMvMJfWiUsfqSuQ+v3XGTb0fwCwPtqvLcKxG/i55SpzqmQBGWup//71H
PqemoX2xdgCzNf2xj4pRDfIykUhz3nN/5vbuyNFGnI/Ix3KSDO7O9WfGjncQ
OFbXIV9zMvz+Ri8/5liZjiZHpRF5ellmVK8XvswLz/75GY6fkfc0lU9IGOPL
aOm8XF2d8QX5iva+wr4WPszlFkFVT08r8vyUhXUcd2/8DF4tQ05ZDY6PQc+w
nT7t4a7ZVjHoGfif2MmiyP4x6Bl4k0nPZ/u90egZeIKiV9T5W1HoGbiH96dJ
q/pGoWfgqwr3rllrHImegZtrGR3UuhCBnoFHjqq56JkTjp6BW295bf+wMQw9
Az83zj7pzJAw9Ay8zWvz8/FqoegZuFxq2OPeuiHoGXhJqlWan34wega+6fvn
kb2XBqFn8Fd55Njl9hw+jgM+To3H/WrIx8+wLQocVP6uhIeegQ/MvdOXa8JD
z8C3b+QdGfGYi56Bu0rp+o0x5qJn4CYFapVeBbHoGbizSl3xYu1Y9Aw8T+NK
0mBRDHoGPlEp0fWxQgx6Bh43ZOzMuO4o9Ax8WqD1ifKCSPSM8Te3nblzJgI9
A3eUzwmV0Q5Hz8ADBs7bplwTip7Bk776+vlnlgvRM3CLCs87rdcF+PPAW7IG
nd8+QYCfYfvjTM/jYs849Ax8Q8DvBqkmPnoGbpqaptBpzEfPwG+NOefqI+Kh
Z+DZA4zlRTI89Aw8NaoXd8YmLnoGPmfKKW5XQix6Bp43q3xma3cMegb+Pi+o
8YthDHoG7lhz/DtvdDR6Bv5h258HX6Ii0TNw8++LWx3GRqBn8DGteUGo2lAx
egZ+eZzo/q89IvQMvPi9x+ted4S4X+B2JRXhGopC/AzboJCNs/bvFKBn4Ofl
zw9NTI9Dz8ADklaMKO/ho2fgshoGm56s4KNn4IKRhVrePjz0DPyR/lS9r4+4
6Bl4/6w3S+sHctEz8PDGr5M2Lo9Fz8B/r29rnH4yBj0DD/Qud/C0jUbPwCOm
GZnK5UWiZzhuzeHL+rg6xaNn4IeqWpfdzBKjZ+AFad+dt8uI0TPw1YNijJxW
ivD3Ad9hHTag2FuIn2G71L2v/9ZSAXoGbpmxS3faAAF6Br57wlZpecM49Az8
VNN88/4n+egZuKKMzkSpazz0DPzllIqq2lryDPxEhvsO7jAuegY+WcZu5PQl
segZuF/pw5TtO2PQM/pRChedHRGNnuH4/EwXl+ReSkDPwD/H/Fj+4GE8egb+
nMOUH5SNR8/AB/pv/Z6oL0bPwP1XOjQ4nRBhHMCdmcawhGtC/Azb2vHrE9fX
kWfgG2p5e+1HCtAz8EVFAU8K//kHz8A9IhtPOh7ko2fgK1JTck3DeOgZeNdp
JXfrfPIM3N4mbuXFWvIMfKHOlRV3esWiZ+Dma2oX/5wUg57hOPpKC7b7HE9E
z8AD5sp53LiWgJ6Bizoa6sX15Bn4xtZBs23HxKNn4NrjsnMfG4vRM/D7MxTu
fXYVYXzAUxuuLkriC/EzbMsUXKplH5Nn4J+0/k7p6CDPwO3uPLPePjoOPeP1
fujM8yaL+OgZ+NfjPbbCzTz0DHy09ChH+6Nc9Az8T8b4jy6XyTPw7D3eNytE
5BnitdykytM2SULPwCtkQ1tnuieiZ+D9FPyEiokJ6Bn4CUV+d+ML8gw8Rcn7
a6x0PHoGfs61z26t6WL0DNzU5Z1ihIkI4wa+zv2dx6ODQvwM26VXk+TucATo
GfjZrdcaHdPIM3CdeV+Glzwiz8Brv+XbPqknz8DLl2QePNhDnoFnVy/MECpw
0TPwF/F6e3erxqJniKvvjOoUlYHJ6Bn4fmM5vSlaSegZuJmS6W1d60T0DJy/
JtV7u0cCegZ+T6qo46qQPOPz14MmpYcPyDNw5/NXxnU3kmfgF9f5P5ogK8Lj
Ab7UetlvDRUhfoZt15LGNdOXCNAz8MD+Dwyk1sehZ+C6J7cyyfv46Bl42gGf
ozNO8dAz8OtTb0gfCCDPwAfbfihxjibP8Pundn6c+zaTPAN32S5v8uY1eQZ+
xG1M3jCpJPQM/Dqn5YOrUiJ6Bu6QKOzur5eAnoEPlR+slW8Tj56BWz2T5191
E6Nn4JH9zfTOXSHPwM/knW72TCTPyO2/7r1SQJ5hG3azdae4kjwD3z9Ob39u
A3kGLjv4bGdpF3kGrvM0YO3jvjz0DLxpQsutW//up+AZfo9MeQRv7sYU9Az8
YZPduy+uyegZ+Om199b9CibPGK+849T1N8gz8LdDZG1+PiXPwAXhnd/fNZFn
4Dcq6st794pHz8CDao49sBstRs/AG5oqAztmidAzjn9gWp2+VIjHD9zVpmNu
lLkAP8O2xnn6qATbOPQMXHaqbluFIx89A7+f3SY/+hh5Bh75Ykya01nyDPt7
ITvwSEULeQb+d5Dj1tqBKegZ+I33fLstqsnoGfcTO2Gxrl4SegYetL490n1T
InpGnsFTmXggAT0Ddz5eZjvakzwDPzz7R9nuEPIM/O2BCfWy8eQZeFn0lb8d
WeQZeEhz5I5p98kz8N45UzdGPSfPsH203llq7TvyjOd71SOXJQ3kGXjE+rl3
bFrJM/yc/NAmh3dLUtEz8J8j/nwPCSbPwAddMTnQkUKegc+ITvd6dI88A19/
3Ntl0mvyDPzI8702ja3kGXjkh1YrFZkE9Az82ZHzJx4Ni0fPwBO6NPLfK4nR
M3DRUtPRm2eL0DNw7ZXbHbQWCdEz8PyMV/5OhgL0BfzE/PurpE3i8DN6CEjZ
1GjJR8/AR5zT2z7533MLeMb7pMlRf00P8gx8kcPyQzeHpKJn4OEbDsoP1UxB
z8Bjxg6y0FuRTO+TLI/OtF0tvTkJPQMvNH1zdfW+RPQM/Eylxu2Jx8kzcF+P
SYZHvcgz8JGnt8SZBpFn4P0LLYzjYskz8IiJ/a4eTiDPwO85VL/Kuk6ecXzt
3h0Hs8kz8C8+6w4F55Fn2DY+Gqo57S6P+ZTVt3SqERe3y2TyY4Juh6F/4Fxv
sxKttjDG/goT6FjdguP3j/9yvZd7IO4XeHN5q1rz2ED8DD/3ZO0W/yuqqbh/
4Fpvr2Xbb0vFcbB1ctz25vUgPn6G3+N5LyKLo8fH/cP+rHIFpwc0XcbxwEsf
bPY60+SN42E/eV79AwYZpeJn+DmZ4QWrXvjxmFdPg+dMN+LgdpW3rX1OdhDj
pueckeHYijyqYsvDE10B+Bn+f8B089bd61LxM2w9T5hKazXQeQ4/t7L52xrn
x7R/+P8UtyF9f6V74/4h3uRD+qlTdlL88HNlr29HDhRT/Jh/9rF92951GcfD
/x///nB1QVkAjoP9ODT0Gr/tEMUPP7fhzH3tvTJ8ZpDb/kHSUvR3qV65dOrA
HTGMybyBzlJS+bg/M4MVH4MjLyOH8Rc9Bo2SmRDDBCW83SoldR/H//XqbWa5
8zJyGP/0Umhaujia2S+/aaqU1FMcH2M2QN1l1mXkmO+da2D4fVg0M/xRwTgp
qec4PjJ6ne2btgDkMP71nX2mAUejmH+DhktJvcTxSuIj7jszApDD+BtVfZtX
v4hkrAyC+ktJvcbxRop/nZqOBjA9/+/fu/8vnw/jYT8OnLq0ljmROB74WjYv
/ezNvF89PR9wP/qls9RO1vsjh/Hzfrd4VleEM/xbezp7empx/IMNDqcnWvkj
h/FOJeNnHZsQzriERn3r6flEz8WGkzPf3/dDDuNdrjz9lmMbxqw8Wt7c01OP
488IxZrqGn7IYbxu+dt804hQZsw62YaeHpp3mGNV4GQX4Iscxi8JmXvo+dMQ
pnnu4tqeHpqPGJb0XqqgwQc5jGe+Gq+o/xPM5A499Lanh+YpGhvCt35a4IMc
xttkzbIZrxyM5y3cNwLbT0qV/bsfwfkJ3GphW9/tTTw8D4HPeWytGXqSh+cb
8AXec5dsGcLD8wq4Q/Drv8ERXDx/gLekatvOn8bF8wHjUbeznJQWi+eDZP4c
vnfg8/e/TW3PisHvF3i/KXWGUQtj8HsE3iM9bMQyh2j8voA3mOla5thE4fcC
PObKkVwH40j0D1yk9alYfnYEegZ+fWjCtZ2DwtEz3IcPvp/4Ve+eAD0DL5b6
bFmsL0DPwDtc+IEyeXHoGbhq/79WH7Xj0DNwyxO2VVuS+egZeJOxIMlqMh89
Y/78ZcTnJ4E89CyZPwfPwOc6NM+2cuKiZ3y+0Le1M3wRi54xPxrffnPt4lj0
DPxp5zxvp5gY9Ax826E+BzykYtAz8NXLIvZ2ZkehZ8yfH45LPukUiZ7huebc
/GzuHXcRegae3erzQu+zED0D3z185PPodUL0jHnmOcEfn9wWoGfgX+O8ZO4p
C9AzcC/XzrIjF+LQM/B3i4VRz/69V4Jnyfw5eAZ+fcy87HYeDz0DL7y55m/Q
Hy56Bj78S1dMvCUXPQO3MK9PnSiORc/AYw6Zl9Z1k2fgqXOHjv9qFIOegc9n
JovXz4xGz/CcGD9JZ5HZUzF6Bp68KH3XQg0xega+Ue10qJqfCD0Dr5o3Pn5M
kxA9A89sXKYrZSBEz8ANS22yy8IF6Bn4Bl7fdZ7f4tCzZP4cPAP/83XRigFB
fPQMXEM3a1/BRx56Bn6g65Wz+hweegY+o0U8Uf84Fz0Dr27TbOgoiEXPwHPn
nfijLRuLnoGPnmJlILUqBj3Dc3fe+tM/imvi0TPwzUGzUvstjEfPwF0CAu+7
+IrRM/BHnz+1DH4vQs/Ap0yxSijSEKFn4HJHDbYGnRKiZ+CcyokGrqUC9Ax8
I5s/B8/Ae6a1c7u2xqFn4Id2Waz1EPDRM/Ale3bUdTeRZ+AxIbuj1s/ioWfM
N3cMu+TryEXPwDcpbrsYlECegUeOs1m+u548Y9500LKtT0sS0DPwyeeuPXYY
k4Cega8/uPW51a549Iz5cM9al+BrYvQMfEjN8djRv8kzcJnww8qv9UXoGd9f
Wy6nvPQSomfgz9j8OXgGfndOUs6IoQL0DNwj6o3pSrM49Aw8gjMgM8iPj56B
D7x3tb37IXkG/j7p4ifHPjz0DDzQqcq4YTEXPaMfx4Rcu8Ox6BneCz89G7Bc
PSQRPQNfVBZwLPw9eQb+9flxKzfVBPQMPCg8+HuRQzx6Bs7IbFp8LFWMnoH/
+HF8uH8beQZudjRaX0ZThJ6Br2fz5+AZuP0zzShuMnkG3jZzzvWCRvIM3EVl
pMo05Tj0DFxu+AadR5v56Bl4rsl41cQA8gx8SN0LmbxC8gw8uiK7tKeTPMN7
9tl7DeqfTJPQM/CQGczb+YGJ6Bl4nzerohQryDPmRYQ6S08qJqBn4ONnXvfc
YxmPnoG/XXB1UuVlMXoGvv799Wu5j8gzcC82fw6egRv/3peRvFSInoF7nz+1
MOGoAD0DDxuvJZJLIs/Ad+srLHvxnjzj7914YN6fYXz0DFwzakTYCX0eegb+
LqnbzewQFz1jXUZlwt7FXeQZ+Pd5L+0MtZPQM/CI/u+utB1ORM/AAyauctJL
I8/A1a75mqk3k2fg9nqPA25MiUfPwA1Cs46WW4vRM/AoNn8OnoEXicZkej4g
z8DPulmWDP1DnoGnde2/qDRbgJ6Be+4d9fn6v+s8eAYudvn54a4feQZeedtz
zZoc8gxc3i2nZ1UDeYY8UJlq09HKK8noGXig66wu7afkGeu8vNRHWQ5IQs/A
//jrFKjqJ6Jn4GIP6RcpbgnoGbha06FZjankGfjakWGcp5/IM/BgNn8OnjE/
b+S92W6VCD0D/3z54IPeJ4ToGThfMOLa8gTyDFy90S9OpYo8A09z+To9vE8c
ega+sGR6tkCDj56Bb899UaS/mYeeMR9fOomrNy0FPQMv/lyp5G6bjJ6xnuun
xqqLweQZuPbvi47Wj8gz5sndjjztlk5Ez1jfoZpy3VorAT0D75jTaeLx7z4L
noEfYfPn4Bl42sVjH58Xk2fgigqZXT+/k2f8vfu7J1RMFqJn4KaWNTb2JgL0
DHyoi35mrCt5Bm73o/8E31jyDLx095jTkx+QZ8hTTug6es06nTwDL56XfflN
I3kGLmWlPkl3QjJ6Bq43eJLUUfMk9Ay8QPfUI28P8gw8b2TpeNd08oz1Suky
pxd+JM/Ay9n8OXgGbia6teEvI0bPwMXJ/e7+2idCz8DtdujOuhtEnjFPfmri
X/N88gxceM8iKK6BPAP/MGiZ6S25OPQM3O+x9PEALcrLYX5YM/PYmvGp6Bn4
M+0Fy0WOKegZ+IRhh14lR5NnzJ/vyTCNfUqegScdaL1wUioJPQM/POfaVr3Z
iegZuHKpenLTlgT0DNyPzZ+DZ+DnpdaFpqeTZ+CD2xU/PHlLnrFO5E2vqnv9
ROgZ+Nzl37SDZwvRM+YzF5YlL1kvQM/Av/nGNWQfj0Of+J6t++7uzAXR6HOz
t17PTccEZsjnQbI7zkSgz/DJ/E/7qwXM/syMiY+1w9DnazYPfV54Y0F37xD0
qcN9tv2WYzijdVVx2Yymq+gzm83TurScn5bWEIg+j/zN+j3L6CwjnBhv0yjN
QZ82bL7LSCJ/KMPG/+DbsqDXq8LQpwEb/8bNm83fTg9Bnx5s/Bonl4ivTg5C
n4Vs/AYqluN2aF9BnwPY+D2dh7de28Oh9z42fqPtdS9qswPQo7vfoSyOyh2m
NjN34eFnPPQJ27ddi25eb+WiT930FZteZ9xmPIcvt89X4KLPNz2upZmOt5jm
U2VafL1Y9HlyVTwTqJLFtK3/0He7Swz6nBBcfc2pOoMp9rqj/2dHNPrMrRk0
1ZiTzrzuyDjyooXysQI2r3VQIv/mysb/a3GnySkryr+tZOMvz9QZuWFINPrU
YOMv9u6lZHE4En2WsfGXb3h/Jb4hHH0eZOOvSnbW+rU3DH0OY+O3l7XXK+wO
wetAOhu/Us76FduCKc/5fWtSs4rRQ8be6NyioUco/3avz3IBR+UB83PdXN8V
ojj0DFv+7nNPh/57bgTPO82PjnaqvsfMUX131HwcHz3P/yFXXp1RxGzJWmne
tIWHnvtGinyMOIWMbL/HspmxlOesXKa3PNPxLmOV4Bfp20R5zglsXitLIv/2
lY1/d2te3Zd5lH/LZ+NX2G3w6c9eyr8FsPHLeBk0cvkx6NkW4l/BP7X0bjR6
1mDj//D1vnibfhR6lmLjL/D6HjjoAeU5y9j4G9c4fPS3oDxn5qgO/+qMMqb4
rbWLjyHl36L35TtwVMqYJuvCityTlH+7kOtjZMR5ylRujx/OvylAz5i3GDzT
fWwn5TmT7xv3dap+zNyf9HSk9Pw49OzuVJtXnfGIiZ49ct0sV8pzmiicOGbE
KWW2j494fjiH8pwl/5F/S2fjl62cV2ZynPJvEWz8nmHWo/NSKf92jo0/RM+t
6Es95Tkd2PiTBtYIeJMo/yZi4780KmsPfzPl31zZ+DNKzS22zIhGz0Zs/Ddf
Cbq/cSnP6XzmsljFqJJ58Oum73k+5d+snlufr86oYFxWTzYyfi1Cz/qqavYc
lQqm+/gNW4Ei5d9muHUyRpznjL3CgvLjZpR/g23G45/mYh/Kc/6a6P8zw7Gc
yXJzHzvwIeU5aw9ZVTpWP2MSwuPL3WQp/3bhP/JvB9j4NQIXDLNzofzbRjb+
Yxdef+SKKP+2lI1f4XLgaVE15TmnsfEXaKuXG8hR/m0o5GvXWp1crk/5ty42
/m2Hd4e7HqU853s2/k3uqxUMN1Cec3aT+l3H6lfMvNb8CUwe5d9GLv4VrWL0
ijnOn7H/bgflOXv8i09UZ1QxQ1+/KJwzg/Jv9TWBmzgqVYyjWt9QJzvKvz3R
sp1vxHnJqLVl5m8JozwnbKfv3Lz+zTPKc0ZXd7VmOL5gOhbN5j4ZSPk3fYn6
VfA8k41/W8DDdcmGlH9TYOMv+JpzyPIw5d9+s/F3+NXWzOFR/u0jG/9ui18J
k56R51I2fmetpLAuKcq/pbPxTwtwUvafTfm3CDZ+4WtfvUxryr99Xlv6OsPx
HaPRqZCYkUT5t/K4kCzH6rdMVnRi3sH3lOe81bU9SMXoLSNoji4VDKf8G2/V
HOfqjDdMbMWgV4tXUP7NO+qPKUflDVO42PvW+OOUf3P+9mCmEec1U7BHodfM
FMpzwvbOOJ221bXkGbZlEvm3Bjb+wM+cIct+kuenbPwbly1zO6FCeaGbbPzT
pgxXDjOl/FsMG/+4oBf+x90o/3aRjb/Pt9uZPXzyfICN/9Jhj9ZeT8jzRjZ+
tUnXK+y7yHM5G2+1UOfty5OUf1vRL3xPdcYHRmzlFHU7ifJvtzSkX2Y4fmBm
NUa2l70hzxqbdy3nqHxgzsmWykkPofwb3+NRumP1e+a5zfwlWkso/zYqSVPZ
iPOe2fu376sNTpR/86kMvaxi9J7ZMTbawDyK8pw2EvWr4Bm2c+Om9lcLo/zb
cjb+seuKXE0LyHM2G/90I56/ShN5Vmfj733Gpd1PnvJCXDb+PjsMVJ0XUP5t
BBt/wVHbU+k2lH+7xMZ/TKtGQesc5d/mcHpdVDH6yKxevdZ3xQLKC8Wx8c4J
//DAdQfl30Z/erK9OqOW6e+q3CngUP7Nb8j88gzHWkbJO/1HXh55llkQocdR
qWWSpeR6pTWTZ5dtMqmO1TWMlO70qztHU/6t6dLuCUacGmb+oQqHUkPKv+VI
1K+CXw02fnvp+b4fZ1FeCOdJLDcvMbWgvNAoNv5HXjF2Rq6Uf/Nh47+1USDO
iSDPUmz8B/XWNF7OJ8+H2fhLbmYoptWS5wY2fsPSlgXSfSkv5L/8mYIRp45Z
GWmsI6ghz70OLPBQMapjDicHb90wmPJCR9l41e/PtazRpvxbc0Fv2+qMT4zs
nxn62naUf7Nt3vs4w/ETU9P3famhD+XfniuW6XJUPjEvvQ/L/LlBnlcy2gmO
1R+Zl50ztq16R57HSNSvgmc/Nv5lHK7sz0zyLMPG/+2Dgf+vV+QZtn+Nfa2P
/SHPTWz80sP7bN46kfJCNmz8050HFYYupfzbMzb+KxfXqCtso/zbcjb+bMPf
rlmnyfOX7phYx+oGRmtmeWPJacq/bVPpN9SI08D8HVFVrikmzxVrHN1VjBqY
yFHJ77aUkWdjNt4HZr8mLvxJnnNjFlpVZ9Qzk5d/WpA9ifJvcx9GP8hwrGcW
FtzdUraC8m+C9j4LOCr1jP3z3JX7nSj/5ipRvwqem9n484ac97qnQ3khWzZ+
+X4RE8VWlBd6zsa/5X3bhe7jlH+D7ZIgHyY+nDznsPH3X7p1qTCbPGuw8R9b
YPPn3UvyzGfjV5W3s1nWSZ5XpexX56h8ZnL7tK9wVKS8UN7LigjH6iZGx/75
nfxFlBfSlNEdaMRpYkacs667u43yb6IZ3GMqRk1MlaaG3d4LlH8bx8Z71/Hs
RWEieQ5wd1pfndHIhFokmTmVkefeoueFGY6NzJd8sUXad/JcKVG/Cp6N2fgV
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
rMcrXT9Mfjytf4h9r+y87f8A/Fojeg==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1: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
I/Ls2D/YBuO/Ay3T4QI=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsvpFEYwOGPcRsMK6Jd0RAFpSgoN4pViSjoiGK3WIlsQakQOh1/AS0R
+k3o3MfMuM2ystkIu2Tjfg3PSRS/eU7mO5nznsxX0zvQ8S0niqJR3SqsL/Vb
87lR9IE/WM0NNvKQrTxnO5/Zw9JYFCX01bqew2zmONs4xS7OsJ+L/M5l/ucJ
77Wta/3TioFSXGWaa8xwnTthJu5yk3vcYlL74Xd4wBSzTPMnMzzkDo+4y1+c
dY9TPuhYN+GOmjBbkiNc4iAX2MdpdnKSnzjGJg6xjrX6Yh1nNx+d8Zl/2cIs
G8K9+JEX9v3hncp1FfaqyoxlrGSCFSwNe1jCBItZwng4j0UsYL4KrWMsCP9x
+I6vytNLeKYnGSOa83H2/j68Acy/Svc=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1004, 473, 689, 1113, 912, 691, 1114, 913, 692, 1115, 
       914, 693, 1116, 915, 694, 1117, 916, 695, 1118, 1010, 1217, 696, 1119, 
       917, 697, 1120, 918, 698, 1121, 919, 699, 1122, 920, 700, 1123, 921, 
       701, 1124, 922, 702, 1322, 1005, 923, 1006}], 
      Line3DBox[{704, 1011, 1218, 703, 488, 705, 1125, 924, 706, 1126, 925, 
       707, 1127, 926, 708, 1128, 927, 709, 1129, 1012, 1219, 710, 1013, 1220,
        711, 1130, 928, 712, 1131, 929, 713, 1132, 930, 714, 1133, 931, 715, 
       1134, 932, 716, 1135, 933, 717}], 
      Line3DBox[{719, 1014, 1221, 718, 1015, 1222, 720, 504, 721, 1136, 934, 
       722, 1137, 935, 723, 1138, 936, 724, 1139, 1016, 1223, 725, 1017, 1224,
        726, 1018, 1225, 727, 1140, 937, 728, 1141, 938, 729, 1142, 939, 730, 
       1143, 940, 731, 1144, 941, 732}], 
      Line3DBox[{734, 1019, 1226, 733, 1020, 1227, 735, 1021, 1228, 736, 520, 
       737, 1145, 942, 738, 1146, 943, 739, 1147, 1022, 1229, 740, 1023, 1230,
        741, 1024, 1231, 742, 1025, 1232, 743, 1148, 944, 744, 1149, 945, 745,
        1150, 946, 746, 1151, 947, 747}], 
      Line3DBox[{749, 1026, 1233, 748, 1027, 1234, 750, 1028, 1235, 751, 1029,
        1236, 752, 536, 753, 1152, 948, 754, 1153, 1030, 1237, 755, 1031, 
       1238, 756, 1032, 1239, 757, 1033, 1240, 758, 1034, 1241, 759, 1154, 
       949, 760, 1155, 950, 761, 1156, 951, 762}], 
      Line3DBox[{764, 1035, 1242, 763, 1036, 1243, 765, 1037, 1244, 766, 1038,
        1245, 767, 1039, 1246, 768, 552, 769, 1157, 1040, 1247, 770, 1041, 
       1248, 771, 1042, 1249, 772, 1043, 1250, 773, 1044, 1251, 774, 1045, 
       1252, 775, 1158, 952, 776, 1159, 953, 777}], 
      Line3DBox[{781, 1160, 954, 779, 1161, 955, 783, 1162, 956, 785, 1163, 
       957, 787, 1164, 958, 789, 1165, 959, 791, 1166, 569, 793, 1167, 960, 
       795, 1168, 961, 797, 1169, 962, 799, 1170, 963, 801, 1171, 964, 803, 
       1172, 965, 805, 1174, 967, 807}], 
      Line3DBox[{806, 966, 1173, 804, 1265, 1057, 802, 1264, 1056, 800, 1263, 
       1055, 798, 1262, 1054, 796, 1261, 1053, 794, 1260, 1052, 792, 1259, 
       568, 790, 1258, 1051, 788, 1257, 1050, 786, 1256, 1049, 784, 1255, 
       1048, 782, 1254, 1047, 778, 1253, 1046, 780}], 
      Line3DBox[{809, 1058, 1266, 808, 1175, 968, 810, 1176, 969, 811, 1177, 
       970, 812, 1178, 971, 813, 1179, 972, 814, 1180, 1059, 1267, 815, 585, 
       816, 1181, 973, 817, 1182, 974, 818, 1183, 975, 819, 1184, 976, 820, 
       1185, 977, 821, 1186, 978, 822}], 
      Line3DBox[{824, 1060, 1268, 823, 1061, 1269, 825, 1187, 979, 826, 1188, 
       980, 827, 1189, 981, 828, 1190, 982, 829, 1191, 1062, 1270, 830, 1063, 
       1271, 831, 601, 832, 1192, 983, 833, 1193, 984, 834, 1194, 985, 835, 
       1195, 986, 836, 1196, 987, 837}], 
      Line3DBox[{839, 1064, 1272, 838, 1065, 1273, 840, 1066, 1274, 841, 1197,
        988, 842, 1198, 989, 843, 1199, 990, 844, 1200, 1067, 1275, 845, 1068,
        1276, 846, 1069, 1277, 847, 617, 848, 1201, 991, 849, 1202, 992, 850, 
       1203, 993, 851, 1204, 994, 852}], 
      Line3DBox[{854, 1070, 1278, 853, 1071, 1279, 855, 1072, 1280, 856, 1073,
        1281, 857, 1205, 995, 858, 1206, 996, 859, 1207, 1074, 1282, 860, 
       1075, 1283, 861, 1076, 1284, 862, 1077, 1285, 863, 633, 864, 1208, 997,
        865, 1209, 998, 866, 1210, 999, 867}], 
      Line3DBox[{869, 1078, 1286, 868, 1079, 1287, 870, 1080, 1288, 871, 1081,
        1289, 872, 1082, 1290, 873, 1211, 1000, 874, 1212, 1083, 1291, 875, 
       1084, 1292, 876, 1085, 1293, 877, 1086, 1294, 878, 1087, 1295, 879, 
       649, 880, 1213, 1001, 881, 1214, 1002, 882}], 
      Line3DBox[{884, 1088, 1296, 883, 1089, 1297, 885, 1090, 1298, 886, 1091,
        1299, 887, 1092, 1300, 888, 1093, 1301, 889, 1215, 1094, 1302, 890, 
       1095, 1303, 891, 1096, 1304, 892, 1097, 1305, 893, 1098, 1306, 894, 
       1099, 1307, 895, 665, 896, 1216, 1003, 897}], 
      Line3DBox[{911, 1009, 685, 910, 1321, 1111, 909, 1320, 1110, 908, 1319, 
       1109, 907, 1318, 1108, 906, 1317, 1107, 905, 1316, 1106, 904, 1315, 
       1314, 1105, 903, 1313, 1104, 902, 1312, 1103, 901, 1311, 1102, 900, 
       1310, 1101, 899, 1309, 1100, 898, 1112, 1308, 1007, 1008}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1113, 252, 488, 280, 1222, 503, 295, 1227, 518, 
       310, 1234, 533, 325, 1243, 548, 340, 1254, 563, 1161, 355, 578, 1175, 
       370, 1269, 593, 385, 1273, 608, 400, 1279, 623, 415, 1287, 638, 430, 
       1297, 653, 445, 1309, 668, 460}], 
      Line3DBox[{253, 475, 1114, 254, 489, 1125, 281, 504, 296, 1228, 519, 
       311, 1235, 534, 326, 1244, 549, 341, 1255, 564, 1162, 356, 579, 1176, 
       371, 594, 1187, 386, 1274, 609, 401, 1280, 624, 416, 1288, 639, 431, 
       1298, 654, 446, 1310, 669, 461}], 
      Line3DBox[{255, 476, 1115, 256, 490, 1126, 282, 505, 1136, 297, 520, 
       312, 1236, 535, 327, 1245, 550, 342, 1256, 565, 1163, 357, 580, 1177, 
       372, 595, 1188, 387, 610, 1197, 402, 1281, 625, 417, 1289, 640, 432, 
       1299, 655, 447, 1311, 670, 462}], 
      Line3DBox[{257, 477, 1116, 258, 491, 1127, 283, 506, 1137, 298, 521, 
       1145, 313, 536, 328, 1246, 551, 343, 1257, 566, 1164, 358, 581, 1178, 
       373, 596, 1189, 388, 611, 1198, 403, 626, 1205, 418, 1290, 641, 433, 
       1300, 656, 448, 1312, 671, 463}], 
      Line3DBox[{259, 478, 1117, 260, 492, 1128, 284, 507, 1138, 299, 522, 
       1146, 314, 537, 1152, 329, 552, 344, 1258, 567, 1165, 359, 582, 1179, 
       374, 597, 1190, 389, 612, 1199, 404, 627, 1206, 419, 642, 1211, 434, 
       1301, 657, 449, 1313, 672, 464}], 
      Line3DBox[{261, 479, 1118, 263, 493, 1129, 285, 508, 1139, 300, 523, 
       1147, 315, 538, 1153, 330, 553, 1157, 345, 568, 1166, 360, 583, 1180, 
       375, 598, 1191, 390, 613, 1200, 405, 628, 1207, 420, 643, 1212, 435, 
       658, 1215, 450, 1314, 673, 465}], 
      Line3DBox[{265, 481, 1119, 266, 1220, 495, 287, 1224, 510, 302, 1230, 
       525, 317, 1238, 540, 332, 1248, 555, 347, 1260, 570, 1167, 362, 585, 
       377, 1271, 600, 392, 1276, 615, 407, 1283, 630, 422, 1292, 645, 437, 
       1303, 660, 452, 1316, 675, 467}], 
      Line3DBox[{267, 482, 1120, 268, 496, 1130, 288, 1225, 511, 303, 1231, 
       526, 318, 1239, 541, 333, 1249, 556, 348, 1261, 571, 1168, 363, 586, 
       1181, 378, 601, 393, 1277, 616, 408, 1284, 631, 423, 1293, 646, 438, 
       1304, 661, 453, 1317, 676, 468}], 
      Line3DBox[{269, 483, 1121, 270, 497, 1131, 289, 512, 1140, 304, 1232, 
       527, 319, 1240, 542, 334, 1250, 557, 349, 1262, 572, 1169, 364, 587, 
       1182, 379, 602, 1192, 394, 617, 409, 1285, 632, 424, 1294, 647, 439, 
       1305, 662, 454, 1318, 677, 469}], 
      Line3DBox[{271, 484, 1122, 272, 498, 1132, 290, 513, 1141, 305, 528, 
       1148, 320, 1241, 543, 335, 1251, 558, 350, 1263, 573, 1170, 365, 588, 
       1183, 380, 603, 1193, 395, 618, 1201, 410, 633, 425, 1295, 648, 440, 
       1306, 663, 455, 1319, 678, 470}], 
      Line3DBox[{273, 485, 1123, 274, 499, 1133, 291, 514, 1142, 306, 529, 
       1149, 321, 544, 1154, 336, 1252, 559, 351, 1264, 574, 1171, 366, 589, 
       1184, 381, 604, 1194, 396, 619, 1202, 411, 634, 1208, 426, 649, 441, 
       1307, 664, 456, 1320, 679, 471}], 
      Line3DBox[{275, 486, 1124, 276, 500, 1134, 292, 515, 1143, 307, 530, 
       1150, 322, 545, 1155, 337, 560, 1158, 352, 1265, 575, 1172, 367, 590, 
       1185, 382, 605, 1195, 397, 620, 1203, 412, 635, 1209, 427, 650, 1213, 
       442, 665, 457, 1321, 680, 472}], 
      Line3DBox[{277, 682, 1322, 683, 278, 501, 1135, 293, 516, 1144, 308, 
       531, 1151, 323, 546, 1156, 338, 561, 1159, 353, 576, 1173, 1174, 368, 
       591, 1186, 383, 606, 1196, 398, 621, 1204, 413, 636, 1210, 428, 651, 
       1214, 443, 666, 1216, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1308, 444, 652, 1296, 429, 637, 1286, 414, 
       622, 1278, 399, 607, 1272, 384, 592, 1268, 369, 577, 1266, 354, 1160, 
       562, 1253, 339, 547, 1242, 324, 532, 1233, 309, 517, 1226, 294, 502, 
       1221, 279, 487, 1218, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1315, 451, 659, 1302, 436, 644, 1291, 421, 629, 
       1282, 406, 614, 1275, 391, 599, 1270, 376, 584, 1267, 361, 569, 1259, 
       346, 554, 1247, 331, 539, 1237, 316, 524, 1229, 301, 509, 1223, 286, 
       494, 1219, 264, 480, 1217, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJx0vHk0Vu/3/180mCpDoWhCKhQqTdRuQNIgoUEpJKVQkSFDRObpvm/3bJ4y
R+Ypu2ROSlGGIpWU6dZAUvQ7p9Vn/d7rtdb3L2s91lnXvffz7GvYz3OOlZZX
jp7nmzFjhtLsGTP4ib+rfwhf0PpyEUzWVi/gu/EMHy9x3Dk+OAICGzruihXa
QKBhoPp+o2f4edCROjY6Ai93Tx/gBF+CAjED2rc1z3BdgESWz/gIlFjPPDzt
eBmOlS5WO/TtKZ6RddiQ/HsEzIzntVQ52oKH1ULJqaCnGG9sV2fOz4OPKiNG
LaF20HR8xmKZRU/RUM7hS6UQD5Rl3KeoVfbw5YDOREFkM07T+75Xi/PAcRsj
/pbIVai033oTZzWj08UTSa4yPGjJjUi3a7wKF9BqWOLCE+x9XrGkR4EHJttU
q9pjroHbzwuH7EqbsCVP89rv9Tx4lJTyUCrYAQJXPqw/P/kYR7f80H2xjQcX
rnuXK0U6gm0xbrm+5jF+mV671UqHB8mFzzT6718HE1lzjYHdjahFiVPMNuSB
bdQ9A1VRZwgUtz34TbsBpfL5jqSd4UHAwnkPt1NdQM43YD5TtR6DblSsOmDL
g4H+CkfTBm9ITQjOc2dUYdQ3k/7BNB5otaziNz1zC0SGpK0tvz5EdZOlPXV3
edCR6sBx+3UL7NX3bVI6+BB3P1SUDSrgwUvR/qvGCT4gPhBS8DrxAYb7x+5U
KePB/CyOR/gRX+iiJCwQG0asbmqoyEYeHNL7saJH8Da8TZVyvh1eiT9UoE+w
hgf+Dq+L5zffBrUFH5n6SvfRoP/QO61GIp619vN/xvjBxQUfyzIelONID7ty
z1Me5MbkIcXNH6wuTmr+MSzDuMuhl6VaeRCSN/35rVUAtNCUn5V0l+DrsZSG
onYefBaRtxA7EwgRow1mlheKcbJqQb7sGx7QP598ZHMhCFwTTcJShgqxfaJJ
QKeXB4rUCqaJTzAkRdiKHrlSgAt4hx4p9/EgR+jehUu5IfD9Mmfw5Gge7lxv
MufJJx5Euopq2H4LhYFBo1nDV+9h/eKSrauGeFAhdCBkTUwQmO6MGijLKsSJ
61JKX4jxbbrZtlt1g+Hcn8fZ3vUFqB0/67jeBx5slBQt6B8Lhhmvxgsq3+ej
wJZHDP+PPFgUFiVJyQqBK4MvEnKm87A4LV0xk/hdquSvTdRLodB/lsugL87D
0c82xoUDPLDWYSsbqoWBStXqycJN9/D3936nZCIes5wb77Wmw8DFR0fC6kgu
+n/6OuoywoPEaNO8htZwkPyTeZ/XcReFtkdoqY4SeVWHD10viAB+3i+FtEXZ
+LEi/H3DFx5s/3bl8rvDFFi6o2HqsXEmmrVlBOz7xoPDJTvWpNRTYPbFTqdD
7HRcYWzxIfU7D9Ss9u17to8KFzG4dWtvKno5LH8+MMaDpe1vjxc3UaFo5xa9
YrU72HDz8n7RH0Q9jJ0OLThOg8UbhL+LBSZjlK2MtfQED6J9ixXWfqaB8uMJ
auGnRAz3MLzE/5MHToEbXgjkRkBkf1dtk1w26k8nq1YScR6+X9Z3Q4kCeRkP
Nte8y8Sqj9WuLV95UPTtYoqzFwWqZ1dotSdnYGR3wOc2Iv5fwpucF72iwMkS
g24Lm3Rk7rC6+piIX3lhcqiDOhWcIk4PVqul4aBsMn8eEb+KSkB1ZjgVZH4s
9Lj86w5a231NCBrnwc0DJjfejlBhXpRvc11DCnbIlh09SuSlb51Xq36UBv5w
LNo4OhlZQx8URYi8Gu71p1WV0OBjmVwrwzEJ67qMthUTPIv/wrwSuUjoz3Fy
XnwkES+p78sxIvLd++r6+62USJj9qm+964YEDP0+VNJL8F1+iVn2M+mwLrdJ
5ZhMPFJ+plAtJnlwxia87bYzHTrZ+Zn1krHIn7bD+wXB01daZqTz6NCy49LD
h3Oi0VxU+tWWXzxYoGmwcb4dA8RXRTSqC3Bx4Yzhb+EEv5Z7dt34TBoslBu1
M6Wk4HGzIbozkZfkrj17thnQIPa2slfJnWQUGNXtmU3EP/r79LIrsTSQp++y
HcIkzFPX0Q4leGB8f3MajwbWedGxW14n4lcKf5sgEX/C91zBiT2R8HjXHMue
XwmYrul65ybB1R4ePn+FHQklv1v7VZYn4K6ZaS0DBK8v27NNbjQSPqwbuG+n
G4/T4gmOh4m89LxWvVTQp8NGJ05X//tYtLnGyk4nuH9at0noHTq8rj/DUtGO
wfw3vOTfBN+knfPNfjYDzoRXV1ncjcKgMTnffUS+Ml+9s95bM6BL/PUSfXku
Cga/cgomOEWsuZvvMQPWWw3LFCSxscuDebeG4OrqfVV96kyobU51cVNjYQNW
W/4k+JxFDXypUUzQFZT4cbuRgTMOaz9e9ZtYr9ZpWVsKsGCAl2/e4EBHSuga
hQME753of5oZEwmcE8sWFYon4NnfrXdHiXwVRX692tEXCUXuT80iLOLx89eD
B/YQ8Qs7rmScWE/c3ynRWDfrODR47KkXTvDL7z6vn3uDDnPG1SW7FsSi16rr
Za0E39xwwc6khg7CTCmZRIxG7aPTRYuIOKfMT9wzkGDATOf6RZudo1Dldp2J
IcHvuGsl850jdLjqcoRvExeH2EdyAwj+dNb+q+4FDKgrSgtz+cnG5qjG3hKC
pyq7TtTNZULMptRU4ToWbp6zfG4fwWOYySvGTzNh6Y1Cr+0xTPQzfLVThMj3
6OSJtoUFTIi/aF7j58FAmd6htPUEt3j2wX3jPBakB7f6OZ2nY+7OXOuDBN/B
1h+wuMgCUapqPvtEJL7RY3LPE3xp87Li3BoWvHYeUvY7RkOfqBkX3Qh+LfPy
SvVVbNghbTi//SwVTTX/fA0m+Cxb6e3YSQeH7SWXaFbR+GYFl6pIxGkTNiI+
IsuAToHvb04bRGHu8mrREwTXEWw2PGHOAE8Pf95J4OJA7bKnfgTn1JhtnpPC
AKnqwPQnmzjIFpV7k0NwPanm+j8DDGja/v3etCobHUZ2HHxJ6uwewzm0gQmu
v5c2blZnYdn3mPVkncztrLg24UbUiRrLuWorE9+s3MOSJuJ0rfTeIFjDBIVN
5bVfdBmYe62ds4ngxynRJkGiLMjOpHtInaajY/MD/UME/6i9yM7HjAVMOTPb
YNdILCvrqLQk89Xb6zidyYKrBvb05Gga3nrvL+xE8OyLRXlzf7Pge2PP0KN6
Ks6d9NS9TfALsmu60w6x4c5qs9X6UxT8LnPPj0LwH8Hnnw3Fs4ES3nUsZjsF
L7rK93AILumzfFbPGBtijXrWG/BF4PBEycV4gqdq/Cla9JIBIxMMBwNPNtqu
P6/0mMi3T3zXXGsJIq9fBUL1sSykanW4DxD8fZjllxJDJlyTqFH+WM1Edg+/
ylxiHA/aV7WFVCYs4WdmvOYxMI7utG8lwe0mCu55tjBBKGqu2NvlDCwTXNW1
leByYskBv8RZsD2+t0bRhI6uG859J/W5Pt0/h27CgvPC+SKfIyJx2d6n8eYE
V2C2lB/isEBiU84qi2c01HDcP3KV4FeFevhUu1lwz82777EkDdsS+wZuElx1
VtzbnQpssGs1YFw4R8U5B3qTybpqds8xvH2ZDVc+39zuVETBsL7bSnSCS2dk
cOcUsMHldJziVlEKfhRbFBxF8DidVQJPptjg61K2fqg3HIXyaltI3S6qedn3
6HFAZqxOduReGP75GrkgmeBLtLoSdBgckDS8YClCDcU8TTnDFILvsdwiJJzI
hMebBDWpJQxsq79VvJrgh/L2is/tYsKTx+udV/AxcEDJZJ4WwVfPH3TuXMgC
XYFDr54Y0PGE0lWXwwR33MDIDjJgwaoAWRYmROJqV60/Zwh+xejBN+kQFryo
W/t96QQNH/ptu2tHzrveyfHQOhaUj00OiBnRUJUqEk7Ou8GJwU0Ds9gQkft2
XW0eFRUirqX5Ebzr65Yojb1skNw3HmotRUWH+ypzIwi+LIv1x9GHDeP0JctW
3KKgajixKhB8tmCpQUYVGwqeUG7sfRuB1y6PlEQTfNRuV/obfg7c59Nv3dwQ
jrLi15cnEPzF3MyTEroccFuZuvbm/TB837HuSxJ5f1UNRo4EcSAuZ95zr/uh
2KXisoXUbajKIjnqCQcCH9Sp3WkIwaNbrv8idT7lW2D+U5wL9Z8njc68C0an
qPc65Dhnk9b41+uzILA2oOxpTiRu2Feab0bwG8pim3heLJgd7lDLkorEC8ML
5l0m+LxFbuubClkgaCC+dJYvDZN3ML46E5xmX+luOcSCX2Umczd+pWIZaF++
Rea7c7NboTwb3mjXXN97noqR25fdJOsqasmG+vpTbPBb4aBp8prQx2LFBhrB
s1gSrXF0NhwcmJQKOk7By6VG4Wyyrmo3iexsZoNia68Q390I/BaRz4khx6e0
WqcKcKCZ9qyzsjAc1UcUT5G66aQpJfbs5UCFaNlySm0YLuV6d5D5Ckaa2Q54
ceBN+0V/fBuKlGhXGVK3HKXzLx5XcGCnmdNW9qxQTF7CWk1yzWThvoBJDmyE
JbIXN4Rg8ALlWaSemjP6KuW2cUGqbrux16Vg5B3RLiZ/V/DjHma8KxeqSk6L
qmUHoVVymm4swe1jG3XT2on16lTGyBxFGs49FtToSd6vE4U/bITYcGNb61q5
FCoWSZ728Sf41qIwgzotNqxtclziuprQ0/CedDjBY6cXaDy6QqxXtSdOrMim
4NH2Aho5H0/HzFxtnsQG056dzzdupmDTzrAxch2rTlGtiH/FhqfCI8Isvwi8
P3j5bzzVYkcfBYhwoJJ5+wjfnXDM5F0OJuNv8xFRlt7DASfLGJvuJ2G47wyl
ltQt9tzsRGNXDqib3MqymApFD5+2P6QObq33l+3KIerzlU7To02hqNQtqknq
NiYZlfrmIwdafz1v2HE9BGePjnuQ1z960qmvtpwLXM9HSUIVwWg9d15jIsF5
ZbHT209wQdfAz9laJBhP6BcqkutGjPlD0Zk0LqhKrx8KPx+EZhJCLHK+jMkP
x/o1ccHjiGvFo7pA9HIdXEbWSdov4zCGIRuGdBYfER+joJXu+zfkOr93oe+D
o95s8AjxfRTiT8GSrPM25Hx0Oq/wgpnDhuqpdd0fllDw25tH88h17NmAftO5
HjbU/X5w28IqAu26BptJ3Wr6Z2SWL+DAliJt3zmccOTWVeaSuqXW7LoTv4sD
yxOCOt6+CEP/GwuKSd1o934NLXTggH92YfHiRWHYlp/YR+qwbUiauSSZA/V+
NqFdp0PxUqLKLlK3NQ+PSxe85IBKYgndMDMEmVWajeT1nSnuPu8FubB3y5aD
aTNCcH/6sQBy/Jx0sXOZO7igweivEDELxizf525kPDuPsgTmO3BByVpLNftB
EPLRBlPJ+IvETnTMS+VCx+7R0lLlIFQvSBUj873IdjmQ/ZoLFdSNXy1jA1G7
+X0ZqQ/d6+33EfEoGJCPcO+UDsRTP/fcoRL8nofotu5SNvxxWqe+dBYFhxdn
D5PjqLrk3xroY8Mq/g6vaL0InPVJZ0ccef4pOWlkK86BX0xdl5Xh4Vj34/oz
Mk5N7zUp54EDnp+3OH9qD0Olo2syyLykVfSXtdsSekooCoqvDUPdxfufkDrM
SRjVqeFyYG0Pt7zyZijeF67RInX7nrNcXrWBqMOJL68WdIbglUjzv+uefvgH
LakJDrzwt9y3RjMEL13sEia52XUlmtdqLijzrzmqlBiMz+y7rpJ12B5W/9nm
OBcUlm022L4gGG9Lf1Ih63Dc0J+vPYCY76qOrR4+QehR7LyHXH9M3/2YfFxC
8ETOuOTvQDyc8iSfnHfjYgnp+wa4EPJ788/1HoH4ymuJL4Nchyktsodko+A2
JIwM8gUi3+MTeWR9bjCvEu8+HAXLnk+sdqYE4Azd83tDSH0euE0WLeRA9LHo
ya7b4ThTbvEgqRsX78af3MmBh5ULbqx/E4bnbm6NI3Xb1S8pYnWRqKtjT92W
bg/DY8e6ish8gz8t8HhFI/Zfj4WcqqhQ3H3PZBOpm8WDjuOF9wneLd+0lY9Y
D71eLya5jEe25J9PHCg9ETrItQsh7kusDTlO9ljR6qKFXEh9zh87qzsY1zwq
WUX+7gk7mYGuXVyQM/FooBoFo8Q0HCHjnNDu+XDNjgvdXj8tzzYHYcRpxUGy
Dr88HWfe4HLhpGtWd/DhIDRKPTBB1s/Lrr0B3+u40PVuGtVbA3FZtccNcl5b
8ftpfxjjwsNnZz87nA3EtTTzq+S655xyQUdfIQq+qF71sBsNwAaT4G5y//Xt
PXtijVEUWH58s393QADuTTlZQ+47mzw7v3n5RIH1isBb8xUCsEt3hSK5jzuY
VJaFW3Eg3jHpd6teGEbNP5z4d50/vTBxdigH1mmf1HpXEIob50+sIfVp/D43
oD2fA+1LwhylVoViq2CJMskNLL9QBF5zYOm9o2tCOCGYu0c3ixxHpGp9D3MW
FxSnDqsZiYegQaRFFqlb/5kFnNvrCD1rvWb4RwRjyoySdWQdtgw+mXp+jAui
Mluzt4sFo9eed+pkHWrqJqv4enNhWeYO00BWEBbJO5WRdfhWI/U2M4MLzgPc
SX+5ILQ78K6eS9aV/CeF+W1cmL8//4hBXiBesaKeYRG8OMXSePAPsa7OOV35
UzcQ66JeeUQSfOWyP7tVlaNg67Wi23FvA/Dcvm8KpJ5JHHfjrmNRcOnsGrqp
VwBqJfw6TupZ0xf0fJTQ8/IR3yZt+QCsEZuUJPV8GpEldy0nCvh+1Jy+0eSP
3zY3WnqR+87ry06na5yBQTdao89uwB0L9/2wNSXW7VkC1vNMnKErbZK/l9eA
O49lbxkx4UHpm4Z5dbP9YFaBj1VFVgVqiyTZ8jcR58DxK+4eiX6wbave08zY
clRZVdNf8pRYD3NuVEsf5YAJy+Vcd0QYlg1e0CD1V5y0XvxuBweEHA73LuoJ
w7rgU1xS/5WepfZlRPyXNFSO3yHiL5uzd9nfehC5Ei7PiYK6oRKNTT/8UeDF
1gM+BPdetsxF1NAG8jq+v8+3fobz3mewrUZGQNfBwfBkozNYeg3bONyvR1pS
c+r580R/15/2eiexb4Yumsk9Ph2K6QytcTKewlKhZaXE+FHuYYKzxv2RlhC1
lRzfOFU927HtKtj5+CX4ODbjwerzD8sXEv3CxrGTxgne4FOrUSLNqELZjLbO
0TQe5AkpvnI7xQHnvRc+RV8OQ3q2/1Vy/KbpgGlbYnwnJZenscT4GncX7SHH
1zik0tuWeRWitDZvy+E2Y9prWUtjcR78rKbJr1RxAUUxgY9GLvW4SkT09ouL
PDgQv/vHOXsOaDlW0Jzkw7Bnqf0zcnzjTq2+quQoUDlZ7Vzy1h/P0O81ehP8
ts30nuQVNiDE7vk4deUZnox6r7B2eATiHIwCnPu9QUJ/c3nlvipMVr32uTKT
6BPb4ii3DTkw9fVEogItDA06pdXJ8Z10vUX3EeMv1g6oy+z1x4OvqZ3k+K7d
j5LKD9yCQ+yNG+vmVGG9nPPuBXd5sLD4buhWk0sgWLo5N2jjM1yjav5wxdgI
2Ck2m2i03oI/o+ckyp0eoiwODy3NJ+6LgqCem+xlMNZ/G24l/Axf3A2vPDk5
Aivuv+convOBmj0ph8zePcC5lK1Fi0p4ULswdNH7b5fh/imckVb5FF9vttw/
ewYPZKdiO8YmfOCe9WvLooMPcOGIlPH3CqJ/WSG1V/mNLcQrvuIqn3mKW2i5
hqvnEPvykUNLxZi+0LBo59kkG8Qztm8vFj/kwXopdqB2px280nxTXP29GX9u
b4p6JMIDr7WLqke23wb3suFId41KjOnddft0LXEetnlmaTlsD2VLZW6232rG
3StOZ7yRIPrBf34+/vPznf/5+YwZ343nf7oNMg4XXyyeqkCBrNBVvY3EevLP
l7b5jy9d/eV53L28q0DZt238sdsT/JnZObdQngccl9ZjM876g1ZM7r1XXmVo
1W/s4v2CWN98hlfPtLkGl63atr7+0IQGbqYNbipEvyCW52uoFACLLK/diNAs
xc4qNyPGKx5ES4+v9FN3gIozNWdE9zRhQ3aT/mMNHgj5xZ1ImREICi13Pq/5
XowmxWqJN7t4kCBn/jN1viMMpV2vcKY+xvm97vV3gAeZK0U9qt8FwqtPlruF
MorQ9hWzZFsP0XdHxptv478OrROt8sLPG/F07uBsEX0eXFMP4w9qCYI9yl5y
mWaF2PC19OejdzyYVb1Z/5a4E8j82WdbxNeIr041D/ww5sFrjdfeb58EQ3C8
0RPmggJctaC5Z8lHoi+b2AYVO51BYcXHF4vkG7Ao/cXCU+Y8SG/vWdzcHgL1
qjNS7B/koeOlljlan4k+N9qELaUeDFrm13sF+gow/XhOx/R7YpxOl8GphmDI
2B9cNipbgBZW1Q4/+3hgu2pluMTFEHgTf3MFyzgfT7cGu73t54Gl8HevSOFQ
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
YeK8xVasW/srUWfplH6x/UrUWZST3fU47mierq8tUeag2KwuhXNrgyC+5qnD
hE6OEOVH4nkO2iLO2tKqRAU/96snsR9WSSssiM3kIPmrOzanq1BA6kzWC2yv
MthlnfOLg1T60snmm4j8VrUucSLfC/tzyJvYh5qdv89xSSHQteHtO1yPD5pL
WKQQ9fgP0wIZ2wE6DPSZp2MeXbSIJPn2SjZS/d3fZ0isb2+11Qy8vt/8Fj4+
cpyNrL5dL3V4TdSP8fFfJvSyfg5Vc805yPBS8pSYaCqchraACX7ImuY7tCAO
KtgjblycTYHfVl5cPM+v7zkSDlUc1Hpm2y/VBjLo1TTZTfT1mMXT1eZw0ck5
pCL0JxCeTYPv2A/7mtay3ptyEeOgxWtTrUD4XluwBe+TAtEliSU2bGTvFDyU
+Y4GdQ+Kw/B85F/mz1cKYyOvGpWPeUdpsDtmDQfHa+8wtyS952x0bQp51rSq
YIhhuF3GeZH5+orjLp84iPUkuaKaRAaV5LQJHbwbv/KC+5Zwke/XdbauzwKh
cvfuA3g+JZo3mtYSeayUlTPr2LxAiBKj3sF510jS3Ud6DCJP+26+/bkdCRQe
zB7A+9Pr17aqKT/YaJx9tFhRLhj2BGkfxtfz/M6taVbkoPUxq+sOmhL1tZaH
CB5/0d5lW2VtuWhnq4v1x34SUDeNrsDXD9sfM7vC5SInF+l3dpYkmDc9cqKP
L3ehwMprtVxUIu3RoAUBYGjVvhM/75s78nteE/VR/1WJIk1JKpwrNJzQqSth
zU0TrOMihfLFieceBUBzZIIZvn7hl/1pnkLhaK/Yok3KGwIgRyA9EONXto+r
2prWhaMpzQ1RWi/8Ia1eqA3Xyz3plm/ufriBgn/NTcs48ASK9v8pucPiIS3+
9+KUSd+L36ykdG2UI6M+G49v8uOZAHdWtRoQcdapu/zqXMIPqU0NMRGGQfDK
zIGM/SBIViifKstB345uun72SBDsnKluje2zt4aEBPmEo85VfS4Dy/zBfHSV
Ij4/T5aHUd+0+yK3il5xwyGAxiJanw/w0J0WrY9Xvvij6oE5Xd6f8kC8rzE1
5g0PXTEa5ghaUpCQeKv3w5YMGJVcJ9/7maj3yxWZZRpUtDaTnWLX9ABGYFWh
bjcPZX6/9/F9DRUtrHFeIPXmPvj5jRUfI/IBm83xdlevByEzFiV5oex9sFjr
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
a/jfbfMnfbf9f/zEQzM=
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(m\\), \\(d\\)]\\)\"", TraditionalForm], 
    FormBox["\"A1\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{744.6309667958269, 345.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {0, 0.1}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewCenter->{{0.5, 0.5, 0.5}, {0.48191251113903544`, 0.496894617876281}},
  ViewPoint->{2.8175001115415905`, -1.704626823410782, 0.7784218100565375},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.659108820230719*^9, 3.659108860124983*^9, {3.659108907720393*^9, 
   3.659108915739337*^9}, {3.659110244611554*^9, 3.659110250708509*^9}, {
   3.659110381323151*^9, 3.659110407282229*^9}, {3.659110502400106*^9, 
   3.659110625889975*^9}, {3.659110704617608*^9, 3.6591107301101923`*^9}, 
   3.659110883289213*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Equil", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}], "/.", "StabParms"}], 
     ",", 
     RowBox[{
      RowBox[{"Equil", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2", ",", "2"}], "]"}], "]"}], "/.", 
      "StabParms"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["m", "a"], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["m", "d"], ",", "0", ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Active Mortality Rate\>\"", ",", " ", 
      "\"\<Dormant Mortality Rate\>\"", ",", "\"\<A* or P*\>\""}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<A*\>\"", ",", "\"\<D*\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6591092081691513`*^9, 3.6591093922896957`*^9}, {
  3.659109437809731*^9, 3.659109472847843*^9}, {3.659109583098089*^9, 
  3.6591096559758244`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1:eJzMvXk4VV8b8C+VSqlEySyEzPNYrWMsmicaEEkzSSFN0qiBJKU0l1BRkrFB
SHXQYDjqxJGZ03EcSqXZW86+13q/u8d1/d7/ft/rua51PR+rfe792Wvvs9e9
97rPhBUb5/uKioiIDBguIjLwT3t58c3sCN3NU6GNMy3t6CxSYqzTn3pmonM6
Ah4U8POj/h4lRgr3ba+6cyHmcSGFG47aKDHU70mbZPuVYp4tH6V4u0uR8fKJ
5l115wrMDzK8HhtfVmQc1n/y3K/mNeZHs1JcE2cqMpziVrRm+dVgvm7Yma5D
HxUYA0T+/leP+ZyVO+xnxigwlme8PKru3Ih5VP6Jw9N0FBgP15yXdY5pxjzy
Qc+Lhw/kGfKKGxL9alox37LcZRbLUZ4RWm5tEqP+HvPKRTZVkU/kGG/2D8vP
8mvHvFVjedpjazmGmTV7Zk1WB+ZVjxKZCgmyjOOCxLe9vZ2Yi227vkZURJaB
94fyKi7TcUhylyH2DO33BT8WhRgYYs/Ax8StWCXxwAB7Bt5ZLaVuIGWAPQNf
b3L6yS8ffewZeHzuttMKt/SwZ+C2S4/e1fygiz0D3/H2Frqrq4s9A3fwWH7D
xUsHewZuc4mZt/GINvYMfHHDmctnUidhz8B/XrS6afJUC3sGPtRRXf4cSxN7
Bh532u2CKlsDewauNujIZbGyidgz+GvNNZcaEmuKPQPfxf4h2Ctrij1D2+m/
t6j0rAn2DPxRu+L7h3Im2DPwyMDdXRanjLFn4PFz1KPGjjTGnoGHJSpsMdxj
hD0DV0tWNfD6aIg9A7/tebw31NMQewa+pnGg5+WjBtgzcM/fy4vWLNDHnvHn
+h940TxaD3vG+/VE6dv1Ih3sGXic1nkTJ39t7Bl4iM+JBQyJSdgzeIrc+sxx
aJc59gx8ybXFSzlu5tgz8LGL1u2LfmCGPUO7+ox53XAlM+wZuPPjx9tMd5hi
z8CZsx/O6nxtgj0DLxq1UkNF3wR7Bt7za2/89XBj7Bm4zGb3LxvKjbBn4N9+
+Gq7KBphz8C//n6XrexriD0D570eYXlyngH2DPxgQcXmmWV62DPwI5tn7h/v
pIs9A5/mPMzyero29gw+Nt/YHeQaaok9A++qNXqt+9wCewa+J8J+9TgFC+wZ
uEeQgZjIWnPsGVrDVlluVboZ9gz818YDMXu/mWLPwNN5Nyq7J5tiz8BHrll6
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
+GdVjXG0fF0XMpL5dadkgTQtX9eFIubO/jkhdgwtX9eFfryTcFvUNpqWr+tC
9nrWiWpnR9LydV0ofVOJqnjUcFq+7k8884wO30saSsvXdSGzgb/Xx3AH0/J1
XejBsdP7u+bCuO3CvPqL2DPTBhHKwxUELeQVwTydCzUIELSf279MbU0XxRy2
r19n+XrUn+MI/x6299/td+HtNPiPlysIGkD1j0HQ/jfv2omgXVKsH8gtGkCL
MwbRtw/9T/rfu2ClTbZPjwf6wb8THzaR7RU6gOL3//ED/x/+fvbTA83g6fZ4
fPbXH/4+29PQa1KHE7X9m/3s700E7X/5/X7yzFn9bOc+jtOirWe9qJ4dLX91
H807u/i4xj07/LmwvX21BvNUEh1oHtLRYffcyTE3HfHnQnvwW1vKqlEO+LhI
GAyzK+elIXpeXf3wF3ZkI32/StFHl6VnjrkkI3pe/c0lk1MZOxMQPa+++2se
U3vLJUTPq3/Ztb+ud/ppRM+rs7U8dzwZEYXoeXVDGZPJaaO3YB7mf/PXQY+m
fzwvDUtnPtqdiqAF3qYXki229BG6McbdpWjCDcy/LmBdGJLORPEPdY2PXr2O
eVTprY6Y3WVILPxR7/1ZiZhnPrNVn3uFhRRknxxzLybj542B4L7PQzYao6o7
z0v5Aub3rs/7WVzGQUP10Uhjo1OYLznBK7zqV4/2vU6417XmCOZ7b6/npvj9
mUeFOkrqOARi/sV1iZmLdShSO9YtCMskx0srZ7leUkAW+jrBV2Bvn0I7Luno
wPDhdeE+qf+Mc21rxdN3Em5jzvyqmyCWm4wEW26NWa1665/xOWbDdJFfo2/+
c/2hj5/+4vx//dz+jmN/+9Wfh/7i72889Df++xsn/Z0X/Y2f/s6X/sZVf+dR
f+Otv/Orv3HY33nX3/j8fz0f+xvPwl5p+Lnq5Y0/LrlYGVI8Hz/fTMovljSb
pYQ59N+qUPzoSTM8Z2Hi/kML5isVjlDCHK8TkuHs3TMf+pfh/mGfJLu7mIqY
Q3/RpBPbTt3XpzgL98+vSVPYFa6IOX4veOPEJcXK0J+N+2s9ujxV2VwRc7ye
K8VtRd0uPYpzcP8Hzo9s9rRCfvjf9XHQH7Yjcz1F4wxbF/enr/MScrKebm0x
W0XLUgFz6F980f3+m1AdipN1dtYKc2y82PKYQ/9vB42CE/O1KU7W3/UwLlav
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
i6HivxOyrbpxF/gk7xuvLnpw/ulgkm/0p+KXPXJ64CJt8Mmn/LehbM0tHm+W
kXyjCxX/XUu2C+cyPd/YjpbcWuJceoHkwYT+eeheRZrT4lySB1Pti5+HLpyc
Zx52E8ZhGeWfh2aLZNae55I6dUL/79Fvzf3WKdok3yj0/x59znA6NDuQ5BuF
/t8jJe/Mm3r5JN84ncrjxdPyjdOp+PMv3mia1ELyYFlU/IvPW3mkBJE8mDoV
/2tb99JNEiTfGEPFf89zrcfypeCTvG+8bXfeMtub4JNP+X+PamOVtgwbRfKN
HCr+RSuOrLU7SM83dqCG4/bmcmtIHkzovwPNd1rw1UsRfDJRRl/8fHT3g1l2
mz+pEyj0z0dv6yfz5z+B85pF+eej7N5DwYYTSL5R6L8dtT5O5UruJflGof92
NC404dLRdrh+wvPNf/ON1VT8YjFZV0fuInmw6VT8600mrhqpDj7hOTIfReg2
qsldBZ9cyv+feZ7fi2MLR0L+Fp7X89HrD8E3pI6AT/K+ccSsn+eT5Ei+0Z+K
f8HJk+5r80jeRnhf0YnCN3ec/pRO8mB92K8THRh/7qX4OPDJpOLvRImCxxVd
O8FnGa4/bBMksk61neTBhNefP/c7pY1uSp4k3yi8/gvQV6mfAavegE94vtmB
GtU8UsPcSL5xQz/5xo1U/HnfzndPdyJ5MA4Vv0u2weGBvSQP5kLFP7orXix1
N/jkUtdVAfI7etb0+hiSb5xIxb+tTJspmwU++egEFb9r+fDtmhtIvhHaCzkK
3vGGgzBfT8VZrNHV7TdpIK1/Fzp1NX9JzgDgkE+jv8+WT41ben1mmG/S606n
Uf33/MOFfs7+w7OoPBv9c/uLJ4vK8zSJmuzKOGePt1ND5Yuu3vkQfK/WDnN1
Kv/TcOLwt+9bHTF3pvJI6yY7bFJLg+2Q3+N7/LtscK0A8odMKj9Gj7OMys/Q
PbBQ6//cXza6/D99ctDT/+mtnrpvvzSZ7sH60qzgPUtuIPp7iatHcgsd14Yi
+vuZyfFVvwUN1/+JX8lCrN73On2/WEi+VUJBF139J/6aqq6zhywu/hP/cu93
e203xP0TfwWtfiz4X/4zjbE+OPX/I+9vf///tl//+of3gGH/HJu9S4xtyO+N
At+949KsQdMM8O84A5/v6nfUPlkP/44z8EHXfztUjtLDv+MMvFZ0y8LoTbr4
d5yBD1hnGKX6Qgf/jjNwm3GPDmqr6uDfcQa+RlyijBGgjX/HGXjz/vPin7Mm
4d9xBm7JyH3//LMW/h1n4J4OQQPsdbXw74ECd93ds/7JEk38O7PA09uDzTJ2
atC85aOQQdvjRJRNaN7y0QG57TsPRZnQvOUjfQ/5eUtTjGne8tHW18EaW8yN
ad7y0aJTq/ZMemhE85aPEraZn1zAMKJ5y0dj187WLH5kSPOWjzyqFq72tDGk
ectHt8tCVxX7GtC85aOR7TbZC2fq07zlI3kTk4JPk/RoHpjomu8xue27zWge
mEgxT+reQQlzmgcmuuCvlujUZUrzwEQiP8sjX7qb0jwwUXGs6N3PT0xoHpjo
e7jeifM6JjQPTLRwuKhxYqQxzQMTzbzRPEDQbkTzwESB5y6UzHMyonlgokNK
0lEp5wxpHphob/vVqlu1BrTxw0Rb1m7/Oj9UnzZ+mKgg0j2gc7ge/r1g4G2z
3U5MOqmDfw8XeImjXPllaW2a5zIUMnLM0UFjLGiey5A/M3/u7QwLmucy9Ep9
/roFG8xpnstQbHF12/7HZjTPf+7Hx9hq7pcxo3kuQ47zzq2yWmNK81yGmi5p
fjqUaULz/CfOacaqHr3GNM9lqGfcfOvTjsY0z2XIvrV4o3KEEc1zGTouPra8
6qkhzXMZerThoOX5AYY0z2Wo7lV9SEqAPs1zGfo0fql5fpUuzXMZ6p05aZmR
sQ7NMwsl8e40ielb0jyz0KaLwZmDGixpnlko2J6nYbTVguaZhYzz7ds2PTKn
eWahUuW0b1kDzWmeWSjyZdWZDgczmmcWesxI9hHda0rzzELTulNmNjw0oXlm
IcNR3HNBn+meWejAwvVt1ycZ0zyzUNixcNE1S41onlnozuaA3tMH6Z5ZSDY6
1t5lhQHNMwulXI9OaUvVo3lmobYBs+a/+UD3zEZWKHLx8gFWNM9stDd3ceDo
AiuaZzba+uXXLLE/V/X/emYjI4lr4j2hFjTPbBSXM6RONZ3umY1aH+5N29ZG
98xGZ35s/iyQNaN5ZqOgmkl3Njqb0jyzkXhw7kZ+kAnNMxu9HnnKduFFumc2
GrfhZ9bJJ3TPbGS/WqvmApfumY3uvZ9v4DHUkOb5j4f7PJftzvo0z2y08e0F
syXbdWmeOWhUao10boIVjdejr87lJx9oWNP8c9AKsXnrIv3pvB5tLxh0tuqr
Ne24cJDnyS1m69j086Ie/SzlRM+fb0U7XhwUtMV/0Mlh9ONYj7q2XLkdud2S
dhw5aOXeJn89S/rxrUebMhfU+lyxoB1fDmo6sFhacyX9uNcjUV+H0pKn5rTj
zkGIM90hKJI+HuqR3BTnzmwufTxwkPj++B/iGfTzkdT3+O844SAjxW8N1W/o
52k90r1gtfObuilt/HDQjDPjpr35Sj9/69F5mZozFsiENq44yPZsmfLHcfTx
Vo/M+HNnv3I1po03DpJVsBqoaEwfh/XIbuDW5xnrjWjjkINExodrOrvQx2c9
ei+W2Fuzkz4+OSg17eDDl3n063A9kjY1GLtJzoA2bjmo4tkKzbJG+vW5HvnG
xh3ebkK/32hETcwKn7ZI+vhsRPZtn5h3V9nQxmEj2uke3yBIp4/DRrTiYCG7
oIo+3hqRmduwDLcv9HHViMYOcb2TJG1BGyeNKMowpj7Z0Jw2HhqR5etQ1fku
9PHQiGI/emvGe9OPeyNyMv7sFxJMP76NKHlHq219BP04NiIP3ul7Jafpx6sR
JRU9yNVNpB+XRrTZubCyx5vuvxEpHu4OXRZI99yM+I8ytPc30z03ozHiHwsH
P6Z7bkZhQ6xufxtoTfPcjGRm2kq6T7CieW5G9YUjOhMmW9I8NyP1mIjHzxfR
PTejCKXtLaUb6J6b0b6Z1w/Eh9M9NyO/PZ/TDWPpnpvRUrOtcw4k0D03I6Xi
47In0umem9GuQ5+vzc6je25Gi3enLk97RvfcjHJZeiOXn6d7bkZOY255H0ik
e25FcYqNnir6NjTPrWjEBadbEZKTaZ5bEcturkLpdLrnVvRyBfPMHm+651Y0
1b7an7GV7rkVcX2rxv0+SvfcinYv0e3KuEj33IrGf6i08Uyje25Fj20vKHTn
0T23IkXH46c2lNI9tyLJ35ZRj6vonluR8s9Pz7pq6Z5b0RcZ2zZ+E91zK3I4
8LHG6xXdcysK228YsrqC7pmL5PeJvvD0o3vmoknxehrDFtE9c9GUKM6+xr10
z1y03FmZGXWa7pmLRBdlf/e4SffMRZxtSWtdHtA9c5Hc4BMus0vpnrloq43j
fR823TMXLf5oVrCvie6Zi06MG+58k0/3zEXlyjIa5d10z1x0fj5Lsusr3TMX
3b3nfnPAT7rnP3Eeftjx+xvdMxc5FCjce9JD98xDTkudbBkJdM889DHPmpdw
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
GJ3lsKuZRtgMK1tGZzm4bzE++/uONaNz3fvdSrxsP1kyOsvB5PmFf/bNNmd0
lkPtXJ/KS03MGJ3lIB20zS73ojGjsxxedljibLXUkNFZDvLuM/oYjTFgdJbD
k4nvBjUaocfoLAfrwp7+0aXajM5yiO5zytC/C56vqeT57abz+9W+0GR0VsCf
D277kvlztfhSwP3I00OHP2vH6KyASZ3Ei16a2TI6K+B9obWOVb41o7MCeklH
GtuaWjE6KyBs7j+dT541Z3RWQGppbguDoWaMzgpwz1W1PWtiwuisgCT3XW5X
PxkyOteNs81Pl/VlBozOCpBWdHEe8UGP0VkBwRcuRq9qpcvorIB9Gm5ddmxp
xeisAJNfa+Q/PPDcYiXP81Zva1nSvBmjsxKSIrtUvrW1ZXRWQmVt061/Ztsx
OivBymlPmH2d/RfqrISXlU3yL0VYMTorwebkteJeP8wZnZVwcPTLJuSyGaOz
EjpVfV9YtMGE0VkJ++KadwmPMmJ0VsIKiWiGfGYbRmclFKSbvy9eqc/orIS/
dv46OfuMLqOzEoYdv2B/90VrRmcl5Fq7t/++qQWjsxK+Znzu9nM6nlus5PlY
7z6zh/7dhNFZBcbuTjatfuNzDb5UkJo3rouPjy2jswpSlq3/PCvJitFZBdat
i/cfGmTB6KyCahPH32+s2jI6qyDTSrZ9+h8TRmcVLL43ZXvUFyNGZxUEBpBq
x19tGJ1VIJ92YP0DUwNGZxVs1BKLd/bVY3RWgduaBc6znXUYnVWw5EuU3VtZ
S0ZnFcS8Mlj0V54Wo7MK1q+Iu+v3Gs8tVtLr35q2sIlVY0ZnNeSEk/aHv+D5
UHypITk/ok9XaxtGZzW8TTyZEpVlweishmgXs0N2O9syOqth6vt/XD/U+RVC
ndWQXuZp+m2pMaOzGq780s9ZsM2Q0VkNG0+d8Eq8ZMDorIagNxv1d1boMTqr
obF40sWEIF1GZzX0GbXc8QS0ZnSum+8/B25ouLZgdFZDZovs0uSumozOatgs
O3Lu+xo8t1jJc5+cP4GmHzVIwzk9ms+wPa66qv/qHpw+NJ8hWdOvqdfV7qTh
eCDNZ5BMkXu2W9iNez/NZ7j0KtU73bsrpyfNZzizpfKdxfcQgvVHkLdfm6Z7
9RYhWMcBefdWj+OTH3YmWHcA+cWmVyKM1wYSPCfP82S7l697+hM8181/rscB
L6WpL8FzyMgDh1nPCPjpRfDcLPKbsy2SlCoPTp//yXNwe/UjqQg4TvMcDrZx
LH38JIi7Ds1zsAs3Kln7vBPB+jXIrcZWyju+CyBYbwV5fNTmhRGN/EnDOU+6
r3hiY+ywNgc9CZ7/R949JccvT+VO8Lw68pJY7bU6CW4Ez1cjHzXE4IPmrPYE
zwMjr33osNJoshNpOD5J8x+MW7s6jd/px82X5j8EmjwvT6304eZL8x8OVDbv
mzrcm2C9GORTNu86lP3Qk2CdAuTr9MwdV7m4EDxXj7zp+V3nJsc5EjwHjvzh
0gFvPre2J3huGXmtd+qCzim23PhpXsRzTfu3v5w8CdYDQq4pLlkyT+JOsH4N
8skmNXZTm3QkeJ4feVpUqJdDiB3B8+fINYpNT39zteHWOY1f5Dqu6TRrqiU3
Hpp3UXx/8FWvax0I1sdB3li9W5oc40LwHDvyeJ2907bZWxA8d418/QYDTYNc
U+76WD+nCO7oP9DdaO9I8Dw28knJF2RWC4yIFre+G3gZHOXq0oQJ7EDd89rK
2bvfDXYkewR2oAxCR/50WHLenswR2IEyeJs//9FCs3YkQWAHyiDziuanljts
SabADpTB+KOH/swztCFSgR2oe266X653uz/6G/R5MGDF2NfTKnC+9LlveiPp
MNMZxpz+NA9BT+P0pGNNDEkvgR0og9MXrjVZdV2fFAvsQBlo/Vj60DVel0QJ
7EAZxJbmq/vrtyYN9ZVoHkIoV08mXGAfZLDlxNf1H3Takb4C+yADu9Teg+L3
2JI5AvtQ9xzXY+vmqvY2BOtDIRclaeYs3mdFMgX2QQYqn31PfKpxv5Q+N8mu
Vw3rkGbI6UPzE8w6fHEfHW3A6UPzEzwd5JEnRumRXgL7IIMhBwzPlF7XJlKB
fZDBQA+PvNAfLQj2wWrgctDh6ro4CeyGHJQ5WpfW97MhfQV2Qw5NRu/69bDG
iswR2A05VL+1H/bPTAuCdZp4vr/Zc4/vZtx8ad5Cx4rXL1c46HPzpXkLry8p
x4311OXmS/MWmhdkkVXnW5FQgd2QQ8+sUYW/vJoTrB/XwBVwhquX4iSwJwq4
e3iWyqPCgvQV2BMFVIWN2CDe2pbMEdgTBfS8dTpqcldTbvw0n8G0z62fuyK1
ufHTfIbhe77qO3xqQa4I7IkCbMd4BhenaRKss9bAlfCDqyviJLAzSogcl1k0
W21K+grsjBISqj42VtzFfWCa5yAK+A4hs5oTe4GdUUJewHlCxjQjWF+sgaug
nKun4SSwPypY7T/spdZSI+76NP8hOlO17G//ptx18P1qeM3VhWi47zQvAs93
zxB8H9WwdKLf2gmdGxGsm9DARXB0mOJHkB/GE4/y19G/Fx/es2cvbj1c5t8/
dedIV7lzCONnimChqiWJmRPC/T5e46/T+nfHy+nfsU8Qvug4hf5nOnyalOyW
+7AH43+mg8i84PH2td0Z/zMdah1/z8+Cboz/mQ7dXBN9V//pwvif6fDj44rT
njkhjP+ZDuNN1o83iSOM/5kO/SqNe+lcC+bWWwbPIyp0u5TP7cnokA4DjkfH
/zzUkxvPCZ4n6A5KavetJzF0HP/OYdnB/9yv/49jf2vkRsFHUrstciHYjxl5
rr/18MgbzsSG6xOG98V11SCnk55eBPthI++yOvmHKgLzUt7w/MGNF7vKEzHP
pJznryr3LN28yo10+7dfHc5LDInmLmEz03y4vKkbPD//wvfaDCsfgv22kfeb
esJGauNJsD808ucf19iKl2G+aznPb81ep3/9mTvB/rvIdw31+bwI3Ln8SVy3
Emj94856szF+XJ7kNZ6bNx034nuWL5e/l8vzxMknQKzvS7D/N/JWLe7NShyM
+atveN4juMPOy0k4/nKeF/iffele5kE0Hx9PzJq1n/c3JhxY+4Hs8yce/+bd
ZfG8VC/eHeSYb3aH52lNhirGdsQ8w3yeP0mtDt+x0JdgP3Lk99b6hjzy8SbY
Pxu5j//1V+uicPzllLe95fLhOI7/Lc/DG2tteF+E+r/jeRBZt3O6lgfB/q/I
353Qdxjq7U56dX9U68jbkyL41PlRjTwugIT8u04u87y45V3RrnzMH8vh+esh
6xL2tsQ8w4c8b2cYayLr7sflqT7leVhRUOzkZb4E+68jN3bf3LiwHPNU6bld
vR19Rx7TR31o/Au2i72mBaM+b3ne8snrdUZTUJ93PI/0XHhv7xbUh8a/Xo3f
X1mahuuTxr+CrAzv1PevN/i3nx/aZyk89ZzYJ3RQIBn4b1/GDJ6HJfx41n4T
5vfe5vmd8zr7d9xA3fJ43qm56kGUGtcJjWeZ2Mzud9UcdXvO80fFKVcn9cI8
RnqOtU+bV+Yn9qBuNG411zbqpO01zO+lcavTmVvg/kvM733H86mbVj+O+475
vTRulXx6x4fxbVA3GrcK/Pz8qncH1I3Graq+eehW1tuZf8dP/Vvr76HakZN9
iMa/3y+0bzK4PL9gzVezTpwO1N+bvmvazUnXfAjf353jJNNi5458b2K7+eqD
Obwdk8NjB9Nop9WdyErFwDwpb8fk0KLQ8EF8UiCX70r9q5JlB+7qNcc86jc8
14vX2xZtgp9bzvPDnfSf5dh7ky7/fl/QXilAyzLCWr+07jm3+6vITN5eKWDf
gQ6266sDSUN/0FyePypPOm7fOpD7vlB/qTB/iY883Jdgf3rkO+4vbtlitA/B
furIj8YfOeU7xZscFeQfKiB24hx1ZJ3duFt7d+JN3o4pwWLvrK8LfDsT7AuL
vFfUzpdzQjsR7P+KXCMubdf5UTj+fJ53C5oU5DkL842pf/V78LFUjQS0z/R8
1rUtXvH9k3wI9n1HPsD0tvh2sjfpJsi3VEJ3bYsvw1K8yFFB/qQStIZ2P9o8
zZNocf01G7gKFofNVZxZ35lgP1rkE8YZSxP3dCLYdxb5LJ3cFW9OBBLsw4p8
r+nAv1dl4Pf3Kc/TtrSbuECE31/q7/1jFKsd8tSXNPSnp+ek3G+MT9cr9iHY
zx65b69ltbavvQn2X0euEaQJc8q8SDdB/psKZge2PllV7kmwvzXyG3YeI86U
exDsj9vA1bCsexebn687EeyPi7ynVt+RR1SBBPvIIpf/TDTLqA4gkQOiTWe/
pPuB7bs3mtNRA3V4zvPxlzqP1Wnuz+X9Uj+25PKRkvp+yg3fL3q+6YpddaHK
APWh+4HyPz52ZUaoD90PjNcN397eBPV5x/OVvaukOcaoD90PfN58YNZpQ9SH
7gfq2LzMfaaH+bc0D+20/8vQ+vzAhrxEfJ6SwBKuny/2T8XrmHL9c5MF10+H
qm691Hn5DgTr2yI35er/Y58A/Fwz0+CWh6+EcPtF1E/rn/3AOcbZl/NjqZ82
iqtjnynwP8WwMsvMyTijM8G6/MjnD6lxn1UVSLB+LnLDRn6fBoR5EKz3ivxw
4aAPCec7EqxPilzK1W8XPkdIYK390mVTVX5EKngukED2GeeA1bN8uXFSf8zu
4K9/HlR7E6zbi1zs8yzTalkHgnVmkX/TXBCV1tKFYF1U5J9VPY7dSMd8GJqv
u4Grc95QX5v6aSYW1z/Gb/Um2IcA+eXAnIsu4EWwbj7y3PlPbUbU/d41jJ/6
adG7Fy4bet2d8/+pP7Zk59vRK3s7EayHi/yB9u7rXd0wz4T6Yzc7uYrmOLYj
WG8UeZ+u5ae2+tgSrI+J/DtXP/yw4PmuCCxSH64+0cqTXBM8x9X5J92cemSX
uxOs+4+8NuxUXta6jtzzOPXHfgSd+dBrkCvBuurItScVLt/o1Z57PqJ+14bA
44HNAuw5HajfteNZzLjzY+wI1qVFvrhJ09SK3TYE66ginz6v+sigHCuCdT+R
B7cphf2rMM5L/a4iro63SPBcLIXlmr7PiizciYvgOU4KHuPmp2yzdyPY5wC5
6eK8PoMsOxCsy4/8eIRocg8HF4J15JG/uWuamBbkRLDuOXKtpNH9n0/CODj1
u1Si6LVJ5bjvSv2u1z4n17/ohPui1O+y7XIvyiHUimA9WeSKZXnmwYDxWep3
9RoSPu3kUFOC9TqR22R98WuTgHEu6ndtFtTfPty54d9S+Mbl+ewTPOeWgieX
L7Rb8PxeCjFcng/2LUC+lcvnSRA8v5fCaC5vB+vCIy/n8nOwjjlyzMPZKXhO
rxsnlz/TjsmTecrlyVxm8mFSuHwYrA+LvBWX94L1TJHv5/JbsP4m8jAuj6VS
YLdl4Nt+01pDB0eC9b6RR6R2dl4624xIBPZZDjMkzocqN9uTGIF9lsOtzZ8b
zzNCHaifefvgtoDogyYE61kjv/q+SVrZKCOSLrDDCth+rm+61KUdUQjssALM
J82XzH1oS0QCO6wAx25B7zSW2JBQgR1WgPv8i6KBusYE62Uj753ke/1ZVRuC
9Z2RhycOkfh/0ifWV/7X3iphQu9F2Ro1tmS4wN4q4fuO7HvJ52xItMDeKmGR
65zilLnW3DipP3l52vSLE5ZaEqyHjrxTjNhiyBVDEiqwt3XXV+jH1Fw3IFhv
GrmRa+hwnRd6BOsjI/+hFaIhbalLSgV2VQVu+3tman6wIfcEdlUFZvJuPQIu
WZOOAruqgqvVC6fG6ltx95f6jf6Oozw35psT7PeA/I/FgMfHDpoRB4FdVcGh
3ZaP/oltQ7D+OPK453bps8/qk1CBXVWBTu+x3v1kugTrOyPfZDzmZseJ2gTr
ESN3dvzVvJVzS+Jm/7/2Uw37BtfERP22Jn4C+6mGnIMlJ7zSrQj2WUHu+ydi
ddcYC+IqsJ9q0IqrsQyKaEuwjwXy5o8PXegfYkqw7wJy4+DHume6GJMEgf1U
w+B9tQdrVxgQB4H9VIOHuMXR4df1CNYHR94rz7Xt7Va6JFRgP9UQ7j/DW1rW
imD9ZeT3BxdmmT9rTrBeMPIeo6qOpVdinVuMa6TDvWHeJc2zaZ9Z5KpC+enM
YNpfA7nRwuX7AzOx/0gBzx8HayhGuiIv4vmTUa2HvU3CfhNSnutFvv6xvzly
Gv/dmx5VGG6MfRNo/Hf0KC19xxmYz0njv/Ga6bXbMmm/aeRRfi22dPiDeXT0
/M68kPOZe84hx/mKoJdD99TzI2mfaOS7761w86iifaKRf1grPWzOn3Mp4vnM
iD/hIyxofxzkSbekVo9Ssf8LjfMmlKzuv2Mj6kzjvOctkzSb3kM9aZy345rt
2tV3aP9fnEeGu7y0rCX29yng+YIvHXN/bsC8+iKe3+zUNm+aBnIpz9dfqRhv
HOPJXEcCyVeu9Gn2xJu5jgRGDPy12DDAm7mOBNx+btu5NYn93AKouXd6tJ++
D/P+ApgzdHVqj2l4HRoP1VQ6am79hHnUNB66qFpr4YkFrsx16vyoXSuWltV6
M+8vguUfMpe6auN18HmnFLbXrLn1h9B+VcinXdpkPmsD26+qFL4Pl20xzsO+
VBKea4kTH9Zo035VyOPivixpEU77VSEvbvXeuMc22q8KuadZTOPjebQvFXKV
dvXIMSG0/xdyy9YV2qdiUGfqJ5jHqSd9S8X7qOD5iR7pTbu8wfWppJ/b9cPC
NfrIVTzPWBpndDEE162a5wtPVfTc+YrVswwafW66o/48u1DPMhi9Z4HvdwWr
ZxnkvPkWYe1E+38hf7ROtHxfJKtnGQwxKvGecITVs04nvxvSuS9ZPcugbasL
ObcNkNP4cmTZ8/iz6axudePp93P+6jesbmWwPvXSxL91kSt5PqUgsklcEKtb
GVSlab68PJXVrQzmPfE5JLWjfY5wXGv2Oj+sP+cu1EcGFg4h7yIXsvrIwNKt
KLpbGquPDJ5v/Hpp01tWHxmUrFh5x6stcinPD1SUXQ7sj/rQ+LJ80vCuW1vR
/nHID/2z77LUj9VBBkEv52tOG8/qIAPX8OwTHWJZHWSQ4rFO2nUM6kDjy/c1
5m2oP/8unK8cDEKmLf76gZ2vHGzMHyeOtEJexPOBpa1PdB7AzlcOpzMODkhY
hfOl8eV0k9dKm+HsvOTQa/ClUWdWsPOSQ+vTMr1Nyey85LB+3PrwedtwXjS+
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
     "], {{{
        RGBColor[1, 0, 0], 
        EdgeForm[None], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
0XpxKPxjtI4cDDco2OfaDh8Kn5GzLlIeobXQmrG5gnXVIvqKCs5Lv4JnRr+z
LvD30XrxA/jb6Nzvffjr6HyvP7wkWssOgX+I1qMfwt9F685B8MLofK8v/FV0
vtcP/iJag/bWc2W6azy8NtNan8CrorXvGHhNpq/GwRsyLTQRXp1psLHw+kxf
TYA3ZxppMrw901rT4K2Z5vkU3pZpnqnwlkw7TSl1XqTzXdr1r+hcej79f0fn
6l/AK6P168fw8mitPApeEK3F+5Qm/xlZyvMXwruj8/ZZ8O/RefJseFd0Dv8Z
/E90/r8A3hudq8+Dd2Rabjr8R3SePwfeE53bf15qL2ib9gptv+jzVObWprz9
kJmsgapcRyee80PhCxOvmVOD8w7N/8nBuYnm/4Tg3ERz/krqnO537nsS/Tck
nvPTg3MNzfmZwbmD3ku14P2ueZC/I59nL589IDjv0Fp6MtrzHagcPPj+Wj91
5a8lXjPyBM/TWcq4x6P9OOXgysXPlKbm/1cM3u/KX1+Mzo2Un18YnEfonZ4f
nDtoPVQIPpe0144K9jT07o6Ar0i8v44M9j20fy8OzoO0Zo4Ozqe0l/fN/Ez5
muWCz0nt5Wei/Wv5BvIPmtPfT/5SsN+iXOfY4NxNa1vPKq/sI81x8HidOQcG
53TaR8cE525ab02CPRPt/abB3ovOn2bBnozOpcbBHov2ZsPg/Fp7uUHwvOkc
uybn39uR730jOH5Jv90b7YUtUJ4SfJ5Ldz0XHPt0Zstv6AP/zGdfC46D0lqP
BMcsaY9H4XcSa5Lng2OrtOgLwbFVWrRdcGyV5qxfYv/s4Ozcko+xK2ePQ16H
vJEng7WB9Jt8BnkFyu2Ve2q/KseUt6Cz/C+tB+njxPr2oeAYqn2hmKX8XvWQ
p4M1gPThU8Ha4D8tHRynpHMeC/bZtO/2C/ZJ5J/VC86ddebvG+yl6GzsEawB
pLX2CfaIdO49rrwr8d7vDI9JrKmGBnvpyk06BmsA6fMByscSa7x+wTFa2qF/
cOyWrnsmWGNIq38YrQ/kBbUP9v10tg8OjtfSjZ2C9Ya0Xxu4Q+IzRH5LKHI+
cnu0Py5/7NngGK33/mbwe9eZ9lawl6i87PLgXF5n7NjgmoXynTHBtRLlSj2l
yxPnZR2ytSQ9NS643qHcqkuwb6m87y74ycRn47hojSXf7wH6n0t8lr4fXHtS
jvlBcB1EOdegYJ9BOenAYA9BuWpXeFDi2Ncr2INVriq/cL7WZM6e4hK4ps73
4PqO8kFpJmkn5Yzr8/aEp2uNB/u3yvsmBtd3lGtPjNaC8iEnBdePlCfKv5wM
75GGDK4ZKV5PDq4TKZ/dmLdf/Rl9G/L2pWfA6/L2padpvwbXepS3fpStDem4
bsEesnLePtE6WJ7k8ODajXL5ydEaTt7piOAajfL6CcE1JuXX44PnRPmvfE2t
kwXykOkfmziXbxWsyaXNb4uuteiZm0fXWhR3WkTXdWbDu/LWisr7Xgn2qxXv
7oiu68wKyX8FGmk86biXgv1kxdyW0TWeOYo50TUPzf/IaJ0t71cesNbYxtT+
bg34angz36uQrNzzn7x1o3TOzdG1Fs3n3dG+/3zFseg6iub8zuh60lz4nuh6
wBdw22AfXjFavrJi62N8V57+hon1W3m4aWK9tyfv55F3tDdvTa6879Jgr086
5Mpgr0+xXj601vmnymuCawrySfoG5w46B24Jjh2qFdwfXf+Q1y3PW89wD58N
wRpYGrJ2VtNUbXOfrM6reu/LjOmWWOc8El3Tkk9eJ6uNqkb6L89cL7Ev1Cm6
liOffGdWg5Y2l48qj1S+29vZc2qPfxMdbxTrtzG+duL1sD3vGqXe6e68a2Sa
/z/yrq8pBv2Zd31NtQDpdel2vYui4LivdZILrg8q127EdX1i3+zm1PdX/Ui5
gXIE1SPS4Lqhcvzi4Bqfcu3f867N6f3+lvc61O+6P/Vnd8D1g+O4zv+Hg3M6
eR2KJYop8kg1z/KYDyi4DrsmyXKynHMa5SAPBuc7qmu0zs5Y7aOtede5tBeq
BNfElZvvH1wTlxdRP/PV5a/rHwTIN1OsrJTFJmmhysE1YnkahwTX2eV1KI9T
rFTMvDXbv1o/Nwfny/Jbzgmu08lvvCC4xieP8ZLgOqA8xsuCa4jyDw8P9m+l
bS4KrvfJnzwvW5/SOGcF1w3lf54WXCuUp3pKcO1P3umJwbU/eapnBNcl5cce
r/2Z2FO9IrguKa/yquCapnzUu4P9BHlfLbleSeyPXRtc05TneQ3XE4l90RuC
vQv5KjcG+8byqW4Kzn/le1wfXG+VN3tbsBch36l5sF8h7+uOYE9D/tg9wf6D
PKgWwZ6D/Lp7gz0K+VT3B+fv8rvuC/Yx5HfdHuyTyFvTv0PQvithnQwJjhfL
M82p+kZD1tWo4Hy8RraXVQM5sOB/pyFvSZ7AsVltS/Wmo7McQfWm4zP/XDWp
kcG+vWKH/AHpphrc5/8AP3mOGA==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtmgf8V9Mfxu/vnjrf+/2Vkl1m2avs+bfJ3is7JURW9miIEImMUikVlSKy
i7QQISkyCg3aae+h//PuOa+Xq/Pcc+753nvOZzyf5/zqNrnjotvzLMt66X9V
9O9/VbOsgf49KmTZF+Usy2OW7S78P+GWwhXC9YSPFb5L+MRSltWsyLIt9fDN
wpOKLOuv/n80X6jMsk80/lvhPzV+uPq/Vn8H4a/Vv0Z4g35vH+HD1T9G+HSN
b6jrHuHHhauqfbj6TxD+SnipxlcX3l/4JuGfNd+bwrM1X1X9XlPdu1Tt7XRv
ocb+pP4Bas/i+9Sfab6D9M/Rev5LjW2s+zvxvK45uvex+n9Te6raO2r8PsKN
hK8W/k3jV2nOrYUbCN8ivFJ4K+H6ws2FD9R6rBXeTutxp/CHev4X4d/VX1vz
Pah7z+s3L9K9eupbo+e3Vftg9bdQ32rhbYQPEr5VOGjMHsLHCd9d9pzMvZPW
fJm+7RHh1zTf9cyhsU9Gr8dbGr9RfT8JzxfeUuNP0rvdq/sLdP8M3T9T13W6
2qr/cd1frvv7C18tfJ3w78IfCf8qPEW4jt6/ffR6DhLeoP7JeoeBrJ3eIap/
nd5/L+FD1T9K/euF9xY+THi08MeF5++u8bOFBwqfI/x07t9brPFs074a30x4
gPpPF35C/b8K9xM+jfcVniz8hvCpwo8J/yzcX7ihcHvhX4QXaT79k+2j+W5Q
4031nyH8ZO797Ct8onBr4UnCszUef9hN468Vni+s/7Ldha8XnqDxvbBnBulF
fxR+Tc2/hCuEhwlfJ9xTeJ7GfyJ8jXAP4TnCC6puNsFsD83XRPgDgcnCvwnv
oOeHCk9hPuGdha/XczWEC+1fde37YM13gXAn3f9Tzw8RvkT4ReHpwu8JXyr8
kvAM4Y6ab7Dwe5pvk/C76r9Y+AX1TyvbZ/FdfGBlYZ97R313ZvbF5Xrf3dQ+
QM+P5H015nLhLhrzt/AS9VcT3k/9Nwr/patz7t84RM8P0vhz1X5G96ZgT8JX
CXcTniX8lvB5wh2Fpwq/L3yZ8MvCM/Gfwv7XVfgf4beFzxd+VvgP4W1k02OE
M/3+J8KnCtfRWh0pfIfwIL3Dd+qeIFxL61lD31qu8JrO1r0Do/encfD7fa7r
Es2tn8n+1bfVV/+1al8f/H5HCN8ofEvw+x0lfLNwi+D3axC9/02C3y/X760T
nsd8KQZuj29ljo1H6rpJ7VuD15M1ayJ8Y/BaHircVPim4P06SLixcNPg/T9M
+Abhm4P3/01dU/X+PXXvEb5d+L7cMXQbYqmuZmo3D7aPQu9XReuxs+4t1r0g
vF7tBbqWBMdh4kvv3HFjCD6h9tvsafT37a92Vc1RVruWxleovVz3flW7l8Z/
r/GdhG/T+EO0PxvJL8Q/tQ/StUHtI3XtqvaxJb9PNc11oPbrBfZEz7dR/7V6
/jj1R/VXpn5izGXq3z5z7FkrPF74OeFWGr9SeETuGHd79HM8zzfyrf/TfEG4
pHb9SmO+hW86Ru1XsGG1P9e3fKi5ugm/JTxC+KOyfeqP3DEBX2Me5sOfFmjM
4ZrjP+bStafaTch75Mdkf9vr3iTis9qfaa7emuN94bHJnt8WHi88UXjrSn8D
3/Zi8LftWWm7wr520lx91P8B+VX3hqr/DuHniQfCq4S31pjPhNfkfn/2lL3F
5sgJ26r/C7Ur0vNzq252rayu/ned8Fbq/1R4de71uEfXvWofpntVovN5bbWP
0Pjb1dc92lZGklvxd+HvhX8U3krvXlHF+XIOPpLGrM39jjy7j35vmdrr1be/
xh9d4uW0T+QI9keOulDtZerfu9Ic4ZbcOQjucKTGbFL7WF17q91Z917H9zT+
fXKxcF/hj4XfE35B+A3hocIfCH+KjwRzmIH4ajR/6ah7K9R3m67m+r09dW8t
uU+/sZS2+vfT+2xX8rMl4WFlz8G3/RA895vR6zk+9ZOD39V8d2XOzfcLPyp8
ivDWcAHNt4T11/h9K/3dfD8c6jZyTlXzuHq631jPTtT69Baepr5c45+Kztdv
q/+/su17mPDw4Pw9VriO8NW58+9eurc0eP2qqe+r6P29Mnc+nav5v2atEz+Y
IzwWW0h8B/tcFGz/lXp2nvq/UTsmftVD94YLjxIuCXcR/kT402C+9ku0bd2T
m/9MFj5U+O7cfLSr8FDhz4L5HzbIXhwfbJsvCX8sPCyYj/5MDBJumZu/7qF7
89V3tO6VozkjJrZnMJecr/cdl/ZvJ42dLfwVsSPl6zHRfO283Ov9RTSfuyA3
XxgVzQ/Pys0nvozmphflzv/EHGLGXN3bUT+8qLC/V9f8u6lvdDTfPCe3//1b
2H+qqX9X9S8snN8qhXcRHqHx04kvwrsLH19yvttKv9FA+HeNf1f9izRfZaX5
0Q74hsaPKDvnEUv3Cs6Ff2v8COGNGr+Nxs8U/lx4Q+54NEt4lPAmOLfwP8Ij
hf8T3lZ4gt5n32SbxIN9dG95cPzfXn27qj0rmHPBvabo+SHkIt2oprHfCXcV
npybb74W/XtfBvd/r/5XhH/JzXd7Rf/+F8Hf93r0fn0jXF14vMZ3Izfltv93
1D9B+Kfg930guv/V4Prkuej3+TDYf8jZ5O4/kj2QY4j9fYNzz1jN/xTxW/Ov
Fm4T7X9vqH+98LPC7wi/T1CttA/jy3DSHXjXwrlqZO543Sl6vz4IiV8KT8Wf
0373j/a/b4VrCI8rnB9+0PPryo6ZxM6zdK+Oxm7E74NtBFv5LtVzzXLXL69G
7+9ojSn07NfCOwpfm5vffROd26ibqL/2TjGIPS6iYyD2fUhwbOwZbT9jhMsa
+0Pyz5tz1zvfFs5PE3KvD/EQf/te47fU+AHR8eI74ZrCMwrHi/W580e/6Hgz
Tv1bVDrmEnvP1L3a5Jro+vXG3PXa+FRP3ZS7vmpYci21n+6dpvZizf+D2lto
jrqaa0lh+6ghXA8+UthfiH/Uq3tH8+GrguuTvaL565XB9Qccvhzso3D7PaL5
eqPgemV79W8I5kv7lcxR1+X+Rrgr/PIK/EdjWpHvo/n9FcH1T+fC/tood31F
DF2Qm/MTW2vqOoFv0/hx8PPC8XJV7vU8NPGxh4R/UP9O0Xz9Ao2fILx7NJe/
XPgn/EHPbyl8Ru56gGd4lvi5XH1baPzxap+q8d/gr7p3nPDDuefrU/h9WglP
FP6sMPfoI7xQeLfo+ubi4Hps12i+f1Hw+D8L54eVue09qv8I4RPVP5b4q/4H
hT/JnZ9L0dzyJPV/TT4vzJ/RO+YLDy/Mr/sK/wvXLMynXxdeJDy6ML8fILyM
eF6Yr/cXXiq8S3T9cqHm/1F4aOF64VX1z4UbFs4/K3LbZ+/C6/NI7vEjCvPx
N4QXC48sXF/0E14CF9D8Pwr/HBxffy28twtz++eW0fVrQziKxv8YbcuIOtQ/
vxWON//m9r8uhbnRrbnXi5xAbqgtHzhZtjA42v4nBcf7rVK+PVP4PvhjFddX
dVJM6Fq4vm+Re323Vf+OFY4Z6Cnd1F9f7Tty28PSwt9TM+Wnupr/ZOFLhR9g
/YWnCf+d/O1T4T+Ep6d895nwn8IzUn7sXlivujO3fQ9X/1/CM5P/EpPINScn
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
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt13m8VeMaB/CtXfvso8GlwjVeU8Ybl4RrHnJRiTJXXEWGJoTQQIOSCs1z
NM/RqJEmQoMhCqlUpI4MabiV1P0+n/f88dT7fNfvXWvtvdd61zqnNGheu1mJ
TCbzmSqltuQzma+zmcxR6kv91Fwm8zmbrv9V8G32GlvF5rBdbCbrzT5j09gv
bDLrzo4uyGRWsL1sLhvHvpSby3azd1lftkHdz7qw6uwc/Vdy89geNov1Yz+y
L1k59SmbzBaxDvrJcX5qZ6FtbCrbrp8k103uA3UWu5cdzn7zgVfKTWE/syL1
jrmr5a5kj+rPkCsZ56wuZ43YaaxEnJ+6gj3CTmdZ/aeqKqvHjmN/Ocbl7N9q
pmM1t+1Fx1irv8m4hdxFckfpv7d9JdvH9qsjnWRF399S9od+utxwuavVVepd
+Sdse8n+VugvML5NrqLcXsftb/t17Hl2gF1gXxXUh2wHm8aGmbdS/YvVZkez
feb2Mfcq9hh7XH3gGD+xb1h59ZXcNPO6s0r6u2TuVA3lxrP/soH6enLnyn3B
ZrOdbAbrwz5S57IHWFn2h+MuZeew+qwM28E+ZGezuqw0+50tY5VZDVae7WFv
OMaF2XQecT4LCtP5ncHq6O9Q89lyc89nt+ormPs/c4vkvmNHq6/ZTJltbK2+
olrDZrCtqmVc4/ZTw7im+kZuMfvL/t6TG8J+Us/G9Sd3i3F1tUxuPPtBbrRc
J7aaLcim3zt+95ny37Il7KD+fbmhcp+wkWw9e5O1ZR+zEWwdG8raxHfKhrPv
2Fo11v4ms4fZG/oeaj3bnEvXzk/G1xhfqybIPcgGydS3v3+yH9STbKvcdcbX
qzVyC9mfcvPkBrElrBdbwZbH+civ43fG9am/Xu5U/Qq5iWxLnBvrHNdeQbo+
4zrdadsp+i28hXGR/dxo/J+4f83tzVbKvS7fjH3NFrED8duywbFGqKfYNnNv
MK6mlstNYD/KjZF7ma1X9dkr7BZ2tn6p3GC2mvVnz8Z3wFaxsnFsNomNYw/o
B8jVZefF/auasv7sPnaZfqE6hVVnJdk219oidiqrWSKtuUX+WcxOY7WYYeZn
tsMxfmAnqQ1svg0L1D/0N8v5L7NVbgk7XXM789VltrNN5n7OSqvlbILMZvaF
vkz8Tmxi8Zrzqb5Q5dUc39lG9pnx4WqZ3Pi47tm3+grx3bDp8f2xZfpSaikb
zX5nm/UnxrXK5rHf2Cb9CXGtsrlsLftIX0ItYSPZd+xjfVZ9wEawTbm0Zm4p
TGterH0bVbP4LQvTuhrr68/mrmfHqmPUPNu28efiuWV8q3Et9avcRnZ83COO
Maf42u2pnx/3r9otv51tYH9X38rNkvuFfa8/Tq1ls+Oc1c36p82rwsrrF8t1
Yx+yV9ijxfdN3D+z8+nabO8YI4zvMm4n116tYoV+wDHsC31vc9ubczgby1ax
PqwDG2nuPawnq8NOY3m50exz1ou1Y6Pl7mO9Y31mZ7DScuPi+c76so65dC53
Z9P6EOvE886lrNxk9o1+sNyrcuXY2/GdsCGsKxtubh3WndViJ7NhrDbrxm5l
J7Ey5k6K9ZUNYl3i91Bt2FjWmN2j36FeYhNYM1ZPv121iueW87oj1hW1U7Vn
k+SekLtf/5bj3s66sprsBDaK3ct6xTOAnR7XqXqRjWdNWd24htQL7HfHqG1c
R401tx7rK3e33JnsD9WOTWTNWf24xlVbNo41YffF9aJax7Pb/u4yvluNsb+6
rE88o+QqFR8njrcgnz7jq4Xp88XnXJhP++hamJ4h8SyZl0/PoE6sl/Glxs3t
r7L9HSqVnknxbJqfT9d/Z7nKvvv9thdahLbH9a/vbftlxk+Ye75tB81dxz5h
JeP6ZaNy6V3gav2zcs+opwvTe9M72fSMiWfNIdaTXcya6M8090/768GqsMas
EtvP+rJrWEt2cbx35tKz+6JseteId46m9reBLWc59ZHcmOJ7OO7l92x7PtZu
uVI+y1Djj83rJveC7YdUX7aQdWBPxqIq148tYh21T7HDWH+2mL3MWrASbECs
S6wTe5pl2cBYl1hn9kwuvXd2zKY1I9aOns7ldn6bej+frqUurKS5Q+IzyHSN
55ztB1WPWKfYi6ypPif3JvuEdWetWAF7K9Zh9hprzfrZ97XsOVaV5diNcscf
5l3F77s1rjmZN9VtcT3J1ZA7Ue6Aej3WedaGNdZXMndvrOPmHmKX6Cea24AN
lrufVY5nDN8T14bcQXZxQXpni3e3Mqys2h3PDtlL4llRMp1TNbmz4vqL3zIe
guyygvRe0oi9Fe80qrXvagp7jI3QPyRaxb5eY2eye9gx7BfHfJs9woaxBuxC
uSvts7T951VRfF79dLkmcqPlHonPJjeJNWRD2APs/JirrlAz8unZ0ta5/M38
d403yY2U65lL70nxvjQrn96L2sldL1fOZzrCcY9U1+mPUDNt32juCHN7mDPY
nFuy6R6Ke2mZua+z81hD/clyu0ql95V4b5mTT+9AHeSOsr/5xlvlJsgNsL08
e49tYxPZwFx6n3w/m/6Wib9pCvwNcaTcLLZZP0qul9w0ucZsFGvEqrKp7HE2
kj0cv2/xOVfPpudTPKdaOpc9/BU2LdYDuYb6/6kubHp8NvZQLr2LDsum98F4
L9xXmJ7T64rfNeKd40TnN5TVNO4oU83ciubuVp3Z1FhvWAP9LtWJTWEt2IP6
v2LtYHNZW9ZEv191Z7NYK/aYfp/qymay51gj/V71KpsRn4s9rC/KpXXlt8J0
H8f9fGlBumbj2t1h20n6Y/lNuJZ+t9rpMwxRNeL3sr8bbKsgc4zsanZYrDFs
CntH7lH9cLmG7KJ4h4j9qbn59HfDy44/yPhG4zZyV8sdYftAVo21ZlexsmxN
vF+wXeqcWOP1VQvSvRz39K/8BP2fcS8Zz457zbbHc+nv+/g7fw0/EPuw/wHq
BuNWclfaVk6mSkG65+PeL4p3oPg7Um6Q8Vdy/WxrKfd/ESdCEg==
            "]]}], 
         Lighting -> Automatic]}, {
        RGBColor[0, 0, 1], 
        EdgeForm[None], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
3z/A+DXJe8wi3mdk8vschCck73PzmsvhnqP2g+2Tv/sf+MS8e3Q9OOf+cP+i
OB6VvM8txIOS97MFeDBuhv/l7+1J3peVZ/zK5D1sMXxvuLfyF+f0Tf4uf+N+
yb2Xf/Do5H1ujvPPyHled+b7Xp28H0+MD0nOaao143FXfDDjlcK/l97/3eR1
oB++NJzpNRdqhN9X3+XjcI9M9Xd/uOel2loxvPfWb/tRuNem2v1JuMek2joh
3NdQnqkQ3tvrNy8f7iXpN/w03PNSrX813CNTja4c7hfou1cP9wL0+7wS7p0p
S7wc7r8ot4wL902Uu6qEewH6ra4J70+Una7Al+W8bl8d3uMpv40P94+Uxz4L
r1n/lzHCa5ZyxcRw/1T5rWF4X6Q68na4B6ds8Fa4N6fMMCPc39RcaxTeX2kd
bhzuj2g9fy/ci1R26hbe52ttmRzugSq7vh7u5SlT1Qrv5XTdp4R7o5qPn4fX
XGWYL8LrsnLRmHCfV3n1g3BfUtd6X7hfqRz4WrhHqZz2ZrgnqPxzSbhHo7nw
frgHqrz3cLh/rX1KzXDfR/d5tXBvSPf5N+F6oFr/JO6W8/7oedw358zZF3fN
uUa/gPvlnDmfza6RssQT2Tnaf/XBXXKu9b1x55zzwOPZuPZZl+FOOdfHl8K9
P+XM7eG+ofJSm3C/Q2v7U7h7zvu4p3GPnPd3e3GfnPNzv+zzKw8MyM5R9uif
/V3lk1bhvptqx3O4d845sHu4F6NaPC3cE9c63CPcl1E26BDuxymfdAz36ZQH
2oX7VsonncN9OtX6neFnCdoPPhR+JqH9Y/twj0wZpmq4N6d1Zne4X6/9V9tw
/0u1rHW4n6iaODXcu1cN6hXuJSmr7Ao/p9Fe9bHsN9cetme4l6S88XU4Eyjv
tQz3ClVbO4X7icoz08PPALT+fxveYysTPppdL+1zJ4X7+9qjdQ33uZSjGoT7
DsotW8K9Y+XqVeHnUtoH3cirTNZD2BDuR2tPtD78PED705nh5xmqTWXDNexX
xmeHn8GoFm8N96OV1Q+E+xfK1RvD/WjtrUaFn6loTzo/3EtSnd0c7nFrXzA3
3DNS7Z4X7hmpRm8K96aV4VeEny1pz35d+BmP6v4d4WdL2r+vDT+j0h58Xbi3
rr35PeFnHtpr3x1+3qb9++jwcyDtVReHn0upJ7YgXGtVc4eH+8LaO18ffuak
Gn1D+JmT6u+a8LM99Q3mhHtkyhU3hp8PKYcsCz9XUy2+KfwMSZmkRTjbKb/d
F+6Ja4+zOvyMUD2Bm8O9HuWNoeFetur7ldk6oJrYLNxnVJZbGO4HKZM0Dfd2
lfduCfeVlGEWhftlqsUPhJ8NaD/1bvi5jvat74SfkWg/OCLcN1cf4KrwszTt
33eEnzuqx/Ii7p/z3nlgNq+V/2uHe2eqp/XC/Tjlh23hZxXar9UN9+CUHwZn
656ySvNwn1S5dFC2zmh/0STcK1fWXRl+rqlezV3hZ67q1QzJPo/6EreG+2ja
K9UJ9/VU9+uH87Fy8m3h553qoy4JP5tUH3V5+Pmo8vzS8LNP9WBvDz9XU+/0
f5YomEk=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtmmXAFdXaht/9usZZs61jNx5USgQEVFSkQ0WkS5CwAJEGCRE5AiJli4hJ
Iw0iIaUYmNiNoIKdn0cFCz339d3zY2CueWbPu2etZz1xr132igFt+peWlJQM
1T9B/w9MS0paF0pKyiYlJauKJSU9xA3Eh4oXiQfrmKMbl+radtkuFQ8T/0f8
iLiNjpo630/3z5Kthbia+B/d85D4UvF54gNkXyDuLq4v/pd4oXiAjnt078O6
9ops3XTU0/khsj8qWyfxueKieL74Rh1bdP/Luva7bB101NJ5lH2ubO3FZ4tT
8RxxR/E54kw8T9xaXENcKp4pvkRHLz1vkK7dIdsFOiro/Dddu4/vq/t66f81
ur429fnNst1e8LVWOqrrvKD7HpGtpfgMcYn4YfHF4sriv/SZB8UXiSuJ/xDf
z/uIu4ur6f514uOj7hVvEt8rvlD2iryr7p8hHq7jMZ1v1LVvZDtB9+/T+Wbd
P122Jjo6y36Vro2TfY24q7ineJh4Au+g83N0/0bZumQlJd+Kd+meaeLm4neZ
C/EEvq/4LfGL4nHiZuK3xS+Jx/N+4nfEL4tvLvqdqgSPOe/Kd64cPEe8S1P+
pvhq8XjxSnE7cTdxf8ZTz/tI52/p2mTGU7xd/KZ4kvi0aP84M/evytH+dFbw
eJ8e7b9nB88Hc1gp2CeYW3y8g7hHwb5/oZ7/ps5f0LWxsl0m/k68O3j8W4g/
FL8hnsjY42PBczYA/5f9U52/p2tTZXtAR7Vgn23GepH9a51/omt3M9/6fkdo
7R2uY7TOC7JfInsj2c+TvUTcXNyQZ4j/0T0XixswpuITxUGfLei4PnrOP5Pt
h4J9gXfm3RkTfHOfrjXWeW3GoOg5Zq55x+Nkq6Kjoc5rBa8HxpSxrVvwWmZM
GVvGHN/uqO/3hc4/0rU7i/bp6sFrHF/vLPs3Ov9U1+7hWeJ7xVPF/Rl78efE
EvEdzL14t/gD8W3ituJd4vfFt7I+9cwq4gP1vqP0XdvL/pn4Q9ag7E/quAHf
07VpuretjjN1HuTfs2Wrqs80wt+D41OTzLHjafEYcQPxs+L14lHi+uJnxE+I
ry96TV7Fdy94rTaV/RWdP0MMlG01PpP783XED9m36fxZXbtJtobi58QbxDcU
vQY7iismXpuNZN8q3ij7aPH54jXiJeJh4id0XK3zAbo2Rp/9Tfy9eK/4qOhr
+PIZie9lDIbh64nH5jw973HxIn1mqPi21M+qJ/smcT3ZN4kfl32keIOOvjq/
Ttdu1r11M8eaVbo2ouiY0S/4bxBLuIfYUivxZ9fq6BYcY4bLVlXXrxT3E48W
j9V3Pk5z+Ymu/0Vs0vO/L9iH8eVxsh8v+6ey7yPWik8U7xb/I75JfKz4Y/Gf
4grRa61KHk/LR8eeynm8rCSuXbCP4qsVo32VNcpara2/v1q8mHcWl4uOVZXy
+D9BXEZ/7zP9vZIDtIZ0/zzZH5B9IPFB18fhq7r2EOMlHsJcim8Vnxodeyro
WkGfr6XPzxc/SM4peg6G6vzGgufm3My5dq6uDZFtvD5/gv7+Lj33b/FLidfC
kTpeya9hKy8+WfeexZwHr/krU/tkB/5+Yl8lPzYR7y+uwfpLfW8iro6vi9uJ
j0wcL3hGW/ERiZ/dJXV8OlBcU/yOjtn6e0vIAbJ9Il4p3sAaFXdNHd8O0v1n
yjZTfIe4tbgzvi1ujy+LazEWqXNXOXEdcR9xF/HxiePfYPEV4lPEtcVDxFeK
TxWfTywQ9xWfLm5QtM/he1XEDYseD9ZqeXFd8SjxtfiLuL54pLiP+DRxPdaC
+DJia+J4TM1D7m+VuBaaLb5L3FZ8Gf6ZupaoIW4knigeKT5XfGHR64W1dbb4
AvF6HT3xJV37T+qcOJR8ljhXzhBPIpeK24nHigeLa4obi6eIRxHfxc2K9kF8
8RJxJ/Fm3plYp2u3yzZXxz06by97N/K1eDK5Stye/CWeQiwXdyC+i6eKm4s7
imeJ7xS3EXcRzxHfLW4n7iqeJ54m7iDuLn4KHya269rDsk3XMZFaQPa2xBJ8
RHxi4vzXLfH91FjUWvcwJrI30fXW4rdSr9frEq+/kuh8MTtx/v4udfy9LXE8
K0bXN0sS1w8HROe+pYnri3dSx9thiddjjM7Xi8S3iLPofLY4cf5PovPf/MT1
ETUr67V/4lr22dTru2fifLcrdX4Znzj+UkMTT0cnrq0/Tx3/JySO99R05Kep
iWu9j1LH5xsTx4MlOi7U2LTRtStk+zZ1Pro1cXx+XEdH2S/XtUGp3+H14BqG
dzswOt4u0/1TZDta/Bv5TnyX+OfU9d09ifPhT6nrv7sT50NiYLngHEtspAbn
2Q8krs3/Eu9grhPnP575cfCY8rf+SF3PPZg4//6Zut57KHE+/TV1/Xlv4nz4
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
w78y5yZyFrmreubYSUwltp6ROTYSU4mtp2VeG/g4vl4p89pgzbB2js+ca8ix
5NoamWMzMZJYiQa0LljjQBuqlnntEYOJxdRHjfL4Rn1zeua1wRpjrVXJvNZY
g6zFEzPndmomaqcTMud2cj65v3LmtcgaY61Vzbxfw5pn7R+WOfeSk8nNFTPH
etY8a7+C+JaCcwC54JTMsZCYSew8MHMs4jcW6MflM+cOcgy5plzmWEtOIbcc
kFnLJYYRyw7KvL/FbyDY3zk0c+1ATUBtcHDm/SlqEmoTNGt+W8AeB1o2PVnj
PL5TT56UuXYjR5GrymSuJanpqO2o4Zvk+ZTf3pTNrEcR84n9h4ivKbhmoXYZ
nPv7q8F6HAfn+CRa3VXRe3vUyNTKf4jPL7gGpRalB6AXoGdEG00y99L0sPSy
f+b9EzUttW2/6NjHGmGtoNHx2wH2bNDu8Gl8mz0X6gN6UHpRehR+q4Rmx28r
2KNBy0szawH0/PT+/aPXytZgvW2A+I2C1xBrab/MWhc9Cr0KPRu9G3sIaPMh
c++CJoA2wBpnre/M4zWaD9oPGglaKxoJWgkaClosGgpaCv072i8aC2PBmFBP
ormiDaO5T8zrc/bC2aNBP+I3Gfw2g9+08Nsl6iNic9c8v/ObBn7bgAbNb7EG
Rsc+YjyxvmbmWoUahVqF37Tszp/Pb432l71zwRoKWgoxjdjG70noD/pGxx9i
IrGRPZbt+Xyw93J1dC1PTU9vRcwj9hGT2KvoGZ3L6LHotYhxxDpiJnsP7Fng
T1MS72UwR1vzfPhDnh/fzusF8nev6FhCjiRXsofAXgI9Eb0ROYpcRU7jt2HX
RMd+Yj6x/9ro2E7MJ/aTM8gd5Dh+K9Zb9qcLjlnErj7RuYEcQi65M/fHL3P/
+B8BwkvI
            "]], 
           Polygon3DBox[CompressedData["
1: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
            "]]}], Lighting -> 
         Automatic]}, {}, {
        GrayLevel[1], 
        EdgeForm[None], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJxNkEtOAlEQRau73wsQ09F2Zoz0T5wbjRpjiCEQ5i7BBejYNbgrQWHEz0QF
FwOn8mrA4ObUu13fLp9fn15iEalQglZepIexgWOUEk/gFzok/oTvTZFL4jc4
hBeRSAEbyGsz9E1eB792wdNv7Sj0P4cl/oz4Hv8HTlGBP4JJHGZteV/BI3SN
MnSMcvwPH6j7tGyu9k8t58D28NZHqXnae0lNjZe7cJfW6K0Du0VvWvCuiM9c
iLt4f3COHoh/fejzSLyGNzbz1uantqe3mbqD1pbw1G7Xe09cyM/26pV39g/7
8B/uAEySJTU=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtkDkKAkEQRXvUhgERx8DY3dgdRUREvIBH8AAam5l7K/fIHffUc+grqoNH
v19TU1M9mdFkOA4ZY5IQgTohBlFowNoaE+cMwwKf+saU8RLMfMXgP0+fSX/K
0xkbfAlpcot8xSuuN+CswodaLaR5i9+s9so7e6s1mVV3vTJPdkvAzu0j82Tu
3Nf+wH1jZRXxuNvnDX28QO2C57l0ER9Q+5Lv0MYz1A74C3rkPPmMP6FLzpFP
+AM65Cz5aPWOTff/ZNc/PfUp1Q==
            "]], 
           
           Polygon3DBox[{{1057, 293, 579, 578, 1490}, {1051, 290, 573, 572, 
            1487}, {1509, 580, 1491, 1059, 1060}, {1055, 292, 577, 576, 
            1489}, {1053, 291, 575, 574, 1488}, {1049, 289, 571, 570, 
            1486}}]}], Lighting -> {{"Ambient", 
            GrayLevel[0.8]}}]}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwt0ksvXVEUAODt/ei93vQqrph6zSUMDOUSaTVEbxphIBgwEsylNRfMBXMJ
YwN+gTdtPSLiD4h2pt8WyVnnW3sn56y19jktE3NfZnNCCD9ErSTmSbcHPhWE
UMFnNvOVnSwrDKGHTexnO7PsjvtiRj7KJU5xhQvciHW4wzXuc4tHbCtShx/V
PmF17EVU5oVwal3Fs7jPc9bwIvbMS9bxKj7PlLiW1/MXP/E3G/iHjbyJ/fOW
ad7F+fjClLr3sQZzxYEej613echN7nGV21zmOuf5k5Nc5AiHxbS8i9/Yykzs
hd1MsIO95q9QKx37lj/GmazL4+z8x4lcZ89xJjnGBL/zA7MsjWfPklifxfzK
IeG14TOVDIP0OcMA85mh8UMfXW+bf9//if8BpzXD
         "]]}, {
        GrayLevel[0], 
        Line3DBox[{521, 286, 519, 512, 2176, 560, 561, 2187, 562, 563, 564, 
         1500, 565, 566, 567, 568, 1492, 569, 1494, 570, 571, 1495, 572, 573, 
         1496, 574, 575, 1497, 576, 577, 1498, 578, 579, 1499, 580, 1509, 581,
          583, 544, 294, 1060, 1059, 293, 1057, 292, 1055, 291, 1053, 290, 
         1051, 289, 1049, 288, 1480, 529, 287, 1474, 515, 521}], 
        Line3DBox[CompressedData["
1:eJwl0rkuRGEYgOHfhBCFKO1iH2MsPbXC0uiISkUklMQFWBItcQEmoeYGEKWC
UFoGse/7zjNRvHm+/xTnfOfklPUNdw2lhRAmlRcJod6hMzOEFvaynYPs4RgH
OMVRznGCC1zUrHmdCW5zmUdc4wO3mJYVQpK5vONJegj3POUDz/jIcz7xgs+8
5Auv+Mpr3ujNfMt33vGD9/xMPZNffOQ3VzJCiHjHbP04ZzFdxXa5dc7hAX/t
upm6H1eZ5BK3OM+11HXNmBMc5yxHOMF+jrKbA2xjD5vZwTib7FTHBsYYZy1j
jDLKGm7YudWOtSrVjnOUxyxhjY7MxazWobmIVUqaC1mpA3MBK7Rvzucey9mo
OsW161oZG1L/gqZ9k1jk/9/4A+07TV8=
         "]]}, {
        GrayLevel[0.2], 
        Line3DBox[{1511, 1816, 799, 1510, 2398, 1728, 1512, 2399, 1729, 1513, 
         2400, 1730, 1514, 2401, 1731, 1515, 2402, 1732, 1516, 2403, 2189, 
         2493, 1517, 2190, 2494, 1518, 2404, 1733, 1519, 2405, 1734, 1520, 
         2406, 1735, 1521, 2407, 1736, 1522, 2293, 2408, 1856, 1737, 1854, 
         2607, 1858, 1859, 1855, 1738, 1817}], 
        Line3DBox[{1524, 2191, 2495, 1523, 813, 1525, 2409, 1739, 1526, 2410, 
         1740, 1527, 2411, 1741, 1528, 2412, 1742, 1529, 2413, 2192, 2496, 
         1530, 2193, 2497, 1531, 2194, 2498, 1532, 2414, 1743, 1533, 1860, 
         2415, 1744, 1861, 1862, 2290, 2416, 1837, 1745, 1850, 1852, 2606, 
         1819, 1838, 1746, 1851, 2605, 1853, 1821, 1839, 1747, 1857}], 
        Line3DBox[{1535, 2195, 2499, 1534, 2196, 2500, 1536, 826, 1537, 2417, 
         1748, 1538, 2418, 1749, 1539, 2419, 1750, 1540, 2420, 2197, 2501, 
         1541, 2198, 2502, 1542, 2199, 2503, 1543, 1823, 1840, 2200, 2599, 
         1544, 1826, 1842, 2604, 1751, 1545, 2596, 1818, 1844, 1752, 1546, 
         2597, 1820, 1846, 1753, 1547, 2598, 1822, 1848, 1754, 1548}], 
        Line3DBox[{1550, 2201, 2504, 1549, 2202, 2505, 1551, 2203, 2506, 1552,
          839, 1553, 2421, 1755, 1554, 2422, 1756, 1555, 2423, 2204, 2507, 
         1556, 2205, 2508, 1557, 2206, 2509, 1558, 1824, 1841, 1825, 2600, 
         1559, 1827, 1843, 2510, 2291, 1560, 2601, 1828, 1845, 1829, 1561, 
         2602, 1830, 1847, 1831, 1562, 2603, 1832, 1849, 1833, 1563}], 
        Line3DBox[{1565, 2207, 2511, 1564, 2208, 2512, 1566, 2209, 2513, 1567,
          2210, 2514, 1568, 852, 1569, 2424, 1757, 1570, 2425, 2211, 2515, 
         1571, 2212, 2516, 1572, 2213, 2517, 1573, 2214, 2518, 1574, 2215, 
         2519, 1575, 2216, 2520, 1576, 2426, 1758, 1577, 2427, 1759, 1578}], 
        Line3DBox[{1580, 2217, 2521, 1579, 2218, 2522, 1581, 2219, 2523, 1582,
          2220, 2524, 1583, 2221, 2525, 1584, 868, 1585, 2428, 2222, 2526, 
         1586, 2223, 2527, 1587, 2224, 2528, 1588, 2225, 2529, 1589, 2226, 
         2530, 1590, 2227, 2531, 1591, 2228, 2532, 1592, 2429, 1760, 1593}], 
        Line3DBox[{1597, 2430, 1761, 1595, 2431, 1762, 1599, 2432, 1763, 1601,
          2433, 1764, 1603, 2434, 1765, 1605, 2435, 1766, 1607, 2436, 885, 
         1609, 2437, 1767, 1611, 2438, 1768, 1613, 2439, 1769, 1615, 2440, 
         1770, 1617, 2441, 1771, 1619, 2442, 1772, 1621, 2443, 1773, 1623}], 
        Line3DBox[{1622, 2546, 2241, 1620, 2545, 2240, 1618, 2544, 2239, 1616,
          2543, 2238, 1614, 2542, 2237, 1612, 2541, 2236, 1610, 2540, 2235, 
         1608, 2539, 884, 1606, 2538, 2234, 1604, 2537, 2233, 1602, 2536, 
         2232, 1600, 2535, 2231, 1598, 2534, 2230, 1594, 2533, 2229, 1596}], 
        Line3DBox[{1625, 2444, 1774, 1624, 2445, 1775, 1626, 2446, 1776, 1627,
          2447, 1777, 1628, 2448, 1778, 1629, 2449, 1779, 1630, 2450, 2242, 
         2547, 1631, 901, 1632, 2451, 1780, 1633, 2452, 1781, 1634, 2453, 
         1782, 1635, 2454, 1783, 1636, 2455, 1784, 1637, 2456, 1785, 1638}], 
        Line3DBox[{1640, 2243, 2548, 1639, 2457, 1786, 1641, 2458, 1787, 1642,
          2459, 1788, 1643, 2460, 1789, 1644, 2461, 1790, 1645, 2462, 2244, 
         2549, 1646, 2245, 2550, 1647, 917, 1648, 2463, 1791, 1649, 2464, 
         1792, 1650, 2465, 1793, 1651, 2466, 1794, 1652, 2467, 1795, 1653}], 
        Line3DBox[{1655, 2246, 2551, 1654, 2247, 2552, 1656, 2468, 1796, 1657,
          2469, 1797, 1658, 2470, 1798, 1659, 2471, 1799, 1660, 2472, 2248, 
         2553, 1661, 2249, 2554, 1662, 2250, 2555, 1663, 933, 1664, 2473, 
         1800, 1665, 2474, 1801, 1666, 2475, 1802, 1667, 2476, 1803, 1668}], 
        Line3DBox[{1670, 2251, 2556, 1669, 2252, 2557, 1671, 2253, 2558, 1672,
          2477, 1804, 1673, 2478, 1805, 1674, 2479, 1806, 1675, 2480, 2254, 
         2559, 1676, 2255, 2560, 1677, 2256, 2561, 1678, 2257, 2562, 1679, 
         949, 1680, 2481, 1807, 1681, 2482, 1808, 1682, 2483, 1809, 1683}], 
        Line3DBox[{1685, 2258, 2563, 1684, 2259, 2564, 1686, 2260, 2565, 1687,
          2261, 2566, 1688, 2484, 1810, 1689, 2485, 1811, 1690, 2486, 2262, 
         2567, 1691, 2263, 2568, 1692, 2264, 2569, 1693, 2265, 2570, 1694, 
         2266, 2571, 1695, 965, 1696, 2487, 1812, 1697, 2488, 1813, 1698}], 
        Line3DBox[{1700, 2267, 2572, 1699, 2268, 2573, 1701, 2269, 2574, 1702,
          2270, 2575, 1703, 2271, 2576, 1704, 2489, 1814, 1705, 2490, 2272, 
         2577, 1706, 2273, 2578, 1707, 2274, 2579, 1708, 2275, 2580, 1709, 
         2276, 2581, 1710, 2277, 2582, 1711, 981, 1712, 2491, 1815, 1713}], 
        Line3DBox[{1727, 1836, 1021, 1726, 2595, 2289, 1725, 2594, 2288, 1724,
          2593, 2287, 1723, 2592, 2286, 1722, 2591, 2285, 1721, 2590, 2284, 
         1720, 2589, 2283, 2492, 1719, 2588, 2282, 1718, 2587, 2281, 1717, 
         2586, 2280, 1716, 2585, 2279, 1715, 2584, 2278, 1714, 2292, 2583, 
         1834, 1835}], 
        Line3DBox[{1868, 2089, 2716, 1867, 2088, 2715, 1866, 2087, 2714, 1865,
          2086, 2713, 1864, 2085, 2712, 1863, 2084, 2817, 2183, 2608, 2294, 
         2816, 2182, 2083, 2815, 2181, 2082, 2814, 2180, 2081, 2813, 2179, 
         2080, 2812, 2178, 2079, 2811, 2177, 2078, 2809, 2175, 2184, 2185, 
         1268, 2186, 2172, 2188}], 
        Line3DBox[{1869, 2171, 2295, 2810, 2174, 2173, 1278, 1870, 2717, 2090,
          1871, 2718, 2091, 1872, 2719, 2092, 1873, 2720, 2093, 1874, 2721, 
         2094, 1875, 2722, 2296, 2609, 1876, 2297, 2610, 1877, 2723, 2095, 
         1878, 2724, 2096, 1879, 2725, 2097, 1880, 2726, 2098, 1881, 2727, 
         2099, 1882}], 
        Line3DBox[{1884, 2298, 2611, 1883, 2299, 2612, 1885, 1294, 1886, 2728,
          2100, 1887, 2729, 2101, 1888, 2730, 2102, 1889, 2731, 2103, 1890, 
         2732, 2300, 2613, 1891, 2301, 2614, 1892, 2302, 2615, 1893, 2733, 
         2104, 1894, 2734, 2105, 1895, 2735, 2106, 1896, 2736, 2107, 1897}], 
        Line3DBox[{1899, 2303, 2616, 1898, 2304, 2617, 1900, 2305, 2618, 1901,
          1310, 1902, 2737, 2108, 1903, 2738, 2109, 1904, 2739, 2110, 1905, 
         2740, 2306, 2619, 1906, 2307, 2620, 1907, 2308, 2621, 1908, 2309, 
         2622, 1909, 2741, 2111, 1910, 2742, 2112, 1911, 2743, 2113, 1912}], 
        Line3DBox[{1914, 2310, 2623, 1913, 2311, 2624, 1915, 2312, 2625, 1916,
          2313, 2626, 1917, 1326, 1918, 2744, 2114, 1919, 2745, 2115, 1920, 
         2746, 2314, 2627, 1921, 2315, 2628, 1922, 2316, 2629, 1923, 2317, 
         2630, 1924, 2318, 2631, 1925, 2747, 2116, 1926, 2748, 2117, 1927}], 
        Line3DBox[{1929, 2319, 2632, 1928, 2320, 2633, 1930, 2321, 2634, 1931,
          2322, 2635, 1932, 2323, 2636, 1933, 1342, 1934, 2749, 2118, 1935, 
         2750, 2324, 2637, 1936, 2325, 2638, 1937, 2326, 2639, 1938, 2327, 
         2640, 1939, 2328, 2641, 1940, 2329, 2642, 1941, 2751, 2119, 1942}], 
        Line3DBox[{1944, 2330, 2643, 1943, 2331, 2644, 1945, 2332, 2645, 1946,
          2333, 2646, 1947, 2334, 2647, 1948, 2335, 2648, 1949, 1358, 1950, 
         2752, 2336, 2649, 1951, 2337, 2650, 1952, 2338, 2651, 1953, 2339, 
         2652, 1954, 2340, 2653, 1955, 2341, 2654, 1956, 2342, 2655, 1957}], 
        Line3DBox[{1961, 2753, 2120, 1959, 2754, 2121, 1963, 2755, 2122, 1965,
          2756, 2123, 1967, 2757, 2124, 1969, 2758, 2125, 1971, 2759, 2126, 
         1973, 2760, 1375, 1975, 2761, 2127, 1977, 2762, 2128, 1979, 2763, 
         2129, 1981, 2764, 2130, 1983, 2765, 2131, 1985, 2766, 2132, 1987}], 
        Line3DBox[{1986, 2669, 2355, 1984, 2668, 2354, 1982, 2667, 2353, 1980,
          2666, 2352, 1978, 2665, 2351, 1976, 2664, 2350, 1974, 2663, 1374, 
         1972, 2662, 2349, 1970, 2661, 2348, 1968, 2660, 2347, 1966, 2659, 
         2346, 1964, 2658, 2345, 1962, 2657, 2344, 1958, 2656, 2343, 1960}], 
        Line3DBox[{1989, 2356, 2670, 1988, 2767, 2133, 1990, 2768, 2134, 1991,
          2769, 2135, 1992, 2770, 2136, 1993, 2771, 2137, 1994, 2772, 2138, 
         1995, 2773, 2357, 2671, 1996, 1391, 1997, 2774, 2139, 1998, 2775, 
         2140, 1999, 2776, 2141, 2000, 2777, 2142, 2001, 2778, 2143, 2002}], 
        Line3DBox[{2004, 2358, 2672, 2003, 2359, 2673, 2005, 2779, 2144, 2006,
          2780, 2145, 2007, 2781, 2146, 2008, 2782, 2147, 2009, 2783, 2148, 
         2010, 2784, 2360, 2674, 2011, 2361, 2675, 2012, 1407, 2013, 2785, 
         2149, 2014, 2786, 2150, 2015, 2787, 2151, 2016, 2788, 2152, 2017}], 
        Line3DBox[{2019, 2362, 2676, 2018, 2363, 2677, 2020, 2364, 2678, 2021,
          2789, 2153, 2022, 2790, 2154, 2023, 2791, 2155, 2024, 2792, 2156, 
         2025, 2793, 2365, 2679, 2026, 2366, 2680, 2027, 2367, 2681, 2028, 
         1423, 2029, 2794, 2157, 2030, 2795, 2158, 2031, 2796, 2159, 2032}], 
        Line3DBox[{2034, 2368, 2682, 2033, 2369, 2683, 2035, 2370, 2684, 2036,
          2371, 2685, 2037, 2797, 2160, 2038, 2798, 2161, 2039, 2799, 2162, 
         2040, 2800, 2372, 2686, 2041, 2373, 2687, 2042, 2374, 2688, 2043, 
         2375, 2689, 2044, 1439, 2045, 2801, 2163, 2046, 2802, 2164, 2047}], 
        Line3DBox[{2049, 2376, 2690, 2048, 2377, 2691, 2050, 2378, 2692, 2051,
          2379, 2693, 2052, 2380, 2694, 2053, 2803, 2165, 2054, 2804, 2166, 
         2055, 2805, 2381, 2695, 2056, 2382, 2696, 2057, 2383, 2697, 2058, 
         2384, 2698, 2059, 2385, 2699, 2060, 1455, 2061, 2806, 2167, 2062}], 
        Line3DBox[{2064, 2386, 2700, 2063, 2387, 2701, 2065, 2388, 2702, 2066,
          2389, 2703, 2067, 2390, 2704, 2068, 2391, 2705, 2069, 2807, 2168, 
         2070, 2808, 2392, 2706, 2071, 2393, 2707, 2072, 2394, 2708, 2073, 
         2395, 2709, 2074, 2396, 2710, 2075, 2397, 2711, 2076, 1471, 2170, 
         2077}]}, {
        GrayLevel[0.2], 
        Line3DBox[{585, 800, 2398, 586, 813, 612, 2500, 825, 624, 2505, 837, 
         636, 2512, 849, 651, 2522, 864, 666, 2534, 879, 2431, 681, 894, 2445,
          696, 909, 2457, 711, 2552, 924, 726, 2557, 939, 741, 2564, 954, 756,
          2573, 969, 771, 2584, 984, 786}], 
        Line3DBox[{587, 801, 2399, 588, 814, 2409, 613, 826, 625, 2506, 838, 
         637, 2513, 850, 652, 2523, 865, 667, 2535, 880, 2432, 682, 895, 2446,
          697, 910, 2458, 712, 925, 2468, 727, 2558, 940, 742, 2565, 955, 757,
          2574, 970, 772, 2585, 985, 787}], 
        Line3DBox[{589, 802, 2400, 590, 815, 2410, 614, 827, 2417, 626, 839, 
         638, 2514, 851, 653, 2524, 866, 668, 2536, 881, 2433, 683, 896, 2447,
          698, 911, 2459, 713, 926, 2469, 728, 941, 2477, 743, 2566, 956, 758,
          2575, 971, 773, 2586, 986, 788}], 
        Line3DBox[{591, 803, 2401, 592, 816, 2411, 615, 828, 2418, 627, 840, 
         2421, 639, 852, 654, 2525, 867, 669, 2537, 882, 2434, 684, 897, 2448,
          699, 912, 2460, 714, 927, 2470, 729, 942, 2478, 744, 957, 2484, 759,
          2576, 972, 774, 2587, 987, 789}], 
        Line3DBox[{593, 804, 2402, 594, 817, 2412, 616, 829, 2419, 628, 841, 
         2422, 640, 853, 2424, 655, 868, 670, 2538, 883, 2435, 685, 898, 2449,
          700, 913, 2461, 715, 928, 2471, 730, 943, 2479, 745, 958, 2485, 760,
          973, 2489, 775, 2588, 988, 790}], 
        Line3DBox[{595, 805, 2403, 597, 818, 2413, 617, 830, 2420, 629, 842, 
         2423, 641, 854, 2425, 656, 869, 2428, 671, 884, 2436, 686, 899, 2450,
          701, 914, 2462, 716, 929, 2472, 731, 944, 2480, 746, 959, 2486, 761,
          974, 2490, 776, 989, 2492, 791}], 
        Line3DBox[{599, 2494, 807, 600, 2497, 820, 619, 2502, 832, 631, 2508, 
         844, 643, 2516, 856, 658, 2527, 871, 673, 2540, 886, 2437, 688, 901, 
         703, 2550, 916, 718, 2554, 931, 733, 2560, 946, 748, 2568, 961, 763, 
         2578, 976, 778, 2590, 991, 793}], 
        Line3DBox[{601, 808, 2404, 602, 2498, 821, 620, 2503, 833, 632, 2509, 
         845, 644, 2517, 857, 659, 2528, 872, 674, 2541, 887, 2438, 689, 902, 
         2451, 704, 917, 719, 2555, 932, 734, 2561, 947, 749, 2569, 962, 764, 
         2579, 977, 779, 2591, 992, 794}], 
        Line3DBox[{603, 809, 2405, 604, 822, 2414, 621, 1010, 2599, 834, 633, 
         1011, 2600, 846, 645, 2518, 858, 660, 2529, 873, 675, 2542, 888, 
         2439, 690, 903, 2452, 705, 918, 2463, 720, 933, 735, 2562, 948, 750, 
         2570, 963, 765, 2580, 978, 780, 2592, 993, 795}], 
        Line3DBox[{605, 810, 2406, 606, 1043, 1044, 823, 2415, 622, 1012, 835,
          2604, 634, 2510, 1013, 847, 646, 2519, 859, 661, 2530, 874, 676, 
         2543, 889, 2440, 691, 904, 2453, 706, 919, 2464, 721, 934, 2473, 736,
          949, 751, 2571, 964, 766, 2581, 979, 781, 2593, 994, 796}], 
        Line3DBox[{607, 811, 2407, 608, 999, 1045, 1000, 2416, 1046, 1025, 
         1001, 2596, 1002, 1028, 1014, 2601, 1015, 647, 2520, 860, 662, 2531, 
         875, 677, 2544, 890, 2441, 692, 905, 2454, 707, 920, 2465, 722, 935, 
         2474, 737, 950, 2481, 752, 965, 767, 2582, 980, 782, 2594, 995, 
         797}], 
        Line3DBox[{609, 1036, 1037, 2408, 1040, 1003, 1031, 2606, 1004, 1033, 
         1026, 1005, 2597, 1006, 1029, 1016, 2602, 1017, 648, 861, 2426, 663, 
         2532, 876, 678, 2545, 891, 2442, 693, 906, 2455, 708, 921, 2466, 723,
          936, 2475, 738, 951, 2482, 753, 966, 2487, 768, 981, 783, 2595, 996,
          798}], 
        Line3DBox[{610, 998, 1038, 1042, 2607, 1041, 1039, 1007, 1032, 1035, 
         2605, 1034, 1027, 1008, 2598, 1009, 1030, 1018, 2603, 1019, 649, 862,
          2427, 664, 877, 2429, 679, 2546, 892, 2443, 694, 907, 2456, 709, 
         922, 2467, 724, 937, 2476, 739, 952, 2483, 754, 967, 2488, 769, 982, 
         2491, 784, 1021, 1022, 1023}], 
        Line3DBox[{785, 983, 1020, 2583, 770, 968, 2572, 755, 953, 2563, 740, 
         938, 2556, 725, 923, 2551, 710, 908, 2548, 695, 2444, 893, 680, 2430,
          878, 2533, 665, 863, 2521, 650, 848, 2511, 635, 836, 2504, 623, 824,
          2499, 611, 812, 2495, 584, 799, 997, 1024}], 
        Line3DBox[{792, 990, 2589, 777, 975, 2577, 762, 960, 2567, 747, 945, 
         2559, 732, 930, 2553, 717, 915, 2549, 702, 900, 2547, 687, 885, 2539,
          672, 870, 2526, 657, 855, 2515, 642, 843, 2507, 630, 831, 2501, 618,
          819, 2496, 598, 806, 2493, 596}], 
        Line3DBox[{1064, 1272, 2712, 1065, 1287, 2723, 1084, 2615, 1302, 1099,
          2621, 1317, 1114, 2629, 1332, 1129, 2639, 1347, 1144, 2651, 1362, 
         1159, 2665, 1377, 2762, 1174, 1392, 2774, 1189, 1407, 1204, 2681, 
         1422, 1219, 2688, 1437, 1234, 2697, 1452, 1249, 2708, 1467, 1264}], 
        Line3DBox[{1066, 1273, 2713, 1067, 1288, 2724, 1085, 1303, 2733, 1100,
          2622, 1318, 1115, 2630, 1333, 1130, 2640, 1348, 1145, 2652, 1363, 
         1160, 2666, 1378, 2763, 1175, 1393, 2775, 1190, 1408, 2785, 1205, 
         1423, 1220, 2689, 1438, 1235, 2698, 1453, 1250, 2709, 1468, 1265}], 
        Line3DBox[{1068, 1274, 2714, 1069, 1289, 2725, 1086, 1304, 2734, 1101,
          1319, 2741, 1116, 2631, 1334, 1131, 2641, 1349, 1146, 2653, 1364, 
         1161, 2667, 1379, 2764, 1176, 1394, 2776, 1191, 1409, 2786, 1206, 
         1424, 2794, 1221, 1439, 1236, 2699, 1454, 1251, 2710, 1469, 1266}], 
        Line3DBox[{1070, 1275, 2715, 1071, 1290, 2726, 1087, 1305, 2735, 1102,
          1320, 2742, 1117, 1335, 2747, 1132, 2642, 1350, 1147, 2654, 1365, 
         1162, 2668, 1380, 2765, 1177, 1395, 2777, 1192, 1410, 2787, 1207, 
         1425, 2795, 1222, 1440, 2801, 1237, 1455, 1252, 2711, 1470, 1267}], 
        Line3DBox[{1072, 1276, 2716, 1073, 1291, 2727, 1088, 1306, 2736, 1103,
          1321, 2743, 1118, 1336, 2748, 1133, 1351, 2751, 1148, 2655, 1366, 
         1163, 2669, 1381, 2766, 1178, 1396, 2778, 1193, 1411, 2788, 1208, 
         1426, 2796, 1223, 1441, 2802, 1238, 1456, 2806, 1253, 1471, 1472, 
         1473}], 
        Line3DBox[{1254, 1457, 2700, 1239, 1442, 2690, 1224, 1427, 2682, 1209,
          1412, 2676, 1194, 1397, 2672, 1179, 1382, 2670, 1164, 2753, 1367, 
         2656, 1149, 1352, 2643, 1134, 1337, 2632, 1119, 1322, 2623, 1104, 
         1307, 2616, 1089, 1292, 2611, 1074, 1277, 2810, 1482, 1484, 1483, 
         1047, 1268, 1501}], 
        Line3DBox[{1255, 1458, 2701, 1240, 1443, 2691, 1225, 1428, 2683, 1210,
          1413, 2677, 1195, 1398, 2673, 1180, 2767, 1383, 1165, 2754, 1368, 
         2657, 1150, 1353, 2644, 1135, 1338, 2633, 1120, 1323, 2624, 1105, 
         1308, 2617, 1090, 1293, 2612, 1075, 1278, 1481, 1048, 2809, 1269, 
         1502}], 
        Line3DBox[{1256, 1459, 2702, 1241, 1444, 2692, 1226, 1429, 2684, 1211,
          1414, 2678, 1196, 2779, 1399, 1181, 2768, 1384, 1166, 2755, 1369, 
         2658, 1151, 1354, 2645, 1136, 1339, 2634, 1121, 1324, 2625, 1106, 
         1309, 2618, 1091, 1294, 1076, 2717, 1279, 1050, 2811, 1503}], 
        Line3DBox[{1257, 1460, 2703, 1242, 1445, 2693, 1227, 1430, 2685, 1212,
          2789, 1415, 1197, 2780, 1400, 1182, 2769, 1385, 1167, 2756, 1370, 
         2659, 1152, 1355, 2646, 1137, 1340, 2635, 1122, 1325, 2626, 1107, 
         1310, 1092, 2728, 1295, 1077, 2718, 1280, 1052, 2812, 1504}], 
        Line3DBox[{1258, 1461, 2704, 1243, 1446, 2694, 1228, 2797, 1431, 1213,
          2790, 1416, 1198, 2781, 1401, 1183, 2770, 1386, 1168, 2757, 1371, 
         2660, 1153, 1356, 2647, 1138, 1341, 2636, 1123, 1326, 1108, 2737, 
         1311, 1093, 2729, 1296, 1078, 2719, 1281, 1054, 2813, 1505}], 
        Line3DBox[{1259, 1462, 2705, 1244, 2803, 1447, 1229, 2798, 1432, 1214,
          2791, 1417, 1199, 2782, 1402, 1184, 2771, 1387, 1169, 2758, 1372, 
         2661, 1154, 1357, 2648, 1139, 1342, 1124, 2744, 1327, 1109, 2738, 
         1312, 1094, 2730, 1297, 1079, 2720, 1282, 1056, 2814, 1506}], 
        Line3DBox[{1260, 2807, 1463, 1245, 2804, 1448, 1230, 2799, 1433, 1215,
          2792, 1418, 1200, 2783, 1403, 1185, 2772, 1388, 1170, 2759, 1373, 
         2662, 1155, 1358, 1140, 2749, 1343, 1125, 2745, 1328, 1110, 2739, 
         1313, 1095, 2731, 1298, 1080, 2721, 1283, 1058, 2815, 1507}], 
        Line3DBox[{1262, 1465, 2706, 1247, 1450, 2695, 1232, 1435, 2686, 1217,
          1420, 2679, 1202, 1405, 2674, 1187, 1390, 2671, 1172, 1375, 2663, 
         1157, 1360, 2649, 1142, 1345, 2637, 1127, 1330, 2627, 1112, 1315, 
         2619, 1097, 1300, 2613, 1082, 1285, 2609, 1062, 1270, 2608, 1493}], 
        Line3DBox[{1263, 1466, 2707, 1248, 1451, 2696, 1233, 1436, 2687, 1218,
          1421, 2680, 1203, 1406, 2675, 1188, 1391, 1173, 2761, 1376, 2664, 
         1158, 1361, 2650, 1143, 1346, 2638, 1128, 1331, 2628, 1113, 1316, 
         2620, 1098, 1301, 2614, 1083, 1286, 2610, 1063, 2817, 1271, 1485}], 
        Line3DBox[{1508, 2816, 1061, 1284, 2722, 1081, 1299, 2732, 1096, 1314,
          2740, 1111, 1329, 2746, 1126, 1344, 2750, 1141, 1359, 2752, 1156, 
         1374, 2760, 1171, 1389, 2773, 1186, 1404, 2784, 1201, 1419, 2793, 
         1216, 1434, 2800, 1231, 1449, 2805, 1246, 1464, 2808, 
         1261}]}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
GkDLOy6Qv+B+9aJ7+dsUPTookYvUv7/uRJkCG3yzcI77v3j8P47W+R+O/o+X
rf6Hl//j4gP/w8X/8W/V//Av9n9w7t/2/z+f7v8fPv2PQ8v/cej+fxz6H2/a
/Q9v/seVfP/Dlf/xo/X/8ON/nLj9fzjxPx5U+R8evCj4m76eS7mh001lPZfS
1UMu4f+XS3nDoHtymgrF13xLP+wcRMeq5WdcJYmQv2Apy6dEg3Ly6M2We/3I
X913I+B8IfvTkyU/ngZCz4IVKpJ7UXSLWgcF55H5eNE93j9p8N2x3yp/sRvp
5O+cjsZ1uM3a5vnxMh0e/P2qMaPShVblvFRf49x3M6d2rX2BDpafZKcbl1qQ
jUi97KAoEZj7DRW7D2GAvPNbChcaUeangxtVcR7RGx7VclLBIFCO84L69nq0
676/oe8aAdSdOi/LmWOgH933MFCpBv3qDGfbOIb7Frf5mpR3GFxmd2nenFSJ
2plOPeMuI8AqS1mfBL5Hcq79EJoWKkebQP30JXyPBPGai63nRt4U17y2nhsZ
RhDTWc+NFKSntFzbSodnahqb1fy7kd8jyt1d+PcK5s7e3adCh+X4zq+xbF2I
+8pjjxMaRHitLeQq7EGHjGv2XMcDO5Cw1YY9ZTgv9+rXJxmX0oEx1HefM187
GjZJUf2N3/utXUWBPvjeXDD+fE3oWS3SpJ0fXaTivBPie9rJEYPi7+6BuozV
KFc/eDqrFb/HGOlSSXw/Br0a26OcWYE8CRx/m7MJIKNu+flEEgb3a/1nLO2/
olihARTvi/uTGy9k8nEfu+9+OoNSXQlidXjk4IDvwZG25P3rOY0xTb+JIfYd
iF1lamA9p7FCtz3WrIQOpYUTvl5H29GhGo9cBVkiZArU8pPJdJh0qNl+I68V
Cf9U+8oiQYRdK2VlxJ0YXK0Q71gQaUY7mWcfRB0iws6U3/d3RmCgoLnl1pfe
clRdaZln8IkAHNZ51hI493WZb2N4VozQ7UW1w4GuBDh3SPtJeBHut6+le8qu
FSOZaW42YX0CvHhkSfOqxiDlR899F4fPqJAPnusAAdLrnbXXcw47ZWz+nA5p
Rvzu7lzrOYfa6t1vho9joM3461HT7UYkHhrPR8D7PcHMI9FXGfdRGaLj5AP1
6FWZePeevwR4e6bQlqcEgx5T69t/lItRsEh9aOk9vI86E8SqajDYteXo6gjH
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
VSMLQ+RCLB+hYulXw/B5mf2gNr2+d+z3R+S4qUY9MaOBT22A5ifajxrblxLW
rDLege81f+wnGsoDB/2WuvTBTTJUUvBXPpYt/ZRZKDsEzW+KN6bqerHq27be
KPFCmLTXW8zy9HtcMzn7hHvxKSBi67nzRXiQberqlUmGuE+Ar9AxMjRszF0u
mqYjs3iD5MI1FBRYczuXs57rvDq1LXJXMmBW7CT69RYF22X25715MIjlqiaE
/btMcFkGnBLqosDh1MKFKisGod7Jz+lDz0Kd6dxDBuqs9ei+dY1BwAAsxT/e
uWuUg0pNrzCdKCq6Rl2mb/DN9uU//XnSkgvRX2vIUldoyNw7Tn8w3YeitsxN
PJvyEcx1TEK+mYY7jAefo6z68HuY21p9YwG41TiPqSoNIf1clMLR/F5ocDcs
WKZSyMp77uLBb4ZgXDhjpMrfi9OJ1xhqjkUoPFm62HFmCELxzzOmTvVAWkgv
7E75JzgGDp0rMR+Gttjr68f0usGb9ynMRqcYdmnCCWtWf8BXoXG/OWNMon/9
IeOeH4/h0Wzwe97SBExuGXwkNcokNh/qGisceIKdojrpw0JJcJlJLpvDZBIO
i4c2+1KeorupxfG2fjLKWuzlL4wwCbsnDgL0uZ4oqPVc5hZBguaWE7FmNCYx
92rxyw55L3wfd9nEK56K9OjDd94PMoltC2yukx97YyQ+xvbA3mxIN29p86hn
EuaHA/XPHPNF4BjmhRXngkTy2fqqnEnc2HMCvbZ+yM/3PTCeQKBmq8syC4JJ
vHTYcd3V1x/zJXmlNN0LsKdcsWNRMpNo1zx4au7gCzwQ16+O9i+Ex++FyyWj
WDr2+kXNLGYAyG/Flhs5f8KJwHUPF/gziY6H1dd5DgWh5rR04Sj1M3JJAlVP
3JmE3HpZT0Wrl5A2mMhTu1mCfNtbDzSvMAlG3eoK9WevkKOhl/5jRxlW6XLr
vDzGJKYFasL6aoPRtHXhMVehL2j+edikRJ11/hPpArvl3mD17qBHTj/qEJpj
lBn1hEHcPvehutI4HJwe/aNe/A3oDYvfzjjKIPjbLw6tl3+HiAgn5jx6I5yX
fQ3VW8QgrG8Fy61wfI8zKw9Nnj7VAFPjFbw79RlElY/v+mHTd6h5fF7gIKkR
B8d3ygrzMYifWu7n9OTeY5rSviJEpBmHrsUcN6ymEwufLbVaLRaBOxnXfPli
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
FRvXOiJWNrQ8mZUfb0gUD1eXMxCn/n79/o81hHHG3Lf3VVLQabGvcrYvOdPE
eoiXVBFhTa6XZ/uSS9h8V8pffFe7hxKm6bdZ8RJwaK4600JYb6D/NjD8L6dU
/y9OaYDdXeujIkzsWMxkvNCoIAzj5Hb2CrF0dZ5Nz9RmBtQoQaM/qhuIV6YK
dBpLp62QGfNxOsaAYZqzMHd4PfH47JuYXqP/8jm9/uJzNixePqXAyndhyaFq
qlklxOZdNFIhK98xds373H2ZCRk57u9VZZ8JtfzfpwdYz6fhn8JX42EM+J5/
9sinq5Y4p7/wx2uWrq6q2bGkq4SBkdLy3Iq6GqLUp8ayDCks/R3dRRpiYEJ2
4WLjoGrCKmA8u50Vx/9wLAfYHEtuNsfyrmew79NZPp7w86MjGz4RR+s2Pbry
mQTzC3dWCPizdMXMr7zdtwuJYPoO7+R4ls5prtv8IZyJjmeej0t78okjN+xz
P/mz8l3H7fKU7wxU3r8y8maoihiaLJivui0FHLSoo3dYOlzfStj29vJKgqfN
2usLq44wVu+Xb5ZmQm3a9ekP1S/EhFPNp1zeFPBcNH/ZrcnElHKReeKdMkJC
34VDal7KP3xI/v/wIeV8LKfeMqHxwSp/v14BsdwgYo/8axLICkqth+JYesxB
vf5kKkGU/xbYaONOgoKXkuWmdCaUWgrjPOm5hLb3ntwsexKyOZfLvieY2HXB
TTJGM5swihM5r3OYBB6Tt7cEtzMxt5nIb/tWTiw605r2bkUKelP38ipqM3GF
arbi8aEyYlSi2mAORwqWc6r/vMiKb4RJtl5YagnRfz+1WoylN+bILdhYe4GJ
r78Hf/hvKCZ27LwbJdJNwuWCt4tuujBRZrztbGXYJ8JmG3nfwor/chqPsjmN
wmxO4+HY3K8CJCYYZ6T9Sn9/JJ7Yqj4cv0pChlBS9bUcJrg1RgyEb+QQDieX
8T4+QcIZ3SwzUhETAm8euDRxZxFP23SO3NEiYUechU5/ORNcHasPmWanE9R2
gdIuGZYOSWhPW1fL0lf2IgYTbqnE6e2yCvl8pP/ro0X81UfL6t7/S4p1X/PK
Q7ondhYTomEbCjV6SEgObXvVfYeJGg1uFanST8Sbp3v2OlaRIF7K6SL2lFUv
/ErKDrYtIkZO9/nms3Q10cOntiiIiZKurEw/nkKiU2bPI6VoEvgmfjyIfsfE
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
      "]], Axes -> True, 
    AxesLabel -> {
      FormBox["\"Active Mortality Rate\"", TraditionalForm], 
      FormBox["\"Dormant Mortality Rate\"", TraditionalForm], 
      FormBox["\"A* or P*\"", TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, 
    DisplayFunction -> Identity, FaceGridsStyle -> Automatic, 
    ImageSize -> {346.49641625558195`, 154.9154698258344}, ImageSizeRaw -> 
    Automatic, Method -> {"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
    PlotRange -> {{0, 1}, {0, 1}, {0., 48.76783429336128}}, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02], 
      Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, 
    ViewPoint -> {
     3.307379020263064, -0.49941110416308315`, -0.5116957742275742}, 
    ViewVertical -> {0., 0., 1.}],FormBox[
    FormBox[
     TemplateBox[{"\"A*\"", "\"D*\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], Lighting -> Automatic, 
                    RGBColor[1, 0, 0]]}, Lighting -> Automatic, 
                    ImageSize -> {12, 12}, BoxStyle -> Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], Lighting -> Automatic, 
                    RGBColor[0, 0, 1]]}, Lighting -> Automatic, 
                    ImageSize -> {12, 12}, BoxStyle -> Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Lighting", "\[Rule]", "Automatic"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Lighting", "\[Rule]", "Automatic"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.659109217872879*^9, 3.659109249377349*^9}, 
   3.65910932443836*^9, 3.659109360232584*^9, 3.6591093931708193`*^9, {
   3.659109457313305*^9, 3.659109474182179*^9}, 3.659109597132131*^9, 
   3.6591096567407913`*^9, 3.6591102586903543`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"zngi1", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"dAdt", "\[Equal]", "0"}], ",", "D"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.657907764035203*^9, 3.657907809785692*^9}, {
   3.657908138861299*^9, 3.657908148779326*^9}, {3.6579201544684553`*^9, 
   3.6579201639625883`*^9}, {3.657920226605488*^9, 3.6579202596785717`*^9}, {
   3.659103270762991*^9, 3.659103272825306*^9}, 3.6591213342139378`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"zngi2", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"dDdt", "\[Equal]", "0"}], ",", "D"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.657920166911723*^9, 3.657920172274284*^9}, {
   3.657920228789146*^9, 3.657920262188489*^9}, {3.659103275857616*^9, 
   3.659103277737185*^9}, 3.6591213370371532`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Iso", "=", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"zngi1", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "/.", "Parms"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"zngi2", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "/.", "Parms"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"A", ",", "0", ",", "Amax"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<A\>\"", ",", "\"\<D\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Gray", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "Amax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "Dmax"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Active ZNGI\>\"", ",", "\"\<Dormant ZNGI\>\""}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vec", "=", 
   RowBox[{"VectorPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dAdt", "/.", "Parms"}], ",", 
       RowBox[{"dDdt", "/.", "Parms"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"A", ",", "0", ",", "Amax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"D", ",", "0", ",", "Dmax"}], "}"}], ",", 
     RowBox[{"VectorPoints", "\[Rule]", "10"}], ",", 
     RowBox[{"VectorScale", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{".02", ",", 
        RowBox[{"Scaled", "[", ".5", "]"}], ",", "None"}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"NC", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"Iso", ",", "Vec", ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.025", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Equil", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}], "/.", "Parms"}],
           ",", 
          RowBox[{
           RowBox[{"Equil", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2", ",", "2"}], "]"}], "]"}], "/.", 
           "Parms"}]}], "}"}], "]"}]}], "}"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.657920174793996*^9, 3.6579202151227293`*^9}, {
  3.657920273833761*^9, 3.657920490450385*^9}, {3.659101483892919*^9, 
  3.659101529413805*^9}, {3.659101767730575*^9, 3.6591017700493793`*^9}, {
  3.659102560065691*^9, 3.65910259114398*^9}, {3.659102654772477*^9, 
  3.65910265712284*^9}, {3.659102740991631*^9, 3.659102765797379*^9}, {
  3.659103310668755*^9, 3.659103348826125*^9}, {3.6591206450515547`*^9, 
  3.6591206494749193`*^9}, {3.65912139794738*^9, 3.659121409273761*^9}, {
  3.659121619603937*^9, 3.659121620403812*^9}, {3.659121724355054*^9, 
  3.659121725338851*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwtk3tQ0wUAx+euEBjieCoJhOKOt7CNjcEYvy+jMQbyGI/2M4UEQUgqKySv
JQ4E1Ml1CQcdiIAyH4EXyElHQiZTxBBhgOIMUF5BKYgxHiPlkXV97z73+ePz
93dr0sHoFCqFQuG/4V93VPWr06I2gvLfdkGRfqZ0kEEH7S0573k7iQgLbUEg
kw6xy4TV+lskbFssFJf96ViJ693lfINEs/E3KRkxdLj0eE0dvkZisUbBouXQ
IZ1PsAo9R+LjP5Pv+w3RQf3c9O8GOQkyxZNypsgM2tHcNCmLBPPDtlRyzRz5
1gVjzldk0LC1n5zotAJfSsX1G+/D7d5R7+LUzTCgcP84pI+DRtFkv8zfgmpL
VWE+Mw5MfV5H4IgdygX7FXZ5sbh5uaL/LN8By0UVWYujMVDuCySDVVtBe+mx
6SovBqxsz5anum1wyk88UloVDYX7ZP2FhO0Qpy949qxIIZSYtd6+zcAp3lxZ
fJIUv7cfv9pLdwK1kat6/CAKrg/bWBvkzjDnGZrI+VGIFIaX+HS6YDer/IOV
+EhsRqXyW54bCrTuvzZ7RUBWt68MVe44zddUNNDCkZmVoRx54QHVyljjgeUw
+AyF0epIT4zuzrwrehyK6fAm7o9xXnghIHMcOiRYmji2cPO1Fw7UPhOrWkPw
6A4ra7SeiR7rUc3bKjEcH63PfCVjYab4ZHVJWTCEO9QcV1M2IpSDawtyEc7+
4p1noGYjQ6TPPZH0HvYruoQDqd7I1SWWt8QHgXoy9F6bLQeWdldSa4OE2KCe
Vl+6w0HnJCeAIghEDEsi5qRzoR8oNjb1B9KnlCUD9j6oLo8IKQsLwNzDlzGH
233QN3/OIVrkj3ADv0HXIzxs7HXc8qmlH6zTavr6Gb74KlxbkGPEwzvUBzKP
+77oY5h/dsqIi7/GRy6WZ/uha6qxcPYpG5xFi+R1LnwEXYtd1f/GxM4ot6ms
YT5anxQ33Yr1ROXY8tqlIn+YaY9t2kFzw96Lc3l3fQUQmGtMo0ycMF/f3bc6
I0DvF5JU35+2Qf+8+7RHaQAKO68z2PF24CQohwwDCDBmV/wdD1lBZOM8+2qW
wFBK/zypNkISddFPtxN4srSnTpM/R+Svq7T9KAIwTmwsMdDriO8pwavDkcC4
oX5ckKYjZlZL1F3RwMh3XY0/hM4S8teckBoSqKvbI9n+7gxROJ8ZtzcZcE+r
lQyxJojWyYWD3V8DNkE6mb22mRifqJCKsoBpPBPLphoIgwkR++ejb/qXJsPu
a+eJJRu9jJuN//9JofwDvnShOA==
         "]], 
        LineBox[{{0.4940980662810512, 0.}, {0.4941460784184271, 100.}}]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         GrayLevel[0.5], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{{}}, {{
        Hue[0.67, 0.6, 0.6], 
        Directive[
         RGBColor[0.2947336, 0.4054232, 0.5678384000000001]], {{
          Arrowheads[{{0., 1.}}], {}}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{-0.7330385482121421, 11.868584277596991`}, {
           0.7330385482121421, 10.35363794462523}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{-0.7330385482121421, 22.9796953887081}, {
           0.7330385482121421, 21.46474905573634}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{-0.7330385482121422, 34.09080649981921}, {
           0.7330385482121422, 32.57586016684745}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{-0.7330385482121421, 45.20191761093032}, {
           0.7330385482121421, 43.68697127795856}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{-0.7330385482121421, 56.31302872204144}, {
           0.7330385482121421, 54.79808238906968}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{-0.7330385482121422, 67.42413983315255}, {
           0.7330385482121422, 65.90919350018079}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{-0.7330385482121422, 78.53525094426367}, {
           0.7330385482121422, 77.0203046112919}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{-0.7330385482121421, 89.64636205537478}, {
           0.7330385482121421, 88.13141572240302}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          
          ArrowBox[{{2.649611358789431, -0.000662951160323442}, {
           4.757796048617977, 0.000662951160323442}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{2.649787434281154, 11.130388251914814`}, {
           4.757619973126254, 11.091833970307407`}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{2.650562379621397, 22.266993447593837`}, {
           4.756845027786012, 22.177450996850606`}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{2.6525340477348234`, 33.41177736103063}, {
           4.754873359672585, 33.25488930563603}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{2.6570257365701053`, 44.56924966960825}, {
           4.750381670837303, 44.31963921928064}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{2.66727644569736, 55.747726442977566`}, {
           4.740130961710048, 55.36338466813355}}]}, {
          Arrowheads[{{0.014409397720885678`, 1.}}], 
          
          ArrowBox[{{2.6923493388567463`, 66.96377516505761}, {
           4.715058068550662, 66.36955816827573}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          
          ArrowBox[{{2.7622143966087136`, 78.25181258212965}, {
           4.645193010798695, 77.30374297342593}}]}, {
          Arrowheads[{{0.014409397720885696`, 1.}}], 
          
          ArrowBox[{{2.9881935509188393`, 89.66294078144708}, {
           4.419213856488569, 88.11483699633072}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{6.353315946724568, -0.001517770281760749}, {
           8.46149886809025, 0.001517770281760749}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{6.35335862662213, 11.120717298501539`}, {
           8.461456188192686, 11.101504923720684`}}]}, {
          Arrowheads[{{0.014409397720885656`, 1.}}], 
          
          ArrowBox[{{6.35360753043834, 22.24706030610739}, {8.461207284376476,
            22.197384138337053`}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{6.354360997165621, 33.38028404140037}, {
           8.460453817649196, 33.28638262526629}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{6.356501492949125, 44.52634603214401}, {
           8.458313321865692, 44.36254285674488}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{6.363350011141067, 55.70065987807098}, {8.45146480367375,
            55.410451233040135`}}]}, {
          Arrowheads[{{0.014409397720885654`, 1.}}], 
          
          ArrowBox[{{6.39414781677724, 66.95721117807085}, {8.420666998037577,
            66.3761221552625}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          ArrowBox[{{6.718748028105269, 78.5758124702632}, {8.096066786709548,
            76.97974308529236}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{8.184959277860695, 89.60059402436686}, {6.62985553695412,
            88.17718375341093}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{10.057021918627147`, -0.0026618413951615297`}, {
           12.165200303595077`, 0.0026618413951615297`}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{10.057033481286908`, 11.116720158739694`}, {
           12.165188740935315`, 11.105502063482529`}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{10.05716932992518, 22.240050093147754`}, {
           12.165052892297043`, 22.20439435129669}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{10.057692802029118`, 33.371029184589695`}, {
           12.164529420193109`, 33.29563748207696}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{10.05973302092955, 44.52004353569083}, {
           12.162489201292676`, 44.368845353198054`}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{10.071732608963382`, 55.73106464473401}, {
           12.150489613258843`, 55.3800464663771}}]}, {
          Arrowheads[{{0.014409397720885684`, 1.}}], 
          
          ArrowBox[{{10.468419538378033`, 67.50216571121967}, {
           11.753802683844194`, 65.83116762211365}}]}, {
          Arrowheads[{{0.014409397720885654`, 1.}}], 
          
          ArrowBox[{{12.105027835986846`, 78.12883426201275}, {
           10.11719438623538, 77.42672129354284}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{12.148134240955228`, 89.07781781541797}, {
           10.074087981266999`, 88.69995996235983}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{13.760730917661135`, -0.004271869897279355}, {
           15.868898711968498`, 0.004271869897279355}}]}, {
          Arrowheads[{{0.014409397720885678`, 1.}}], 
          
          ArrowBox[{{13.760725532635366`, 11.113737192892636`}, {
           15.868904096994267`, 11.108485029329584`}}]}, {
          Arrowheads[{{0.014409397720885656`, 1.}}], 
          
          ArrowBox[{{13.760815243071518`, 22.23622271778673}, {
           15.868814386558116`, 22.20822172665771}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{13.761347078403718`, 33.36962161590482}, {
           15.868282551225915`, 33.29704505076184}}]}, {
          Arrowheads[{{0.014409397720885656`, 1.}}], 
          
          ArrowBox[{{13.765423403416207`, 44.54388677342936}, {
           15.864206226213426`, 44.34500211545952}}]}, {
          Arrowheads[{{0.014409397720885684`, 1.}}], 
          
          ArrowBox[{{14.266742609934429`, 56.45595989214477}, {
           15.362887019695204`, 54.65515121896634}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{15.852517732897892`, 66.85182542263836}, {
           13.777111896731743`, 66.48150791069499}}]}, {
          Arrowheads[{{0.014409397720885678`, 1.}}], 
          
          ArrowBox[{{15.863521781697468`, 77.88419586234475}, {
           13.766107847932165`, 77.67135969321082}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{15.865776300520562`, 88.97007427349898}, {
           13.763853329109072`, 88.80770350427883}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{17.464447292164255`, -0.0067052876994545966`}, {
           19.57258974487278, 0.0067052876994545966`}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{17.464426231848375`, 11.110361248712056`}, {
           19.572610805188663`, 11.111860973510165`}}]}, {
          Arrowheads[{{0.01440939772088569, 1.}}], 
          
          ArrowBox[{{17.46448447713143, 22.233328558625896`}, {
           19.57255255990561, 22.21111588581855}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          
          ArrowBox[{{17.46543909814225, 33.379537721556666`}, {
           19.57159793889479, 33.28712894510999}}]}, {
          Arrowheads[{{0.014409397720885654`, 1.}}], 
          
          ArrowBox[{{18.243496258003418`, 45.46202680835032}, {
           18.793540779033624`, 43.42686208053857}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{19.568059802860077`, 55.65340341487698}, {
           17.46897723417696, 55.45770769623413}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          
          ArrowBox[{{19.57084267451805, 66.72769929573496}, {
           17.46619436251899, 66.60563403759838}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{19.571478231438267`, 77.82663424182375}, {
           17.46555880559877, 77.72892131373182}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{19.57174224630446, 88.93167779328945}, {
           17.465294790732578`, 88.84609998448836}}]}, {
          Arrowheads[{{0.014409397720885678`, 1.}}], 
          
          ArrowBox[{{21.168185106539404`, -0.01081063708392632}, {
           23.27625933790504, 0.01081063708392632}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{21.168148952539145`, 11.104735120934135`}, {
           23.2762954919053, 11.117487101288088`}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{21.168153830008528`, 22.229359143627835`}, {
           23.276290614435915`, 22.215085300816607`}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{22.9312816052414, 34.11329865465446}, {21.51316283920304,
            32.5533680120122}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{23.27535126221641, 44.489503696901906`}, {
           21.16909318222803, 44.39938519198698}}]}, {
          Arrowheads[{{0.014409397720885654`, 1.}}], 
          
          ArrowBox[{{23.275814582795185`, 55.588024754088934`}, {
           21.168629861649258`, 55.52308635702217}}]}, {
          Arrowheads[{{0.014409397720885678`, 1.}}], 
          
          ArrowBox[{{23.27593734527617, 66.69487217248579}, {
           21.16850709916827, 66.63846116084754}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{23.275992565356198`, 77.80383876475852}, {
           21.16845187908824, 77.75171679079706}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{23.27602369686589, 88.91365909579035}, {
           21.168420747578555`, 88.86411868198745}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{24.87200846770376, -0.019212036998841515`}, {
           26.97984338414809, 0.019212036998841515`}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          
          ArrowBox[{{24.872076534479056`, 11.088471074490577`}, {
           26.97977531737279, 11.133751147731644`}}]}, {
          Arrowheads[{{0.014409397720885656`, 1.}}], 
          
          ArrowBox[{{26.974787218471846`, 22.117336092967626`}, {
           24.877064633380005`, 22.327108351476813`}}]}, {
          Arrowheads[{{0.014409397720885656`, 1.}}], 
          
          ArrowBox[{{26.979971562593995`, 33.34327852976745}, {
           24.871880289257856`, 33.3233881368992}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{26.97993981716167, 44.457321874047814`}, {
           24.871912034690176`, 44.431567014841065`}}]}, {
          Arrowheads[{{0.014409397720885654`, 1.}}], 
          
          ArrowBox[{{26.979926983455623`, 55.56944374612842}, {
           24.871924868396228`, 55.54166736498269}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          
          ArrowBox[{{26.979920114371783`, 66.68106673032855}, {
           24.871931737480065`, 66.65226660300478}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          
          ArrowBox[{{26.979915844137366`, 77.79248707482913}, {
           24.871936007714478`, 77.76306848072643}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{26.979912934355408`, 88.90380522801682}, {
           24.87193891749644, 88.87397254976099}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{28.576542859983185`, -0.046036580093833386`}, {
           30.682716399276067`, 0.046036580093833386`}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{30.615982226264173`, 10.739332055456547`}, {
           28.64327703299508, 11.482890166765674`}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{30.683615145026636`, 22.207200756101724`}, {
           28.575644114232613`, 22.237243688342723`}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{30.68372127665588, 33.33195102345769}, {
           28.575537982603375`, 33.334715643208966`}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{30.683716752741233`, 44.44782793397542}, {
           28.57554250651802, 44.44106095491347}}]}, {
          Arrowheads[{{0.014409397720885656`, 1.}}], 
          
          ArrowBox[{{30.683706173106415`, 55.561365168549415`}, {
           28.57555308615284, 55.5497459425617}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{30.683697047524827`, 66.67394606518965}, {
           28.575562211734425`, 66.65938726814367}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{30.683689778556925`, 77.78604297919549}, {
           28.57556948070233, 77.76951257636007}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{30.683683996969723`, 88.89786116855367}, {
           28.575575262289533`, 88.87991660922414}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{34.27614237491539, -0.47140452079104}, {
           32.39052429175127, 0.47140452079104}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{34.38688847491654, 11.077455877421647`}, {
           32.27977819175012, 11.144766344800574`}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{34.387355045384076`, 22.210001680633226`}, {
           32.27931162128259, 22.234442763811213`}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{34.387415628618875`, 33.328682970265895`}, {
           32.279251038047775`, 33.33798369640077}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          
          ArrowBox[{{34.387425597534275`, 44.44366363535985}, {
           32.279241069132375`, 44.44522525352903}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{34.38742471961899, 55.55712414392801}, {
           32.279241947047666`, 55.55398696718311}}]}, {
          Arrowheads[{{0.014409397720885684`, 1.}}], 
          
          ArrowBox[{{34.38742119041845, 66.66981319758334}, {
           32.27924547624821, 66.66352013574999}}]}, {
          Arrowheads[{{0.01440939772088568, 1.}}], 
          
          ArrowBox[{{34.38741719994171, 77.78205717809094}, {
           32.27924946672495, 77.77349837746463}}]}, {
          Arrowheads[{{0.014409397720885647`, 1.}}], 
          
          ArrowBox[{{34.387413392616104`, 88.89402111389664}, {
           32.279253274050554`, 88.88375666388116}}]}}}}}, {
      PointSize[0.025], 
      PointBox[{25.104789809954017`, 24.169584771073293`}]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"A\"", TraditionalForm], 
       FormBox["\"D\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 18}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 33.333333333333336`}, {0, 100.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Active ZNGI\"", "\"Dormant ZNGI\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6591214059016848`*^9, 3.659121410264181*^9}, 
   3.659121496719459*^9, 3.65912162129949*^9, 3.659121727544179*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dAnum", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "'"}], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"d", "[", "t", "]"}], "*", "\[Alpha]", "*", 
      SubscriptBox["\[Gamma]", "m"]}], "-", 
     RowBox[{
      RowBox[{"a", "[", "t", "]"}], "*", " ", 
      SubscriptBox["m", "a"], " ", "*", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"a", "[", "t", "]"}], "*", " ", "r", " ", "*", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         RowBox[{"a", "[", "t", "]"}], "*", 
         SubscriptBox["\[Gamma]", "g"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", "[", "t", "]"}], "+", 
           RowBox[{"d", "[", "t", "]"}]}], ")"}], "*", 
         SubscriptBox["\[Gamma]", "m"]}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"a", "[", "t", "]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", "t", "]"}], "*", 
         SubscriptBox["\[Gamma]", "g"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", "[", "t", "]"}], "+", 
           RowBox[{"d", "[", "t", "]"}]}], ")"}], "*", 
         SubscriptBox["\[Gamma]", "m"]}]}], ")"}], "*", " ", 
      SubscriptBox["\[Delta]", "max"]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDnum", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"d", "'"}], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"d", "[", "t", "]"}]}], "*", "\[Alpha]", "*", 
      SubscriptBox["\[Gamma]", "m"]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "t", "]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", "t", "]"}], "*", 
         SubscriptBox["\[Gamma]", "g"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", "[", "t", "]"}], "+", 
           RowBox[{"d", "[", "t", "]"}]}], ")"}], "*", 
         SubscriptBox["\[Gamma]", "m"]}]}], ")"}], "*", " ", 
      SubscriptBox["\[Delta]", "max"]}], "-", 
     RowBox[{
      SubscriptBox["m", "d"], "*", 
      RowBox[{"d", "[", "t", "]"}], "*", 
      SubscriptBox["\[Gamma]", "m"]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.659104371879609*^9, 3.659104385810492*^9}, {
  3.659104418435935*^9, 3.659104477863984*^9}, {3.659104507903338*^9, 
  3.6591045646823483`*^9}, {3.659104614138699*^9, 3.659104848935409*^9}, {
  3.659104909639073*^9, 3.65910493637429*^9}, {3.659105230410824*^9, 
  3.659105256456965*^9}, {3.659105597141673*^9, 3.659105625351945*^9}, {
  3.659121301384747*^9, 3.659121303181984*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ADsolve1", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dAnum", "/.", "Parms"}], ",", 
       RowBox[{"dDnum", "/.", "Parms"}], ",", 
       RowBox[{
        RowBox[{"d", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"a", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", "t", "]"}], ",", 
       RowBox[{"d", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlotADTime1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "[", "t", "]"}], ",", 
         RowBox[{"d", "[", "t", "]"}]}], "}"}], "/.", "ADsolve1"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", "Solid"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Gray", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Active\>\"", ",", "\"\<Dormant\>\""}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotADTimePS1", " ", "=", " ", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "[", "t", "]"}], ",", 
         RowBox[{"d", "[", "t", "]"}]}], "}"}], "/.", "ADsolve1"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10000"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "Amax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "Dmax"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<A\>\"", ",", "\"\<D\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ADsolve2", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dAnum", "/.", "Parms"}], ",", 
       RowBox[{"dDnum", "/.", "Parms"}], ",", 
       RowBox[{
        RowBox[{"d", "[", "0", "]"}], "\[Equal]", "100"}], ",", 
       RowBox[{
        RowBox[{"a", "[", "0", "]"}], "\[Equal]", "30"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", "t", "]"}], ",", 
       RowBox[{"d", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlotADTime2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "[", "t", "]"}], ",", 
         RowBox[{"d", "[", "t", "]"}]}], "}"}], "/.", "ADsolve2"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", "Solid"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Gray", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Active\>\"", ",", "\"\<Dormant\>\""}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotADTimePS2", " ", "=", " ", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "[", "t", "]"}], ",", 
         RowBox[{"d", "[", "t", "]"}]}], "}"}], "/.", "ADsolve2"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10000"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "Amax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "Dmax"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<A\>\"", ",", "\"\<D\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"NC", ",", "PlotADTimePS1", ",", "PlotADTimePS2"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.6591048620987062`*^9, 3.659104877975013*^9}, {
   3.6591049552934313`*^9, 3.659105071974742*^9}, 3.659105214800384*^9, {
   3.6591053402477503`*^9, 3.6591053782465982`*^9}, {3.659105464581853*^9, 
   3.659105542512706*^9}, {3.659105642161766*^9, 3.659105642815034*^9}, {
   3.659107049238761*^9, 3.6591070759960318`*^9}, {3.65912099764074*^9, 
   3.659121000258185*^9}, {3.659121049611861*^9, 3.6591211180250893`*^9}, {
   3.659121213374811*^9, 3.6591212832187853`*^9}, {3.659121454062543*^9, 
   3.659121454942854*^9}, {3.6591214849815693`*^9, 3.659121486020832*^9}, {
   3.6591215165490103`*^9, 3.659121557378134*^9}, {3.659121610462058*^9, 
   3.6591216154045353`*^9}, {3.65912173259514*^9, 3.659121739978743*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwtk3tQ0wUAx+euEBjieCoJhOKOt7CNjcEYvy+jMQbyGI/2M4UEQUgqKySv
JQ4E1Ml1CQcdiIAyH4EXyElHQiZTxBBhgOIMUF5BKYgxHiPlkXV97z73+ePz
93dr0sHoFCqFQuG/4V93VPWr06I2gvLfdkGRfqZ0kEEH7S0573k7iQgLbUEg
kw6xy4TV+lskbFssFJf96ViJ693lfINEs/E3KRkxdLj0eE0dvkZisUbBouXQ
IZ1PsAo9R+LjP5Pv+w3RQf3c9O8GOQkyxZNypsgM2tHcNCmLBPPDtlRyzRz5
1gVjzldk0LC1n5zotAJfSsX1G+/D7d5R7+LUzTCgcP84pI+DRtFkv8zfgmpL
VWE+Mw5MfV5H4IgdygX7FXZ5sbh5uaL/LN8By0UVWYujMVDuCySDVVtBe+mx
6SovBqxsz5anum1wyk88UloVDYX7ZP2FhO0Qpy949qxIIZSYtd6+zcAp3lxZ
fJIUv7cfv9pLdwK1kat6/CAKrg/bWBvkzjDnGZrI+VGIFIaX+HS6YDer/IOV
+EhsRqXyW54bCrTuvzZ7RUBWt68MVe44zddUNNDCkZmVoRx54QHVyljjgeUw
+AyF0epIT4zuzrwrehyK6fAm7o9xXnghIHMcOiRYmji2cPO1Fw7UPhOrWkPw
6A4ra7SeiR7rUc3bKjEcH63PfCVjYab4ZHVJWTCEO9QcV1M2IpSDawtyEc7+
4p1noGYjQ6TPPZH0HvYruoQDqd7I1SWWt8QHgXoy9F6bLQeWdldSa4OE2KCe
Vl+6w0HnJCeAIghEDEsi5qRzoR8oNjb1B9KnlCUD9j6oLo8IKQsLwNzDlzGH
233QN3/OIVrkj3ADv0HXIzxs7HXc8qmlH6zTavr6Gb74KlxbkGPEwzvUBzKP
+77oY5h/dsqIi7/GRy6WZ/uha6qxcPYpG5xFi+R1LnwEXYtd1f/GxM4ot6ms
YT5anxQ33Yr1ROXY8tqlIn+YaY9t2kFzw96Lc3l3fQUQmGtMo0ycMF/f3bc6
I0DvF5JU35+2Qf+8+7RHaQAKO68z2PF24CQohwwDCDBmV/wdD1lBZOM8+2qW
wFBK/zypNkISddFPtxN4srSnTpM/R+Svq7T9KAIwTmwsMdDriO8pwavDkcC4
oX5ckKYjZlZL1F3RwMh3XY0/hM4S8teckBoSqKvbI9n+7gxROJ8ZtzcZcE+r
lQyxJojWyYWD3V8DNkE6mb22mRifqJCKsoBpPBPLphoIgwkR++ejb/qXJsPu
a+eJJRu9jJuN//9JofwDvnShOA==
          "]], 
         LineBox[{{0.4940980662810512, 0.}, {0.4941460784184271, 100.}}]}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0.5], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}}}, {{{}}, {{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          RGBColor[0.2947336, 0.4054232, 0.5678384000000001]], {{
           Arrowheads[{{0., 1.}}], {}}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{-0.7330385482121421, 11.868584277596991`}, {
            0.7330385482121421, 10.35363794462523}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{-0.7330385482121421, 22.9796953887081}, {
            0.7330385482121421, 21.46474905573634}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{-0.7330385482121422, 34.09080649981921}, {
            0.7330385482121422, 32.57586016684745}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{-0.7330385482121421, 45.20191761093032}, {
            0.7330385482121421, 43.68697127795856}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{-0.7330385482121421, 56.31302872204144}, {
            0.7330385482121421, 54.79808238906968}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{-0.7330385482121422, 67.42413983315255}, {
            0.7330385482121422, 65.90919350018079}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{-0.7330385482121422, 78.53525094426367}, {
            0.7330385482121422, 77.0203046112919}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{-0.7330385482121421, 89.64636205537478}, {
            0.7330385482121421, 88.13141572240302}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           
           ArrowBox[{{2.649611358789431, -0.000662951160323442}, {
            4.757796048617977, 0.000662951160323442}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{2.649787434281154, 11.130388251914814`}, {
            4.757619973126254, 11.091833970307407`}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{2.650562379621397, 22.266993447593837`}, {
            4.756845027786012, 22.177450996850606`}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{2.6525340477348234`, 33.41177736103063}, {
            4.754873359672585, 33.25488930563603}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           ArrowBox[{{2.6570257365701053`, 44.56924966960825}, {
            4.750381670837303, 44.31963921928064}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{2.66727644569736, 55.747726442977566`}, {
            4.740130961710048, 55.36338466813355}}]}, {
           Arrowheads[{{0.014409397720885678`, 1.}}], 
           
           ArrowBox[{{2.6923493388567463`, 66.96377516505761}, {
            4.715058068550662, 66.36955816827573}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           
           ArrowBox[{{2.7622143966087136`, 78.25181258212965}, {
            4.645193010798695, 77.30374297342593}}]}, {
           Arrowheads[{{0.014409397720885696`, 1.}}], 
           
           ArrowBox[{{2.9881935509188393`, 89.66294078144708}, {
            4.419213856488569, 88.11483699633072}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{6.353315946724568, -0.001517770281760749}, {
            8.46149886809025, 0.001517770281760749}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{6.35335862662213, 11.120717298501539`}, {
            8.461456188192686, 11.101504923720684`}}]}, {
           Arrowheads[{{0.014409397720885656`, 1.}}], 
           
           ArrowBox[{{6.35360753043834, 22.24706030610739}, {
            8.461207284376476, 22.197384138337053`}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{6.354360997165621, 33.38028404140037}, {
            8.460453817649196, 33.28638262526629}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{6.356501492949125, 44.52634603214401}, {
            8.458313321865692, 44.36254285674488}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{6.363350011141067, 55.70065987807098}, {
            8.45146480367375, 55.410451233040135`}}]}, {
           Arrowheads[{{0.014409397720885654`, 1.}}], 
           
           ArrowBox[{{6.39414781677724, 66.95721117807085}, {
            8.420666998037577, 66.3761221552625}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           
           ArrowBox[{{6.718748028105269, 78.5758124702632}, {
            8.096066786709548, 76.97974308529236}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{8.184959277860695, 89.60059402436686}, {
            6.62985553695412, 88.17718375341093}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{10.057021918627147`, -0.0026618413951615297`}, {
            12.165200303595077`, 0.0026618413951615297`}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{10.057033481286908`, 11.116720158739694`}, {
            12.165188740935315`, 11.105502063482529`}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{10.05716932992518, 22.240050093147754`}, {
            12.165052892297043`, 22.20439435129669}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{10.057692802029118`, 33.371029184589695`}, {
            12.164529420193109`, 33.29563748207696}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{10.05973302092955, 44.52004353569083}, {
            12.162489201292676`, 44.368845353198054`}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{10.071732608963382`, 55.73106464473401}, {
            12.150489613258843`, 55.3800464663771}}]}, {
           Arrowheads[{{0.014409397720885684`, 1.}}], 
           
           ArrowBox[{{10.468419538378033`, 67.50216571121967}, {
            11.753802683844194`, 65.83116762211365}}]}, {
           Arrowheads[{{0.014409397720885654`, 1.}}], 
           
           ArrowBox[{{12.105027835986846`, 78.12883426201275}, {
            10.11719438623538, 77.42672129354284}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{12.148134240955228`, 89.07781781541797}, {
            10.074087981266999`, 88.69995996235983}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           ArrowBox[{{13.760730917661135`, -0.004271869897279355}, {
            15.868898711968498`, 0.004271869897279355}}]}, {
           Arrowheads[{{0.014409397720885678`, 1.}}], 
           
           ArrowBox[{{13.760725532635366`, 11.113737192892636`}, {
            15.868904096994267`, 11.108485029329584`}}]}, {
           Arrowheads[{{0.014409397720885656`, 1.}}], 
           
           ArrowBox[{{13.760815243071518`, 22.23622271778673}, {
            15.868814386558116`, 22.20822172665771}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{13.761347078403718`, 33.36962161590482}, {
            15.868282551225915`, 33.29704505076184}}]}, {
           Arrowheads[{{0.014409397720885656`, 1.}}], 
           
           ArrowBox[{{13.765423403416207`, 44.54388677342936}, {
            15.864206226213426`, 44.34500211545952}}]}, {
           Arrowheads[{{0.014409397720885684`, 1.}}], 
           
           ArrowBox[{{14.266742609934429`, 56.45595989214477}, {
            15.362887019695204`, 54.65515121896634}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{15.852517732897892`, 66.85182542263836}, {
            13.777111896731743`, 66.48150791069499}}]}, {
           Arrowheads[{{0.014409397720885678`, 1.}}], 
           
           ArrowBox[{{15.863521781697468`, 77.88419586234475}, {
            13.766107847932165`, 77.67135969321082}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{15.865776300520562`, 88.97007427349898}, {
            13.763853329109072`, 88.80770350427883}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{17.464447292164255`, -0.0067052876994545966`}, {
            19.57258974487278, 0.0067052876994545966`}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{17.464426231848375`, 11.110361248712056`}, {
            19.572610805188663`, 11.111860973510165`}}]}, {
           Arrowheads[{{0.01440939772088569, 1.}}], 
           
           ArrowBox[{{17.46448447713143, 22.233328558625896`}, {
            19.57255255990561, 22.21111588581855}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           
           ArrowBox[{{17.46543909814225, 33.379537721556666`}, {
            19.57159793889479, 33.28712894510999}}]}, {
           Arrowheads[{{0.014409397720885654`, 1.}}], 
           
           ArrowBox[{{18.243496258003418`, 45.46202680835032}, {
            18.793540779033624`, 43.42686208053857}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{19.568059802860077`, 55.65340341487698}, {
            17.46897723417696, 55.45770769623413}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           
           ArrowBox[{{19.57084267451805, 66.72769929573496}, {
            17.46619436251899, 66.60563403759838}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{19.571478231438267`, 77.82663424182375}, {
            17.46555880559877, 77.72892131373182}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{19.57174224630446, 88.93167779328945}, {
            17.465294790732578`, 88.84609998448836}}]}, {
           Arrowheads[{{0.014409397720885678`, 1.}}], 
           
           ArrowBox[{{21.168185106539404`, -0.01081063708392632}, {
            23.27625933790504, 0.01081063708392632}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{21.168148952539145`, 11.104735120934135`}, {
            23.2762954919053, 11.117487101288088`}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{21.168153830008528`, 22.229359143627835`}, {
            23.276290614435915`, 22.215085300816607`}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{22.9312816052414, 34.11329865465446}, {
            21.51316283920304, 32.5533680120122}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{23.27535126221641, 44.489503696901906`}, {
            21.16909318222803, 44.39938519198698}}]}, {
           Arrowheads[{{0.014409397720885654`, 1.}}], 
           
           ArrowBox[{{23.275814582795185`, 55.588024754088934`}, {
            21.168629861649258`, 55.52308635702217}}]}, {
           Arrowheads[{{0.014409397720885678`, 1.}}], 
           
           ArrowBox[{{23.27593734527617, 66.69487217248579}, {
            21.16850709916827, 66.63846116084754}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{23.275992565356198`, 77.80383876475852}, {
            21.16845187908824, 77.75171679079706}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{23.27602369686589, 88.91365909579035}, {
            21.168420747578555`, 88.86411868198745}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{24.87200846770376, -0.019212036998841515`}, {
            26.97984338414809, 0.019212036998841515`}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           
           ArrowBox[{{24.872076534479056`, 11.088471074490577`}, {
            26.97977531737279, 11.133751147731644`}}]}, {
           Arrowheads[{{0.014409397720885656`, 1.}}], 
           
           ArrowBox[{{26.974787218471846`, 22.117336092967626`}, {
            24.877064633380005`, 22.327108351476813`}}]}, {
           Arrowheads[{{0.014409397720885656`, 1.}}], 
           
           ArrowBox[{{26.979971562593995`, 33.34327852976745}, {
            24.871880289257856`, 33.3233881368992}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{26.97993981716167, 44.457321874047814`}, {
            24.871912034690176`, 44.431567014841065`}}]}, {
           Arrowheads[{{0.014409397720885654`, 1.}}], 
           
           ArrowBox[{{26.979926983455623`, 55.56944374612842}, {
            24.871924868396228`, 55.54166736498269}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           
           ArrowBox[{{26.979920114371783`, 66.68106673032855}, {
            24.871931737480065`, 66.65226660300478}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           ArrowBox[{{26.979915844137366`, 77.79248707482913}, {
            24.871936007714478`, 77.76306848072643}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{26.979912934355408`, 88.90380522801682}, {
            24.87193891749644, 88.87397254976099}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{28.576542859983185`, -0.046036580093833386`}, {
            30.682716399276067`, 0.046036580093833386`}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{30.615982226264173`, 10.739332055456547`}, {
            28.64327703299508, 11.482890166765674`}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{30.683615145026636`, 22.207200756101724`}, {
            28.575644114232613`, 22.237243688342723`}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{30.68372127665588, 33.33195102345769}, {
            28.575537982603375`, 33.334715643208966`}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{30.683716752741233`, 44.44782793397542}, {
            28.57554250651802, 44.44106095491347}}]}, {
           Arrowheads[{{0.014409397720885656`, 1.}}], 
           
           ArrowBox[{{30.683706173106415`, 55.561365168549415`}, {
            28.57555308615284, 55.5497459425617}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{30.683697047524827`, 66.67394606518965}, {
            28.575562211734425`, 66.65938726814367}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{30.683689778556925`, 77.78604297919549}, {
            28.57556948070233, 77.76951257636007}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{30.683683996969723`, 88.89786116855367}, {
            28.575575262289533`, 88.87991660922414}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{34.27614237491539, -0.47140452079104}, {
            32.39052429175127, 0.47140452079104}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{34.38688847491654, 11.077455877421647`}, {
            32.27977819175012, 11.144766344800574`}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{34.387355045384076`, 22.210001680633226`}, {
            32.27931162128259, 22.234442763811213`}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{34.387415628618875`, 33.328682970265895`}, {
            32.279251038047775`, 33.33798369640077}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           
           ArrowBox[{{34.387425597534275`, 44.44366363535985}, {
            32.279241069132375`, 44.44522525352903}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{34.38742471961899, 55.55712414392801}, {
            32.279241947047666`, 55.55398696718311}}]}, {
           Arrowheads[{{0.014409397720885684`, 1.}}], 
           
           ArrowBox[{{34.38742119041845, 66.66981319758334}, {
            32.27924547624821, 66.66352013574999}}]}, {
           Arrowheads[{{0.01440939772088568, 1.}}], 
           
           ArrowBox[{{34.38741719994171, 77.78205717809094}, {
            32.27924946672495, 77.77349837746463}}]}, {
           Arrowheads[{{0.014409397720885647`, 1.}}], 
           
           ArrowBox[{{34.387413392616104`, 88.89402111389664}, {
            32.279253274050554`, 88.88375666388116}}]}}}}}, {
       PointSize[0.025], 
       PointBox[{25.104789809954017`, 24.169584771073293`}]}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
fwCc4swb
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
eVvNlHrGE/9uzwxl/D9XKImc
         "]]}}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"A\"", TraditionalForm], 
       FormBox["\"D\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 18}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 33.333333333333336`}, {0, 100.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Active ZNGI\"", "\"Dormant ZNGI\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.659121517649123*^9, 3.659121559071884*^9}, 
   3.659121624346711*^9, {3.659121734670739*^9, 3.659121740811035*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["No-predator, Implicit Resources, Responsive Resuscitation", "Section",
 CellChangeTimes->{{3.657837788529409*^9, 3.65783780370368*^9}, {
  3.659880880474286*^9, 3.659880903111701*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"R", "=", 
  RowBox[{"1", "-", 
   RowBox[{"A", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
   RowBox[{"D", "*", 
    SubscriptBox["\[Gamma]", "m"]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"dAdt", "=", 
  RowBox[{
   RowBox[{"R", "*", "r", "*", "A", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
   RowBox[{
    SubscriptBox["\[Delta]", "max"], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", "R"}], ")"}], "*", "A", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
   RowBox[{"\[Alpha]", "*", "R", "*", "D", "*", 
    SubscriptBox["\[Gamma]", "m"]}], "-", 
   RowBox[{
    SubscriptBox["m", "a"], "*", "A", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"dDdt", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Delta]", "max"], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", "R"}], ")"}], "*", "A", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
   RowBox[{"\[Alpha]", "*", "R", "*", "D", "*", 
    SubscriptBox["\[Gamma]", "m"]}], "-", 
   RowBox[{
    SubscriptBox["m", "d"], "*", "D", "*", 
    SubscriptBox["\[Gamma]", "m"]}]}]}]}], "Input",
 CellChangeTimes->{{3.6578349951593122`*^9, 3.65783508601048*^9}, {
   3.6578351276085663`*^9, 3.657835142431384*^9}, {3.657835172748931*^9, 
   3.657835173123654*^9}, {3.6578353966518106`*^9, 3.6578354275462*^9}, {
   3.65783797208996*^9, 3.657837999544742*^9}, 3.657838129034318*^9, {
   3.657907191583003*^9, 3.657907201565024*^9}, {3.657907676664372*^9, 
   3.657907683087576*^9}, {3.657908101694631*^9, 3.657908106892516*^9}, {
   3.659097053561223*^9, 3.65909709171319*^9}, {3.659097320194972*^9, 
   3.659097323553306*^9}, {3.659105663087964*^9, 3.659105681398448*^9}, {
   3.659880917564896*^9, 3.659880917948678*^9}, {3.6598809496877317`*^9, 
   3.659880951358572*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"D", " ", 
   SubscriptBox["\[Gamma]", "m"]}], "-", 
  RowBox[{"A", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.65783508851589*^9, 3.6578351438140583`*^9, 3.657835174439577*^9, 
   3.657835433877486*^9, 3.657838002636219*^9, 3.657838130528221*^9, 
   3.6578394641315737`*^9, 3.657907203276125*^9, 3.657907684999604*^9, 
   3.65790810848608*^9, 3.657918953092493*^9, 3.659096949362824*^9, {
   3.6590970720631866`*^9, 3.659097102594997*^9}, 3.6590973302343407`*^9, 
   3.6591021829352293`*^9, 3.659102350780675*^9, 3.6591056826296797`*^9, 
   3.659880960471819*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "A"}], " ", 
   SubscriptBox["m", "a"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
  RowBox[{"D", " ", "\[Alpha]", " ", 
   SubscriptBox["\[Gamma]", "m"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"D", " ", 
      SubscriptBox["\[Gamma]", "m"]}], "-", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{"A", " ", "r", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"D", " ", 
      SubscriptBox["\[Gamma]", "m"]}], "-", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}]}], "-", 
  RowBox[{"A", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"D", " ", 
      SubscriptBox["\[Gamma]", "m"]}], "+", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}], " ", 
   SubscriptBox["\[Delta]", "max"]}]}]], "Output",
 CellChangeTimes->{
  3.65783508851589*^9, 3.6578351438140583`*^9, 3.657835174439577*^9, 
   3.657835433877486*^9, 3.657838002636219*^9, 3.657838130528221*^9, 
   3.6578394641315737`*^9, 3.657907203276125*^9, 3.657907684999604*^9, 
   3.65790810848608*^9, 3.657918953092493*^9, 3.659096949362824*^9, {
   3.6590970720631866`*^9, 3.659097102594997*^9}, 3.6590973302343407`*^9, 
   3.6591021829352293`*^9, 3.659102350780675*^9, 3.6591056826296797`*^9, 
   3.659880960483529*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "D"}], " ", 
   SubscriptBox["m", "d"], " ", 
   SubscriptBox["\[Gamma]", "m"]}], "-", 
  RowBox[{"D", " ", "\[Alpha]", " ", 
   SubscriptBox["\[Gamma]", "m"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"D", " ", 
      SubscriptBox["\[Gamma]", "m"]}], "-", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}]}], "+", 
  RowBox[{"A", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"D", " ", 
      SubscriptBox["\[Gamma]", "m"]}], "+", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}], " ", 
   SubscriptBox["\[Delta]", "max"]}]}]], "Output",
 CellChangeTimes->{
  3.65783508851589*^9, 3.6578351438140583`*^9, 3.657835174439577*^9, 
   3.657835433877486*^9, 3.657838002636219*^9, 3.657838130528221*^9, 
   3.6578394641315737`*^9, 3.657907203276125*^9, 3.657907684999604*^9, 
   3.65790810848608*^9, 3.657918953092493*^9, 3.659096949362824*^9, {
   3.6590970720631866`*^9, 3.659097102594997*^9}, 3.6590973302343407`*^9, 
   3.6591021829352293`*^9, 3.659102350780675*^9, 3.6591056826296797`*^9, 
   3.659880960491807*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Equil", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dAdt", "\[Equal]", "0"}], ",", 
       RowBox[{"dDdt", "\[Equal]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"A", ",", "D"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.657835098187402*^9, 3.6578351135580072`*^9}, {
  3.657835184003831*^9, 3.657835185395637*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "\[Rule]", "0"}], ",", 
     RowBox[{"D", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "\[Rule]", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Alpha]", " ", 
            SubsuperscriptBox["m", "a", "2"]}], "+", 
           RowBox[{
            SubsuperscriptBox["m", "d", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"r", "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], " ", 
               SubscriptBox["\[Delta]", "max"]}], "+", 
              RowBox[{
               SubsuperscriptBox["m", "d", "2"], " ", 
               SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
           RowBox[{
            SubscriptBox["m", "d"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["r", "2"]}], "+", 
              RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
              RowBox[{"r", " ", 
               SubscriptBox["\[Delta]", "max"]}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
           "-", 
           RowBox[{
            SubscriptBox["m", "a"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r", " ", "\[Alpha]"}], "+", 
              RowBox[{
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}], 
          ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Gamma]", "g"], "+", 
             SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["m", "a"], "-", 
                SubscriptBox["m", "d"]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "-", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["m", "d"], "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], 
          ")"}]}], ")"}]}]}], ",", 
     RowBox[{"D", "\[Rule]", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Alpha]", " ", 
              SubscriptBox["m", "a"]}], "+", 
             RowBox[{
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}], " ", 
           
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[Alpha]"}], " ", 
              SubsuperscriptBox["m", "a", "2"]}], "-", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}], "-", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "-", 
             RowBox[{
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["r", "2"]}], "+", 
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["m", "d"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                   SubscriptBox["\[Delta]", "max"]}], "+", 
                  RowBox[{
                   SubsuperscriptBox["m", "d", "2"], " ", 
                   SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
             "+", 
             RowBox[{
              SubscriptBox["m", "a"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"r", " ", "\[Alpha]"}], "+", 
                RowBox[{
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                   SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["m", "d"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                   SubscriptBox["\[Delta]", "max"]}], "+", 
                  RowBox[{
                   SubsuperscriptBox["m", "d", "2"], " ", 
                   SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], 
               ")"}]}]}], ")"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"4", " ", "r", " ", "\[Alpha]", " ", 
           SubscriptBox["m", "d"], " ", 
           SubscriptBox["\[Gamma]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["m", "a"], "-", 
                SubscriptBox["m", "d"]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "-", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["m", "d"], "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], 
          ")"}]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Alpha]"}], " ", 
          SubsuperscriptBox["m", "a", "2"]}], "-", 
         RowBox[{
          SubsuperscriptBox["m", "d", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"r", "+", 
            SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
         RowBox[{"r", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Alpha]", " ", 
                SubscriptBox["m", "a"]}], "+", 
               RowBox[{"r", " ", 
                SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
            RowBox[{"2", " ", 
             SubscriptBox["m", "d"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
               RowBox[{"\[Alpha]", " ", 
                SubscriptBox["m", "a"]}], "+", 
               RowBox[{"r", " ", 
                SubscriptBox["m", "d"]}]}], ")"}], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
         RowBox[{
          SubscriptBox["m", "a"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r", " ", "\[Alpha]"}], "+", 
            RowBox[{
             SubscriptBox["m", "d"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
               SubscriptBox["\[Delta]", "max"]}], ")"}]}], "-", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], " ", 
               SubscriptBox["\[Delta]", "max"]}], "+", 
              RowBox[{
               SubsuperscriptBox["m", "d", "2"], " ", 
               SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], "+", 
         RowBox[{
          SubscriptBox["m", "d"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["r", "2"], "-", 
            RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
            RowBox[{"r", " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], " ", 
               SubscriptBox["\[Delta]", "max"]}], "+", 
              RowBox[{
               SubsuperscriptBox["m", "d", "2"], " ", 
               SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}], 
        ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Gamma]", "g"], "+", 
           SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "a"], "-", 
              SubscriptBox["m", "d"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "-", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "d"], "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], 
        ")"}]}]}], ",", 
     RowBox[{"D", "\[Rule]", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Alpha]", " ", 
              SubscriptBox["m", "a"]}], "+", 
             RowBox[{
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}], "-", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}], " ", 
           
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[Alpha]"}], " ", 
              SubsuperscriptBox["m", "a", "2"]}], "-", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
             RowBox[{
              SubscriptBox["m", "a"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"r", " ", "\[Alpha]"}], "+", 
                RowBox[{
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                   SubscriptBox["\[Delta]", "max"]}], ")"}]}], "-", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["m", "d"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                   SubscriptBox["\[Delta]", "max"]}], "+", 
                  RowBox[{
                   SubsuperscriptBox["m", "d", "2"], " ", 
                   SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
             "+", 
             RowBox[{
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["r", "2"], "-", 
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                RowBox[{"r", " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["m", "d"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                   SubscriptBox["\[Delta]", "max"]}], "+", 
                  RowBox[{
                   SubsuperscriptBox["m", "d", "2"], " ", 
                   SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], 
               ")"}]}]}], ")"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"4", " ", "r", " ", "\[Alpha]", " ", 
           SubscriptBox["m", "d"], " ", 
           SubscriptBox["\[Gamma]", "m"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["m", "a"], "-", 
                SubscriptBox["m", "d"]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"\[Alpha]", "-", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["m", "d"], "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], 
          ")"}]}], ")"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.657835114106292*^9, 3.657835151729498*^9, 3.657835186965685*^9, 
   3.657835436055895*^9, 3.657838012273365*^9, 3.6578381401965513`*^9, 
   3.657839473191437*^9, 3.657907212877651*^9, 3.657907687398191*^9, 
   3.657908111104912*^9, 3.657918962186084*^9, 3.659096949614099*^9, {
   3.659097078712851*^9, 3.6590971029033527`*^9}, 3.65909733065137*^9, {
   3.659102179162043*^9, 3.659102185979596*^9}, 3.659102352820961*^9, 
   3.659105689751813*^9, 3.6598809693512278`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JacGen", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dAdt", ",", "A"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dAdt", ",", "D"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dDdt", ",", "A"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dDdt", ",", "D"}], "]"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.657835189691493*^9, 3.6578352395472317`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"D", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["\[Gamma]", "g"]}], "-", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       SubscriptBox["\[Gamma]", "m"]}], "-", 
      RowBox[{
       SubscriptBox["m", "a"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
      RowBox[{"A", " ", "r", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["\[Gamma]", "g"]}], "-", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"D", " ", 
          SubscriptBox["\[Gamma]", "m"]}], "-", 
         RowBox[{"A", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{"A", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}], "2"], " ", 
       SubscriptBox["\[Delta]", "max"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", " ", 
          SubscriptBox["\[Gamma]", "m"]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "D"}], " ", "\[Alpha]", " ", 
       SubsuperscriptBox["\[Gamma]", "m", "2"]}], "-", 
      RowBox[{"A", " ", "r", " ", 
       SubscriptBox["\[Gamma]", "m"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
      RowBox[{"\[Alpha]", " ", 
       SubscriptBox["\[Gamma]", "m"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"D", " ", 
          SubscriptBox["\[Gamma]", "m"]}], "-", 
         RowBox[{"A", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{"A", " ", 
       SubscriptBox["\[Gamma]", "m"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "D"}], " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["\[Gamma]", "g"]}], "-", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       SubscriptBox["\[Gamma]", "m"]}], "+", 
      RowBox[{"A", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}], "2"], " ", 
       SubscriptBox["\[Delta]", "max"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", " ", 
          SubscriptBox["\[Gamma]", "m"]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["m", "d"]}], " ", 
       SubscriptBox["\[Gamma]", "m"]}], "+", 
      RowBox[{"D", " ", "\[Alpha]", " ", 
       SubsuperscriptBox["\[Gamma]", "m", "2"]}], "-", 
      RowBox[{"\[Alpha]", " ", 
       SubscriptBox["\[Gamma]", "m"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"D", " ", 
          SubscriptBox["\[Gamma]", "m"]}], "-", 
         RowBox[{"A", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{"A", " ", 
       SubscriptBox["\[Gamma]", "m"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.657835240606516*^9, 3.65783543827591*^9, 3.657838014960504*^9, 
   3.657838145599725*^9, 3.65783947506275*^9, 3.657907222714848*^9, 
   3.657907696034635*^9, 3.657908114402459*^9, 3.657918966578454*^9, 
   3.6590969496543903`*^9, {3.659097098569437*^9, 3.659097102947815*^9}, 
   3.659097330690515*^9, 3.659102354715809*^9, 3.659105690166717*^9, {
   3.6598809695720177`*^9, 3.659880972545532*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Jtriv", "=", 
  RowBox[{"JacGen", "/.", 
   RowBox[{"Equil", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.657835244684657*^9, 3.657835261170986*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
      RowBox[{
       SubscriptBox["m", "a"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ",", 
     RowBox[{"\[Alpha]", " ", 
      SubscriptBox["\[Gamma]", "m"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Alpha]"}], " ", 
       SubscriptBox["\[Gamma]", "m"]}], "-", 
      RowBox[{
       SubscriptBox["m", "d"], " ", 
       SubscriptBox["\[Gamma]", "m"]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.657835262007155*^9, 3.657835444538683*^9, 
  3.65783801783891*^9, 3.657838150197969*^9, 3.657839477897621*^9, 
  3.6579072285360413`*^9, 3.657907699061263*^9, 3.657908115980966*^9, 
  3.657918995000061*^9, 3.6590969496978073`*^9, 3.65909710299714*^9, 
  3.6590973307346087`*^9, 3.659102356994766*^9, 3.6591056902143784`*^9, 
  3.659880976498971*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Jint", "=", 
  RowBox[{"JacGen", "/.", 
   RowBox[{"Equil", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.657835263563579*^9, 3.65783527190707*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["m", "a"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "a"], "-", 
              SubscriptBox["m", "d"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "-", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "d"], "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["\[Gamma]", "g"]}], "-", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]", " ", 
           SubsuperscriptBox["m", "a", "2"]}], "+", 
          RowBox[{
           SubsuperscriptBox["m", "d", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", 
             SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
          RowBox[{
           SubscriptBox["m", "d"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["r", "2"]}], "+", 
             RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
             RowBox[{"r", " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
          "-", 
          RowBox[{
           SubscriptBox["m", "a"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", "\[Alpha]"}], "+", 
             RowBox[{
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}], 
         ")"}]}]}], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "a"], "-", 
              SubscriptBox["m", "d"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "-", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "d"], "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
        SubscriptBox["\[Delta]", "max"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]", " ", 
           SubsuperscriptBox["m", "a", "2"]}], "+", 
          RowBox[{
           SubsuperscriptBox["m", "d", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", 
             SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
          RowBox[{
           SubscriptBox["m", "d"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["r", "2"]}], "+", 
             RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
             RowBox[{"r", " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
          "-", 
          RowBox[{
           SubscriptBox["m", "a"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", "\[Alpha]"}], "+", 
             RowBox[{
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}], 
         ")"}]}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox["\[Gamma]", "g"]}], "-", 
           SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Alpha]", " ", 
            SubscriptBox["m", "a"]}], "+", 
           RowBox[{
            SubscriptBox["m", "d"], " ", 
            RowBox[{"(", 
             RowBox[{"r", "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Alpha]"}], " ", 
            SubsuperscriptBox["m", "a", "2"]}], "-", 
           RowBox[{
            SubsuperscriptBox["m", "d", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"r", "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "-", 
           RowBox[{"r", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], " ", 
               SubscriptBox["\[Delta]", "max"]}], "+", 
              RowBox[{
               SubsuperscriptBox["m", "d", "2"], " ", 
               SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "-", 
           RowBox[{
            SubscriptBox["m", "d"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["r", "2"]}], "+", 
              RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
              RowBox[{"r", " ", 
               SubscriptBox["\[Delta]", "max"]}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
           "+", 
           RowBox[{
            SubscriptBox["m", "a"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r", " ", "\[Alpha]"}], "+", 
              RowBox[{
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}], 
          ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "r", " ", 
         SubscriptBox["m", "d"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "a"], "-", 
              SubscriptBox["m", "d"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "-", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "d"], "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], ")"}]}], 
      "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"2", " ", "r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["m", "a"], "-", 
                  SubscriptBox["m", "d"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[Alpha]", "-", 
                  SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
               RowBox[{"r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["m", "d"], "+", 
                  SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Alpha]", " ", 
              SubsuperscriptBox["m", "a", "2"]}], "+", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
             RowBox[{
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["r", "2"]}], "+", 
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["m", "d"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                   SubscriptBox["\[Delta]", "max"]}], "+", 
                  RowBox[{
                   SubsuperscriptBox["m", "d", "2"], " ", 
                   SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
             "-", 
             RowBox[{
              SubscriptBox["m", "a"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"r", " ", "\[Alpha]"}], "+", 
                RowBox[{
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                   SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["m", "d"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                   SubscriptBox["\[Delta]", "max"]}], "+", 
                  RowBox[{
                   SubsuperscriptBox["m", "d", "2"], " ", 
                   SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], 
               ")"}]}]}], ")"}]}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", " ", 
               SubscriptBox["m", "a"]}], "+", 
              RowBox[{
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{"r", "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Alpha]"}], " ", 
               SubsuperscriptBox["m", "a", "2"]}], "-", 
              RowBox[{
               SubsuperscriptBox["m", "d", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"r", "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "-", 
              RowBox[{"r", " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                 RowBox[{"2", " ", 
                  SubscriptBox["m", "d"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                  SubscriptBox["\[Delta]", "max"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["m", "d", "2"], " ", 
                  SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "-", 
              RowBox[{
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["r", "2"]}], "+", 
                 RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["\[Delta]", "max"]}], "+", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                   RowBox[{"2", " ", 
                    SubscriptBox["m", "d"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                    SubscriptBox["\[Delta]", "max"]}], "+", 
                   RowBox[{
                    SubsuperscriptBox["m", "d", "2"], " ", 
                    SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}],
               "+", 
              RowBox[{
               SubscriptBox["m", "a"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"r", " ", "\[Alpha]"}], "+", 
                 RowBox[{
                  SubscriptBox["m", "d"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                    SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                   RowBox[{"2", " ", 
                    SubscriptBox["m", "d"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                    SubscriptBox["\[Delta]", "max"]}], "+", 
                   RowBox[{
                    SubsuperscriptBox["m", "d", "2"], " ", 
                    SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], 
                ")"}]}]}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"4", " ", "r", " ", "\[Alpha]", " ", 
            SubscriptBox["m", "d"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["m", "a"], "-", 
                 SubscriptBox["m", "d"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "-", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["m", "d"], "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], 
           ")"}]}]}], ")"}]}], "+", 
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"2", " ", "r", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["m", "a"], "-", 
                 SubscriptBox["m", "d"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "-", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["m", "d"], "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", " ", 
             SubsuperscriptBox["m", "a", "2"]}], "+", 
            RowBox[{
             SubsuperscriptBox["m", "d", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"r", "+", 
               SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
            RowBox[{"r", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
            RowBox[{
             SubscriptBox["m", "d"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["r", "2"]}], "+", 
               RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
               RowBox[{"r", " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                 RowBox[{"2", " ", 
                  SubscriptBox["m", "d"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                  SubscriptBox["\[Delta]", "max"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["m", "d", "2"], " ", 
                  SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
            "-", 
            RowBox[{
             SubscriptBox["m", "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r", " ", "\[Alpha]"}], "+", 
               RowBox[{
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                  SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                 RowBox[{"2", " ", 
                  SubscriptBox["m", "d"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                  SubscriptBox["\[Delta]", "max"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["m", "d", "2"], " ", 
                  SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}],
            ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", " ", 
               SubscriptBox["m", "a"]}], "+", 
              RowBox[{
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{"r", "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Alpha]"}], " ", 
               SubsuperscriptBox["m", "a", "2"]}], "-", 
              RowBox[{
               SubsuperscriptBox["m", "d", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"r", "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "-", 
              RowBox[{"r", " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                 RowBox[{"2", " ", 
                  SubscriptBox["m", "d"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                  SubscriptBox["\[Delta]", "max"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["m", "d", "2"], " ", 
                  SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "-", 
              RowBox[{
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["r", "2"]}], "+", 
                 RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["\[Delta]", "max"]}], "+", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                   RowBox[{"2", " ", 
                    SubscriptBox["m", "d"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                    SubscriptBox["\[Delta]", "max"]}], "+", 
                   RowBox[{
                    SubsuperscriptBox["m", "d", "2"], " ", 
                    SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}],
               "+", 
              RowBox[{
               SubscriptBox["m", "a"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"r", " ", "\[Alpha]"}], "+", 
                 RowBox[{
                  SubscriptBox["m", "d"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                    SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                   RowBox[{"2", " ", 
                    SubscriptBox["m", "d"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                    SubscriptBox["\[Delta]", "max"]}], "+", 
                   RowBox[{
                    SubsuperscriptBox["m", "d", "2"], " ", 
                    SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], 
                ")"}]}]}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"4", " ", "r", " ", "\[Alpha]", " ", 
            SubscriptBox["m", "d"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["m", "a"], "-", 
                 SubscriptBox["m", "d"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "-", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["m", "d"], "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], 
           ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "a"], "-", 
              SubscriptBox["m", "d"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "-", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "d"], "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]], 
       RowBox[{
        SubscriptBox["\[Gamma]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]", " ", 
           SubsuperscriptBox["m", "a", "2"]}], "+", 
          RowBox[{
           SubsuperscriptBox["m", "d", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", 
             SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
          RowBox[{
           SubscriptBox["m", "d"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["r", "2"]}], "+", 
             RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
             RowBox[{"r", " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
          "-", 
          RowBox[{
           SubscriptBox["m", "a"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", "\[Alpha]"}], "+", 
             RowBox[{
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}], 
         ")"}]}]}], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "a"], "-", 
              SubscriptBox["m", "d"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "-", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "d"], "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]], 
       RowBox[{
        SubscriptBox["\[Gamma]", "m"], " ", 
        SubscriptBox["\[Delta]", "max"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]", " ", 
           SubsuperscriptBox["m", "a", "2"]}], "+", 
          RowBox[{
           SubsuperscriptBox["m", "d", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", 
             SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
          RowBox[{
           SubscriptBox["m", "d"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["r", "2"]}], "+", 
             RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
             RowBox[{"r", " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
          "-", 
          RowBox[{
           SubscriptBox["m", "a"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", "\[Alpha]"}], "+", 
             RowBox[{
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}], 
         ")"}]}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Alpha]", " ", 
            SubscriptBox["m", "a"]}], "+", 
           RowBox[{
            SubscriptBox["m", "d"], " ", 
            RowBox[{"(", 
             RowBox[{"r", "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Alpha]"}], " ", 
            SubsuperscriptBox["m", "a", "2"]}], "-", 
           RowBox[{
            SubsuperscriptBox["m", "d", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"r", "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "-", 
           RowBox[{"r", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], " ", 
               SubscriptBox["\[Delta]", "max"]}], "+", 
              RowBox[{
               SubsuperscriptBox["m", "d", "2"], " ", 
               SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "-", 
           RowBox[{
            SubscriptBox["m", "d"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["r", "2"]}], "+", 
              RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
              RowBox[{"r", " ", 
               SubscriptBox["\[Delta]", "max"]}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
           "+", 
           RowBox[{
            SubscriptBox["m", "a"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r", " ", "\[Alpha]"}], "+", 
              RowBox[{
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}], 
          ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "r", " ", 
         SubscriptBox["m", "d"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "a"], "-", 
              SubscriptBox["m", "d"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "-", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "d"], "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], ")"}]}], 
      "+", 
      RowBox[{"\[Alpha]", " ", 
       SubscriptBox["\[Gamma]", "m"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"2", " ", "r", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["m", "a"], "-", 
                 SubscriptBox["m", "d"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "-", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["m", "d"], "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", " ", 
             SubsuperscriptBox["m", "a", "2"]}], "+", 
            RowBox[{
             SubsuperscriptBox["m", "d", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"r", "+", 
               SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
            RowBox[{"r", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
            RowBox[{
             SubscriptBox["m", "d"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["r", "2"]}], "+", 
               RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
               RowBox[{"r", " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                 RowBox[{"2", " ", 
                  SubscriptBox["m", "d"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                  SubscriptBox["\[Delta]", "max"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["m", "d", "2"], " ", 
                  SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
            "-", 
            RowBox[{
             SubscriptBox["m", "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r", " ", "\[Alpha]"}], "+", 
               RowBox[{
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                  SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                 RowBox[{"2", " ", 
                  SubscriptBox["m", "d"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                  SubscriptBox["\[Delta]", "max"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["m", "d", "2"], " ", 
                  SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}],
            ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", " ", 
               SubscriptBox["m", "a"]}], "+", 
              RowBox[{
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{"r", "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Alpha]"}], " ", 
               SubsuperscriptBox["m", "a", "2"]}], "-", 
              RowBox[{
               SubsuperscriptBox["m", "d", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"r", "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "-", 
              RowBox[{"r", " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                 RowBox[{"2", " ", 
                  SubscriptBox["m", "d"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                  SubscriptBox["\[Delta]", "max"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["m", "d", "2"], " ", 
                  SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "-", 
              RowBox[{
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["r", "2"]}], "+", 
                 RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["\[Delta]", "max"]}], "+", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                   RowBox[{"2", " ", 
                    SubscriptBox["m", "d"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                    SubscriptBox["\[Delta]", "max"]}], "+", 
                   RowBox[{
                    SubsuperscriptBox["m", "d", "2"], " ", 
                    SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}],
               "+", 
              RowBox[{
               SubscriptBox["m", "a"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"r", " ", "\[Alpha]"}], "+", 
                 RowBox[{
                  SubscriptBox["m", "d"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                    SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                   RowBox[{"2", " ", 
                    SubscriptBox["m", "d"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                    SubscriptBox["\[Delta]", "max"]}], "+", 
                   RowBox[{
                    SubsuperscriptBox["m", "d", "2"], " ", 
                    SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], 
                ")"}]}]}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"4", " ", "r", " ", "\[Alpha]", " ", 
            SubscriptBox["m", "d"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["m", "a"], "-", 
                 SubscriptBox["m", "d"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "-", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["m", "d"], "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], 
           ")"}]}]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"2", " ", "r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["m", "a"], "-", 
               SubscriptBox["m", "d"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"\[Alpha]", "-", 
               SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["m", "d"], "+", 
               SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Gamma]", "g"], "+", 
           SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
         SubscriptBox["\[Delta]", "max"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Alpha]", " ", 
            SubsuperscriptBox["m", "a", "2"]}], "+", 
           RowBox[{
            SubsuperscriptBox["m", "d", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"r", "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], " ", 
               SubscriptBox["\[Delta]", "max"]}], "+", 
              RowBox[{
               SubsuperscriptBox["m", "d", "2"], " ", 
               SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
           RowBox[{
            SubscriptBox["m", "d"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["r", "2"]}], "+", 
              RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
              RowBox[{"r", " ", 
               SubscriptBox["\[Delta]", "max"]}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
           "-", 
           RowBox[{
            SubscriptBox["m", "a"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r", " ", "\[Alpha]"}], "+", 
              RowBox[{
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}], 
          ")"}]}]}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox["\[Gamma]", "g"]}], "-", 
           SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Alpha]", " ", 
            SubscriptBox["m", "a"]}], "+", 
           RowBox[{
            SubscriptBox["m", "d"], " ", 
            RowBox[{"(", 
             RowBox[{"r", "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Alpha]"}], " ", 
            SubsuperscriptBox["m", "a", "2"]}], "-", 
           RowBox[{
            SubsuperscriptBox["m", "d", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"r", "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "-", 
           RowBox[{"r", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], " ", 
               SubscriptBox["\[Delta]", "max"]}], "+", 
              RowBox[{
               SubsuperscriptBox["m", "d", "2"], " ", 
               SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "-", 
           RowBox[{
            SubscriptBox["m", "d"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["r", "2"]}], "+", 
              RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
              RowBox[{"r", " ", 
               SubscriptBox["\[Delta]", "max"]}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
           "+", 
           RowBox[{
            SubscriptBox["m", "a"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r", " ", "\[Alpha]"}], "+", 
              RowBox[{
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}], 
          ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "r", " ", 
         SubscriptBox["m", "d"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "a"], "-", 
              SubscriptBox["m", "d"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "-", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "d"], "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], ")"}]}], 
      "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           FractionBox["1", 
            RowBox[{"2", " ", "r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["m", "a"], "-", 
                  SubscriptBox["m", "d"]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"\[Alpha]", "-", 
                  SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
               RowBox[{"r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["m", "d"], "+", 
                  SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Alpha]", " ", 
              SubsuperscriptBox["m", "a", "2"]}], "+", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"r", "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
             RowBox[{
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["r", "2"]}], "+", 
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["m", "d"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                   SubscriptBox["\[Delta]", "max"]}], "+", 
                  RowBox[{
                   SubsuperscriptBox["m", "d", "2"], " ", 
                   SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
             "-", 
             RowBox[{
              SubscriptBox["m", "a"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"r", " ", "\[Alpha]"}], "+", 
                RowBox[{
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                   SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["m", "d"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                   SubscriptBox["\[Delta]", "max"]}], "+", 
                  RowBox[{
                   SubsuperscriptBox["m", "d", "2"], " ", 
                   SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], 
               ")"}]}]}], ")"}]}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", " ", 
               SubscriptBox["m", "a"]}], "+", 
              RowBox[{
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{"r", "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Alpha]"}], " ", 
               SubsuperscriptBox["m", "a", "2"]}], "-", 
              RowBox[{
               SubsuperscriptBox["m", "d", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"r", "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "-", 
              RowBox[{"r", " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                 RowBox[{"2", " ", 
                  SubscriptBox["m", "d"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                  SubscriptBox["\[Delta]", "max"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["m", "d", "2"], " ", 
                  SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "-", 
              RowBox[{
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["r", "2"]}], "+", 
                 RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["\[Delta]", "max"]}], "+", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                   RowBox[{"2", " ", 
                    SubscriptBox["m", "d"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                    SubscriptBox["\[Delta]", "max"]}], "+", 
                   RowBox[{
                    SubsuperscriptBox["m", "d", "2"], " ", 
                    SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}],
               "+", 
              RowBox[{
               SubscriptBox["m", "a"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"r", " ", "\[Alpha]"}], "+", 
                 RowBox[{
                  SubscriptBox["m", "d"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                    SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                   RowBox[{"2", " ", 
                    SubscriptBox["m", "d"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                    SubscriptBox["\[Delta]", "max"]}], "+", 
                   RowBox[{
                    SubsuperscriptBox["m", "d", "2"], " ", 
                    SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], 
                ")"}]}]}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"4", " ", "r", " ", "\[Alpha]", " ", 
            SubscriptBox["m", "d"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["m", "a"], "-", 
                 SubscriptBox["m", "d"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "-", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["m", "d"], "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], 
           ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["m", "d"]}], " ", 
       SubscriptBox["\[Gamma]", "m"]}], "-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "a"], "-", 
              SubscriptBox["m", "d"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "-", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "d"], "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]], 
       RowBox[{
        SubscriptBox["\[Gamma]", "m"], " ", 
        SubscriptBox["\[Delta]", "max"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]", " ", 
           SubsuperscriptBox["m", "a", "2"]}], "+", 
          RowBox[{
           SubsuperscriptBox["m", "d", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", 
             SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
          RowBox[{"r", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
          RowBox[{
           SubscriptBox["m", "d"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["r", "2"]}], "+", 
             RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
             RowBox[{"r", " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
          "-", 
          RowBox[{
           SubscriptBox["m", "a"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", "\[Alpha]"}], "+", 
             RowBox[{
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}], 
         ")"}]}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "m"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Alpha]", " ", 
            SubscriptBox["m", "a"]}], "+", 
           RowBox[{
            SubscriptBox["m", "d"], " ", 
            RowBox[{"(", 
             RowBox[{"r", "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Alpha]"}], " ", 
            SubsuperscriptBox["m", "a", "2"]}], "-", 
           RowBox[{
            SubsuperscriptBox["m", "d", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"r", "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "-", 
           RowBox[{"r", " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], " ", 
               SubscriptBox["\[Delta]", "max"]}], "+", 
              RowBox[{
               SubsuperscriptBox["m", "d", "2"], " ", 
               SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "-", 
           RowBox[{
            SubscriptBox["m", "d"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["r", "2"]}], "+", 
              RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
              RowBox[{"r", " ", 
               SubscriptBox["\[Delta]", "max"]}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
           "+", 
           RowBox[{
            SubscriptBox["m", "a"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r", " ", "\[Alpha]"}], "+", 
              RowBox[{
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}], 
          ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "r", " ", 
         SubscriptBox["m", "d"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "a"], "-", 
              SubscriptBox["m", "d"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"\[Alpha]", "-", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["m", "d"], "+", 
              SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], ")"}]}], 
      "-", 
      RowBox[{"\[Alpha]", " ", 
       SubscriptBox["\[Gamma]", "m"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"2", " ", "r", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["m", "a"], "-", 
                 SubscriptBox["m", "d"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "-", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["m", "d"], "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", " ", 
             SubsuperscriptBox["m", "a", "2"]}], "+", 
            RowBox[{
             SubsuperscriptBox["m", "d", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"r", "+", 
               SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
            RowBox[{"r", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
            RowBox[{
             SubscriptBox["m", "d"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["r", "2"]}], "+", 
               RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
               RowBox[{"r", " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                 RowBox[{"2", " ", 
                  SubscriptBox["m", "d"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                  SubscriptBox["\[Delta]", "max"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["m", "d", "2"], " ", 
                  SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
            "-", 
            RowBox[{
             SubscriptBox["m", "a"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r", " ", "\[Alpha]"}], "+", 
               RowBox[{
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                  SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                 RowBox[{"2", " ", 
                  SubscriptBox["m", "d"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                  SubscriptBox["\[Delta]", "max"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["m", "d", "2"], " ", 
                  SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}],
            ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", " ", 
               SubscriptBox["m", "a"]}], "+", 
              RowBox[{
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{"r", "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Alpha]"}], " ", 
               SubsuperscriptBox["m", "a", "2"]}], "-", 
              RowBox[{
               SubsuperscriptBox["m", "d", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"r", "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "-", 
              RowBox[{"r", " ", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                 RowBox[{"2", " ", 
                  SubscriptBox["m", "d"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                  SubscriptBox["\[Delta]", "max"]}], "+", 
                 RowBox[{
                  SubsuperscriptBox["m", "d", "2"], " ", 
                  SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "-", 
              RowBox[{
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["r", "2"]}], "+", 
                 RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["\[Delta]", "max"]}], "+", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                   RowBox[{"2", " ", 
                    SubscriptBox["m", "d"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                    SubscriptBox["\[Delta]", "max"]}], "+", 
                   RowBox[{
                    SubsuperscriptBox["m", "d", "2"], " ", 
                    SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}],
               "+", 
              RowBox[{
               SubscriptBox["m", "a"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"r", " ", "\[Alpha]"}], "+", 
                 RowBox[{
                  SubscriptBox["m", "d"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "r"}], "+", "\[Alpha]", "+", 
                    SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
                 SqrtBox[
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                   RowBox[{"2", " ", 
                    SubscriptBox["m", "d"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                    SubscriptBox["\[Delta]", "max"]}], "+", 
                   RowBox[{
                    SubsuperscriptBox["m", "d", "2"], " ", 
                    SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], 
                ")"}]}]}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"4", " ", "r", " ", "\[Alpha]", " ", 
            SubscriptBox["m", "d"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["m", "a"], "-", 
                 SubscriptBox["m", "d"]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"\[Alpha]", "-", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
              RowBox[{"r", " ", 
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["m", "d"], "+", 
                 SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], 
           ")"}]}]}], ")"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.65783527240974*^9, 3.657835446424217*^9, 
  3.6578380196713877`*^9, 3.657838151949204*^9, 3.657839479686924*^9, 
  3.6579072305074587`*^9, 3.6579077016581707`*^9, 3.6579081175200233`*^9, 
  3.657918997926833*^9, 3.659096949743869*^9, 3.659097103045516*^9, 
  3.659097330771139*^9, 3.659102359162525*^9, 3.659105690264052*^9, 
  3.6598809785452023`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Jtriv", "//", "Eigenvalues"}], "]"}]], "Input",
 CellChangeTimes->{{3.6578356394460297`*^9, 3.6578356420303164`*^9}, {
  3.657835722328991*^9, 3.6578357281133413`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"\[Alpha]", "+", 
       SubscriptBox["m", "d"]}], ")"}]}], " ", 
    SubscriptBox["\[Gamma]", "m"]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"r", "-", 
      SubscriptBox["m", "a"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.657835642430519*^9, 3.657835730329527*^9, 3.657838038907131*^9, 
   3.657838157848124*^9, 3.6578394859728603`*^9, 3.657907235708284*^9, 
   3.657907706322336*^9, 3.6579081198725777`*^9, 3.657919121921894*^9, 
   3.6590969497952642`*^9, {3.659097103095478*^9, 3.6590971124629374`*^9}, 
   3.659097330823802*^9, 3.6591056990115757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"A1", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"-", 
    RowBox[{"Tr", "[", "Jint", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"A2", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Det", "[", "Jint", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.659108590396988*^9, 3.659108592763535*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", " ", "r", " ", "\[Alpha]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["m", "a"], "-", 
         SubscriptBox["m", "d"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "-", 
         SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["m", "d"], "+", 
         SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Alpha]", " ", 
     SubsuperscriptBox["m", "a", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], " ", 
        SubscriptBox["\[Delta]", "max"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "r"}], "-", "\[Alpha]", "+", 
          SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
       RowBox[{
        SubscriptBox["\[Gamma]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Alpha]", "2"], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", 
             RowBox[{"2", " ", "\[Alpha]"}]}], ")"}], " ", 
           SubscriptBox["\[Delta]", "max"]}], "+", 
          SubsuperscriptBox["\[Delta]", "max", "2"]}], ")"}]}]}], ")"}]}], 
    "+", 
    RowBox[{
     SubsuperscriptBox["m", "d", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"r", "+", 
           SubscriptBox["\[Delta]", "max"]}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"r", "-", "\[Alpha]", "+", 
          SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
       RowBox[{
        SubscriptBox["\[Gamma]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "-", 
             RowBox[{"r", " ", "\[Alpha]"}], "-", 
             SuperscriptBox["\[Alpha]", "2"]}], ")"}]}], "+", 
          RowBox[{
           SubscriptBox["\[Delta]", "max"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", 
              SuperscriptBox["r", "2"]}], "-", 
             RowBox[{"3", " ", "r", " ", "\[Alpha]"}], "+", 
             SuperscriptBox["\[Alpha]", "2"], "+", 
             RowBox[{
              SubscriptBox["\[Delta]", "max"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", "r"}], "-", 
                RowBox[{"2", " ", "\[Alpha]"}], "+", 
                SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], "+", 
    RowBox[{"r", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Gamma]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "r"}], " ", "\[Alpha]", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "-", "\[Alpha]"}], ")"}], " ", 
           SubscriptBox["\[Delta]", "max"], " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
          RowBox[{
           SubsuperscriptBox["\[Delta]", "max", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "r"}], "+", "\[Alpha]"}], ")"}], " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
          RowBox[{
           SubsuperscriptBox["\[Delta]", "max", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
          "+", 
          RowBox[{"r", " ", 
           SubscriptBox["\[Delta]", "max"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox["\[Alpha]", "2"]}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["m", "a"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["m", "d"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "-", 
             SubscriptBox["\[Delta]", "max"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", 
             SubscriptBox["\[Delta]", "max"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", "\[Alpha]", "+", 
             SubscriptBox["\[Delta]", "max"]}], ")"}]}], "-", 
          RowBox[{
           SubsuperscriptBox["\[Delta]", "max", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", "r", " ", "\[Alpha]"}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
          "+", 
          RowBox[{"r", " ", "\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Alpha]", " ", 
              RowBox[{"(", 
               RowBox[{"r", "+", "\[Alpha]"}], ")"}]}], "+", 
             RowBox[{"2", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}]}], ")"}]}], 
          "+", 
          RowBox[{
           SubscriptBox["\[Delta]", "max"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["r", "2"], " ", "\[Alpha]"}], "-", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
             RowBox[{"\[Alpha]", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}]}], 
            ")"}]}]}], ")"}]}], "+", 
       RowBox[{
        SubscriptBox["\[Gamma]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           SuperscriptBox["\[Alpha]", "2"]}], "-", 
          RowBox[{"\[Alpha]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "r"}], "+", "\[Alpha]"}], ")"}], " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[Alpha]"}], " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "\[Alpha]"}], "+", 
                   SubscriptBox["m", "d"]}], ")"}]}]}], ")"}], " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
          RowBox[{
           SubscriptBox["m", "d"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Alpha]", " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["r", "2"], "+", 
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                SuperscriptBox["\[Alpha]", "2"]}], ")"}]}], "+", 
             RowBox[{
              SubscriptBox["\[Delta]", "max"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["r", "2"]}], "+", 
                RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
                SuperscriptBox["\[Alpha]", "2"], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "r"}], "+", "\[Alpha]", "-", 
                   SubscriptBox["\[Delta]", "max"]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}]}], ")"}]}]}], ")"}]}], "-", 
          RowBox[{
           SubsuperscriptBox["\[Delta]", "max", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", "r", " ", "\[Alpha]"}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
          "+", 
          RowBox[{
           SubscriptBox["\[Delta]", "max"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["r", "2"], " ", "\[Alpha]"}], "+", 
             RowBox[{"3", " ", "r", " ", 
              SuperscriptBox["\[Alpha]", "2"]}], "-", 
             RowBox[{"r", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "\[Alpha]"}], " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Alpha]"}], "+", 
                    SubscriptBox["m", "d"]}], ")"}]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
             RowBox[{"2", " ", "\[Alpha]", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "\[Alpha]"}], " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Alpha]"}], "+", 
                    SubscriptBox["m", "d"]}], ")"}]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["m", "d"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], " ", 
        RowBox[{"(", 
         RowBox[{"r", "+", 
          SubscriptBox["\[Delta]", "max"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", " ", 
           SubsuperscriptBox["\[Delta]", "max", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "-", "\[Alpha]"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", "\[Alpha]"}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
          "+", 
          RowBox[{
           SubscriptBox["\[Delta]", "max"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "+", 
             RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{
        SubscriptBox["\[Gamma]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"r", "-", 
             RowBox[{"2", " ", "\[Alpha]"}]}], ")"}], " ", "\[Alpha]"}], "+", 
          
          RowBox[{"r", " ", 
           SubsuperscriptBox["\[Delta]", "max", "3"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "2"], "-", 
             RowBox[{"3", " ", "r", " ", "\[Alpha]"}], "+", 
             SuperscriptBox["\[Alpha]", "2"]}], ")"}], " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Alpha]", " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
             RowBox[{"2", " ", 
              SubscriptBox["m", "d"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[Alpha]"}], " ", 
                 SubscriptBox["m", "a"]}], "+", 
                RowBox[{"r", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "\[Alpha]"}], "+", 
                   SubscriptBox["m", "d"]}], ")"}]}]}], ")"}], " ", 
              SubscriptBox["\[Delta]", "max"]}], "+", 
             RowBox[{
              SubsuperscriptBox["m", "d", "2"], " ", 
              SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
          RowBox[{
           SubsuperscriptBox["\[Delta]", "max", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "r"}], "+", "\[Alpha]"}], ")"}]}], "+", 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Alpha]", " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
               RowBox[{"2", " ", 
                SubscriptBox["m", "d"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[Alpha]"}], " ", 
                   SubscriptBox["m", "a"]}], "+", 
                  RowBox[{"r", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "\[Alpha]"}], "+", 
                    SubscriptBox["m", "d"]}], ")"}]}]}], ")"}], " ", 
                SubscriptBox["\[Delta]", "max"]}], "+", 
               RowBox[{
                SubsuperscriptBox["m", "d", "2"], " ", 
                SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], 
          "+", 
          RowBox[{
           SubscriptBox["\[Delta]", "max"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["r", "3"], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["r", "2"], " ", "\[Alpha]"}], "-", 
             RowBox[{"2", " ", "\[Alpha]", " ", 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                RowBox[{"2", " ", 
                 SubscriptBox["m", "d"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                   RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                   RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                 SubscriptBox["\[Delta]", "max"]}], "+", 
                RowBox[{
                 SubsuperscriptBox["m", "d", "2"], " ", 
                 SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
             RowBox[{"2", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["\[Alpha]", "2"]}], "+", 
                SqrtBox[
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
                  RowBox[{"2", " ", 
                   SubscriptBox["m", "d"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                    RowBox[{"\[Alpha]", " ", 
                    SubscriptBox["m", "a"]}], "+", 
                    RowBox[{"r", " ", 
                    SubscriptBox["m", "d"]}]}], ")"}], " ", 
                   SubscriptBox["\[Delta]", "max"]}], "+", 
                  RowBox[{
                   SubsuperscriptBox["m", "d", "2"], " ", 
                   SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], 
               ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.659105732278365*^9, 3.659108598441864*^9, 
  3.659881032095529*^9}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", "r", " ", "\[Alpha]"}]], 
   RowBox[{
    SubscriptBox["\[Gamma]", "m"], " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SubsuperscriptBox["m", "a", "2"]}], "+", 
      RowBox[{
       SubsuperscriptBox["m", "d", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"r", "+", 
          SubscriptBox["\[Delta]", "max"]}], ")"}], "2"]}], "+", 
      RowBox[{"2", " ", "r", " ", "\[Alpha]", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Alpha]", " ", 
             SubscriptBox["m", "a"]}], "+", 
            RowBox[{"r", " ", 
             SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
         RowBox[{"2", " ", 
          SubscriptBox["m", "d"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[Alpha]"}], " ", 
             SubscriptBox["m", "a"]}], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "\[Alpha]"}], "+", 
               SubscriptBox["m", "d"]}], ")"}]}]}], ")"}], " ", 
          SubscriptBox["\[Delta]", "max"]}], "+", 
         RowBox[{
          SubsuperscriptBox["m", "d", "2"], " ", 
          SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "-", 
      RowBox[{"\[Alpha]", " ", 
       SubscriptBox["m", "a"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SubscriptBox["m", "d"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "r"}], "+", 
            SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Alpha]", " ", 
               SubscriptBox["m", "a"]}], "+", 
              RowBox[{"r", " ", 
               SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
           RowBox[{"2", " ", 
            SubscriptBox["m", "d"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
              RowBox[{"\[Alpha]", " ", 
               SubscriptBox["m", "a"]}], "+", 
              RowBox[{"r", " ", 
               SubscriptBox["m", "d"]}]}], ")"}], " ", 
            SubscriptBox["\[Delta]", "max"]}], "+", 
           RowBox[{
            SubsuperscriptBox["m", "d", "2"], " ", 
            SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}], "+", 
      RowBox[{
       SubscriptBox["m", "d"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"r", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Alpha]", " ", 
                SubscriptBox["m", "a"]}], "+", 
               RowBox[{"r", " ", 
                SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
            RowBox[{"2", " ", 
             SubscriptBox["m", "d"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
               RowBox[{"\[Alpha]", " ", 
                SubscriptBox["m", "a"]}], "+", 
               RowBox[{"r", " ", 
                SubscriptBox["m", "d"]}]}], ")"}], " ", 
             SubscriptBox["\[Delta]", "max"]}], "+", 
            RowBox[{
             SubsuperscriptBox["m", "d", "2"], " ", 
             SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], "+", 
         RowBox[{
          SubscriptBox["\[Delta]", "max"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "r", " ", "\[Alpha]"}], "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], "2"], "+", 
              RowBox[{"2", " ", 
               SubscriptBox["m", "d"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "r", " ", "\[Alpha]"}], "-", 
                 RowBox[{"\[Alpha]", " ", 
                  SubscriptBox["m", "a"]}], "+", 
                 RowBox[{"r", " ", 
                  SubscriptBox["m", "d"]}]}], ")"}], " ", 
               SubscriptBox["\[Delta]", "max"]}], "+", 
              RowBox[{
               SubsuperscriptBox["m", "d", "2"], " ", 
               SubsuperscriptBox["\[Delta]", "max", "2"]}]}]]}], ")"}]}]}], 
        ")"}]}]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.659105732278365*^9, 3.659108598441864*^9, 
  3.659881035637149*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Parms", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", "\[Rule]", "2"}], ",", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "\[Rule]", ".02"}], ",", 
    RowBox[{
     SubscriptBox["\[Gamma]", "m"], "\[Rule]", ".01"}], ",", 
    RowBox[{"\[Alpha]", "\[Rule]", ".03"}], ",", 
    RowBox[{
     SubscriptBox["\[Delta]", "max"], "\[Rule]", ".1"}], ",", 
    RowBox[{
     SubscriptBox["m", "a"], "\[Rule]", ".01"}], ",", 
    RowBox[{
     SubscriptBox["m", "d"], "\[Rule]", "0.001"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.657836791101138*^9, 3.6578369032375307`*^9}, {
   3.657837047275097*^9, 3.6578370476094503`*^9}, {3.6578370873625307`*^9, 
   3.6578371032968407`*^9}, {3.657838072482644*^9, 3.657838077246369*^9}, {
   3.657838806716035*^9, 3.6578388241087217`*^9}, {3.6578388573193693`*^9, 
   3.6578388706199827`*^9}, {3.657838952662613*^9, 3.657838958276593*^9}, 
   3.6578395217017097`*^9, {3.657907280138755*^9, 3.657907284322071*^9}, 
   3.6579077540245857`*^9, {3.657910642976322*^9, 3.657910660424062*^9}, {
   3.659096974891604*^9, 3.6590969932342987`*^9}, 3.659097034480784*^9, {
   3.659098021272317*^9, 3.659098042167173*^9}, {3.6591033681553993`*^9, 
   3.659103368905095*^9}, 3.65910343242725*^9, 3.6591034929034977`*^9, {
   3.659105741927082*^9, 3.659105751509512*^9}, {3.659110231027125*^9, 
   3.6591102312089977`*^9}, 3.659111799821974*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"r", "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["\[Gamma]", "g"], "\[Rule]", "0.02`"}], ",", 
   RowBox[{
    SubscriptBox["\[Gamma]", "m"], "\[Rule]", "0.01`"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "0.03`"}], ",", 
   RowBox[{
    SubscriptBox["\[Delta]", "max"], "\[Rule]", "0.1`"}], ",", 
   RowBox[{
    SubscriptBox["m", "a"], "\[Rule]", "0.01`"}], ",", 
   RowBox[{
    SubscriptBox["m", "d"], "\[Rule]", "0.001`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6578369070610228`*^9, 3.657837049856925*^9, {3.657837096693191*^9, 
   3.6578371047034807`*^9}, 3.6578380793976517`*^9, 3.657838175746892*^9, {
   3.657838791250641*^9, 3.6578388249188957`*^9}, 3.657838872115847*^9, 
   3.6578389609803343`*^9, {3.657839512662703*^9, 3.657839527284305*^9}, 
   3.65790724998785*^9, {3.657907281558536*^9, 3.657907285159387*^9}, 
   3.657907712004046*^9, 3.6579077548681593`*^9, 3.657908125338825*^9, {
   3.657910645462639*^9, 3.657910662026609*^9}, 3.657920137479999*^9, 
   3.6590969598482533`*^9, 3.659097349140238*^9, {3.659098022993703*^9, 
   3.65909804274154*^9}, 3.659102365390751*^9, {3.659103369510894*^9, 
   3.6591033786078997`*^9}, 3.65910344861366*^9, 3.659103495326152*^9, 
   3.659105752347451*^9, 3.659110233690536*^9, 3.659881077936741*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Amax", "=", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Gamma]", "m"], "+", 
       SubscriptBox["\[Gamma]", "g"]}], ")"}]}], "/.", "Parms"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dmax", "=", 
   RowBox[{
    RowBox[{"1", "/", 
     SubscriptBox["\[Gamma]", "m"]}], "/.", "Parms"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.659097665364066*^9, 3.659097749965571*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"dAdt", "/.", "Parms"}], ",", 
   RowBox[{"{", 
    RowBox[{"A", ",", "0", ",", "Amax"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"D", ",", "0", ",", "Dmax"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Active\>\"", ",", "\"\<Dormant\>\"", ",", "\"\<dA/dt\>\""}],
      "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "Amax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "Dmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", ".5"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657836908736711*^9, 3.6578369297571297`*^9}, {
   3.6578369696376743`*^9, 3.6578369786476393`*^9}, {3.65783706367459*^9, 
   3.657837068698104*^9}, {3.657837107736948*^9, 3.657837151999578*^9}, {
   3.6578373168521023`*^9, 3.657837337706089*^9}, {3.6578374473695393`*^9, 
   3.657837478679192*^9}, {3.657838884437954*^9, 3.657838928303049*^9}, {
   3.657839532485478*^9, 3.657839580275837*^9}, 3.6578468279122057`*^9, {
   3.657907260020049*^9, 3.6579072612741623`*^9}, {3.6579081764531603`*^9, 
   3.6579081786430893`*^9}, {3.657908555030221*^9, 3.657908587019766*^9}, 
   3.6579098964949837`*^9, {3.657915124988982*^9, 3.6579151259886713`*^9}, {
   3.659097400494506*^9, 3.659097410517885*^9}, {3.659097441954111*^9, 
   3.65909746042412*^9}, {3.659097511823138*^9, 3.659097512941436*^9}, {
   3.6590976103063602`*^9, 3.659097644067556*^9}, {3.659097686584633*^9, 
   3.659097700982408*^9}, {3.659097763311123*^9, 3.6590977675748243`*^9}, 
   3.6591036007449903`*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJytvXlUT9sf/595iivzPGamWRrUOTIkRIaIcEmiKFOGzMp8jZFZJJJMSaJB
mlOkQaHelSFDZq7M0u/2+Z3n69zv66z3+q671rd/LI+113nv8zj7vPber7PP
Ph2d5o2ZWVVDQ6NNTQ2Nav/8W9613LXB90TLlVE//f0+F1m+2nvoT/8pPpbV
Wn/J1desJoKvcVm583ROnHD5dJ+++pqNiffy29i404s7wtMBj9bY+LYhXm7y
a9q1dnlCPQ+bZ3qanYkv/T07I80tX9COPlHXIrMb8eqH64xKnlAoWNT+pWvj
25v4yQbFz0KeFQlnQyr/9Ig7THy+e3mTYqHf6AnX9TQNibdZ0Wms0dNCIfFr
tawI977Eyxb59ngwrkAY5R/6pH9mP+KPBxo3dXG5J6gGTfmcoGdGvPBV/WbF
LbKFWa/r1Lbx7U/8YbaBw9oHScKn3RGtMj9ZEvf5kBzlVD1QGHDk0r6QEJG4
hvQHzxu6L7gx7B9PR846PdSxnSbAM/iMxJIZ3n/eIM/gBc8zcjpOu02ewRtl
1B7Vq8dd8gx+a1Vxmm7iPfIMvr9G6cR2vx+QZ/DFzl0qvuTnk2fwWYf2RUaO
zyfP4LNPm29x8bxPnsHX/dXEo9wglzyDj99ulfVLO5M8g6dfSnyX0yWRPINf
0gorLgsIIM/g8AnPnMPz9hVJmZXn93n78OZNWniQZ/B5V4eknqpxnTyDO/Yb
HdAyM408g/tOuzzokE42eQbf8utjxu5mueQZfO8857mLjuWRZ/BLkXU7CGl5
5Bn8UcHT0rI9ueQZvOPdv1P2VmSTZ/B3g1w9LVrcJs/gN3aP29BlUTx5Bk81
8K+6SThOnsHhDZ45h2fO4Xmufmn7q//UK7ZRq52rQz3JM7j2mY42kfujyDP4
5Y0N19QxSiXP4N+ff/WpO/UOeabyywPz3ztnk2fwnw9Wb0wyzyHP4OMa7Bjq
czmbPINv7HtCcDiQSZ7B1//a2WJ1vTTyDO5Ykt7vw9ob5Bn83ekmtgZRR8kz
OPzAM+fwzDk8cw7PWl3eTag8XiPTBj/KGnuRZ3CfA54vY5peI8/gD3Przf24
I4k8g5+ol7z9wbh08gy+7cOz/D2TM8gz+H4fD7vOQRnkGTwtaerHjfq3yDN4
p/CImNjfyeQZ3DTwjbNf6xjyDN7m1Zu94z8fIs/g8ADPnMMz5/DMOTxzDs+O
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
8aPJtlba1aIoztQ1nz1nnkpLvDp+5/fG9W5SnD+wOdW7mkYd8exlrc3VG2dT
P2slrbvQSzcyv7cpj8aTP+eez3PxLRRevtNrVjFDzt+e1vEIrKLRUrys7XDz
cr18Gk++vOr6fc/JxqLPlTbLrAMKaDw/XlqHs3lc1CgDfxXNp3L2xg9boKoi
JlTRH+VZtZDyBj5HnxRM8H0j6Fxfu6T+HZWcNzs7T79rWitxjdvMwoaxcl40
12jOpmvuTcWqvqseNBmYQ3mb1rEuRcMaNRQ9dhZ9ezj1DuXNEnckuUS51xCt
mi/cNahmqkDzUzHhh+/THmLdLSbL6p6X85BZ1eO6FP5z3mZLty91qJZCPhek
XbfrskVbnJQSWrXg9x3y2XhH9AoPVUfxQ4vEd+ud75LPmacW2s5zbCeWFtas
XhYq57f9fycM6JLWU3S81Pjbq0Q5Dykkxs31aN1ddHvc/klS2j3y+WhT7P6r
7l3E8+1rlH02vk8+14yISdCI6yR2nZvYZ3W9++Szs1bUW5tGHcSslEk7p1jf
k/Mw1xM3Xz3fS9zXZZjHkMEZ5DN8XfxlDY0eYsvLdVQFuqnk02HIjWKbMV3F
6lFfdMxzblAe+EhmlFHhF/k5LOLDmfOTtapdUuZ7YxrPuqJqZiTGD9txxu2m
nG+s/+XZMI04A3HvvtTqfh/lfOPUB86PKs9PV3t59cCMW+T5YlTJYptGemKr
We/P6PaX873lpsnNCpf0EUenL//+9Ntd8ly28MUD7S1GooeFu267pXK+cbC9
i4eNgaEYpRk/1vJtDnne1+9ZNQ+Vvmjx6u2xK+k55PlZS+eDvuv1xLK8T43X
/5FDnt2/JU/xcNQRizNzLp6JziLPOjmzfrn/NBKrLq5hOKN6PHleG/58t+9J
Q7G2d3D32sfkvG5nr6cxqi96ijjwKiLlpIaoq/Dc3jLq26kAZV7XqZb7W3dz
c7Fj3cnfozLlvGLYy9fevk9NxYRwi4C0PDmvWO22W4ur201E1do1TZ19b5Ln
cRdenq+s71TXRfnn2t4hzyd3zR6o8aiv2OXqti/Z5nJe95DL24ZXz/8zn9id
Vnho2B3y/Gro3CDVeDPxjYfGoVnN75Bn816vzTU0TMW5s18GPQm7TZ631nfL
1j7TT5y0en01zbbp5LnwfamLzRhjMSQ0+2KJfQp5vpvsbqTRob+oWf9T60fP
TpDnLsFv0rTTzBRxeOnWOX/aLJSfp8P/zbmvytxbmyj8txrlutU3SX5eD/9X
Gs0wmrlYmdf1WRXZSENvgNgnNWDWzwQ5r3ju3bIpvutFcWvgw4Nv/rxB/oNv
zLezCRPEyYVxfdvaJpP/7wHvn7k7WoqTqw3y+PtaGvm3We+xorJeKUO8viz+
dJv8tz/vdVLbdYAYeLrM9eORVPI/tJ3p+4jromiWGHV42LAU8j9/5zfTyvWJ
Jj8N2o5JSST/ulXm17maYSmeGDXlXS2tOPIcU2hqbHNCmVd8Zvt9reqLvH4A
nhvcuHbLfbjM4dl92ofeGqKg8HzDal6C9kt53QI8T6rpOvfrQWX+dvzSGB2b
hEHi9Wo3SicMkvOKq0tXeKmaDRLNVNF/GGtEk+fTE82T3OcMFMOMLWfeKY8n
z5npPxpoxFmJ+kfsGukNSybPX82jJvo2sRKbt2v6hzhTzt/+HbQyzv3nIHFI
jGNN8ZmcV2zVon89DbtBYlhvp4nDn8eQ54Fbftr7nhwoXmy5YPCiY1eoPe+Z
s/x1hK0VnRc877zXf4yvkTJ/eM361xHtLfI6Cnh+fC36RUTRQIXnOj1XGNgY
yByeDQ6brVJtlH8XnitW9ssZ9FCZv+1R+fhu3FBxiWdP4WCBnD8c82S1n/YZ
a3Fnw4Yn522LIM/Lx1o+iigfIl5p/976/dDr5PlEUnlPmzFDxHuGB5NnZseR
5/S+1xerggaL/cveGFfNiCfPycfXFEZsHyp6HiufUd86nDy/1RK62TyxFvUC
thuWWMt5Wouy6zHuf8nrQ+DZZeaqWhqPlHlapyzBQ5UyVOH5rwEV19xbyxye
w8Niq2nMl9eZwHNh59UjfZPk34XnGn4WB7Vbyhyec5aYvdu+QJmn/eWW4KJ6
Plxc92hDTtRQOU+oXbjukrv5cHHnwMLxB6uHkWdb2wG/KnYOE0Mz80v0vSPI
8+JYDWvfpzbi8b3mDbsdvUaej+rG7dY2tRFdfKsULrO/Rp4PHPL+VtF+hNi9
4XuXXrGHyHNcPauBvp7yuhe059KVVXZopw0jDv8N38U9iGgrc/g3/XNtZ5uF
yjxt33SrrdoTlXnCqeZV8yLOy78L/5vOxbe3qSpz+L/Ydp2barz8u/D/YId4
xf2sMk97ar5F3fvVlHnaO87J3tpeo8RH1tknYnbIecKveeszIjJGiktKRTuX
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
cw7Piuc1kmfO4ZlzeOYcnjmH5ybsuQB8cg6fnMMn5/DJOXxyDp+cwyfn8Mk5
fHIOn5zDJ+fwyTl8cr7E0ybhbIgG5a/yRp4pOnA7WnAfd7+Xh0qL+J2IGVsX
vksX/N9tWbJxemviCW2m1VwWliPMHuQ/LXNRJ+L6fRMKj++4J6yT8plhbH3y
oWK7sy++9yJu/bpjWmiPAiG/qX2p11Q5j/d+c/uH+0vzhZkxVX5W3DAgHlRu
V9d16ANhVR3HDpo+cr5u3NxRx9NeZQl1QmsZVq6nBN9626RZ2KQUwW98+OAW
Q+R8XZ8iz97DBoYKncqnOfiftiQOPw+yN/atXBfIedcq6zqdDWlIeaoP0702
DLROFRwOG7on6rUibjP40duvHllCcqtPKndVR+JnQ/vpmKjuCl/DT3XdOL0X
8RBN73dL9t0Taq+r6FK5jhZ8cLmnx+JnecLebudMMhcZEP876XC1qXl3hXNS
Hhv8D2mdsEnrsPnTD5gSv3awTZ3RIVeEpPipPi++myvybHaz6+2rXNfIOfb3
4zxByicjv+QnrRNuNLRohsY/vsDbzvyuMz/4ttDpo/UEzYEdib+Ynxa/0y5b
mPtgbKreNl3ikyOeC43r5QgJvuOX+HczIP4joMbqrs0yBZeNky/ojTBV5sF6
14mPOG+u4KvvXrnb/w9lfqymhf6i6SbK/Nitso2TLDKbU56nZ5pbzQVJN4XV
qUdyQkI6EE98/U5nVFGGkCbl+cFdpHWzH8s1wt1V+sR9B2p6ad1NEToeuPx7
w3RzRR7pvOU0Lc1ECwXHfpWcq45+tK1cR478ickan6kVbmlCe9ezH/vv1Cc+
sWjfh+8J1+l5liKfc6buqMrnc5zPtrs6ffoDQcHrNr2yLaSnhSKfsC96+jG9
bYKCf2v1f+YTdkn5hAssDxAr5QEesvm+oTTfr61mXt+Rzd81Sv7/+bsZm6eP
kebpIVLc5vNKYzXz8QQ18+6RaubXBWrm0S5q5st/q5kXJ3XVLKoQBMW8WFQz
L3aT4jnmdxebnPR/f/m04CLFc/AJHlcaPUoLE/ZL8Rw8QKc0ZL5FuOAsxXNw
o+Gv9p8xChX2S3Gbzx8fSHGbc2cpbnO+UorbnNeW4jbne6W4zXkHKW5zfl+K
24ryUtzGfK20vEOnIw9DhDFS3Abv0Ez/xDLrECFeits0n824sX+4+1HhkxS3
+byvphS3OfeV4jbnxlJ85jxBis+cj5TiM+ceUnzmvL4UhzGfev3yxe/O4YeE
DlIc5vMsNykOc444zPlMKQ5z/rcUhzlHHOYccZjzVVK85fOXD1Jc5byDFFc5
PyfFVc4RVzkvkOIqH+d3kOIq54VS/OQc8ZPzOlL85OPb/VL85NzF9c1uM827
Aj1/1H99scVhXyFZig98fILxHueYj2AceM5+lXHEhcl0HD4+xPhH3TiTHx/j
Uj5OwDiW97MY9/J+DeNk3u+cVRO3MT7n9zvG8/y+wPiftzfMF3h7oO/98es4
fFK+l7+xXP/OQ59OTt0nnP3DoXriB/l5yrGlVTtH7zglpErjChy/3tGd+fd6
zhECG/zSTNKrS8df0tv7TeU+/I+l/ZnRHrK6ZfV+9dJG6Ce1B1yXRpbdPjy/
Kgqrf3+5cGSRheK6lJVFjk10UI73XvyMOvWiv3IcdXb+p2fpzQ0V/bjR6ORf
g8r0FP3RwWm7Vm9b10Phf3/fFocfm3RR+E9ac2xr2aMOCv8mjR78lfm7mqL9
73Vd8eSsjrKdaHv122iqrWwnJRvv+i2Z3lJxHTu/qq658GOBwNuzOm//1YO+
tL8lb5//1Y+6+ntYzl71MFVL0Q7VeVN3vh+dLtTf2FFe/+BpEzFM2yZPyD1s
+udw318C2smrO4aX7z29IhTPGlFluX9Xaj+dPiX4OJXmCR3uOAy3zzMiHj7j
y3k9lyzhxshHpkLmVwHtyunNjzptvocK5pYBK1vU7ErtbXTNYeuy3+YI4/76
EaCd1pP47YW/7ct73RVGmlbbUvl+ILjLhlNBPyakCgUPLx4OeWVM/GOfSZ8G
X40Ujkn7t6OdhJi65CRNOyMYXQluP8xXU36+PG5k7Vlv44T9Tb58jXDvQlyY
+jZOo02WEDp9VNtEvZ7Ep5nrVGzKzRRWnTyf8qm/EfFbB/u87u4WI/h9rPmm
osJE0T7ruzoW2/q+EdA+j8RdCxjb9IRwSrrfwSNNWndYtDhGWB+gN3q5fzPi
1yKaOP2tnyyUvRq2yD5Pm3jx54kbHj1LFzRNTh6YfqAH8ZBWB+75nUgTum4o
v+7uqEP8wFuLMe0DkoV+EdWbV76nx++XxMmXemReNlHwXCn+oP03VBVUS2t/
QGg5e9QPi8xadF9UV9U1aXn5qmAxssD6qntT4ql9vg4o+xAv2MUfe/epvzbx
2Gta9cVnycI/nVHjynYDvsDHzEA7IVHwdhxjqpnYh/ihb37VIuOvCwXLq1pV
vp/J78eZHS+Oa1HTWME/pjrO8p9louCrPWovr3z/kPMeUlzFfZ1bRet20YDt
wub4Ey+uuteg+334rjkOcXsuC59/+FiW9W9CPHiy9oi3VWOFbn7GWzQT2xIP
sho/7PHyeOHc/jJX35Py88r2Naq27GAcLyQ/td3pP6s78aWve2q7uMQIKwUN
98r3TnmcqS2tQ+N877aJvi8ilc8NOxjWPFX5/iTn5/LDrn5aqXwOaLL2z3Sv
YuXzvtVSPgdxTJTeS/ogxRMe32KleIL4NsT/4vCGa44LKime8LjXToonnIdI
+Q3Ow6Q4g37kxmGzxi4d/ARTKc7w/mWsFGc4R5zhHHGG88NSnEF8ztsePv3P
o5sEQynOgAc7zzoS7usr7JPiDI/niDOcr5TiDOe1pfEG54g/ivJS/EF/Yfvt
W9znzp6CtxRneD+COMN5fSnOKPL8UpxR5POl8Y8iny/FH0U+X4o/nLeV4owi
vy3FGc5HS3GGczcpznCOOMO5ba69ruZAfQVH/FGMz6X4w/nfUvzhHPGH8+1S
nOH99TcpznDeU4oznF+Q4gznKVKc4fyR/unwkJ59FBzxh3PEH84RfzhH/OEc
8YdzxB/Ol0v5Dc5HStcL8bzjds33gTXOC8XSeSGO/ezecY7R01BB3ThN3fjq
v46f/+t4Vd14GOtyMU4rSywYmVos7y8Nvv5Kb6dJCfI+0uBbbF96rdwg7xcN
fj3o1x9TR8r7QoNPdrH7lG1+n97jAw9j+4qAr3Lt2nOZhryvCHh4k775d1oW
0Dp/8Ald1+ddnZBP7wWAO/s3bm8YJe+fDP4xt/66/NXZ9H4BePcFob3ntUqn
fCat4627reSYhrwPBngTg5KtIcvl9xlxHVcEJZ6PKpL3MQb3zjRdtElf3j8E
/KLTAdf+s3LIG3jdQbku1gW55Ae8drC1YcEeeZ8Q8B+elr9SDe6RH3CH4MWN
hn7JJT/gHazeLp5UnEN+wJuw/UDAT64oWrj1YhT5AR863qbLwO3b6H0H3p5v
sHw+3/cD/I9qDX7vtJP3/QA38H91c8LKLPIDbh3Q4NF3T3kfD/DMcb+1f1vL
+3iAl55pa990dxZ5AL+X/uPkqvJbdL7g3QwHGIaELaDrzu9Hen+QcZwX7tPr
fUftbTRb3mcDfHPYc8dprTPovMCbrq6Y+rJeFp0XuCvbNwO84fhvZoLdTTov
8O0NN7vGGSfQ9eJxg94/ZRznxTnqjzhzu9tM/b+M5X0qwEvCbVN7Wd6ieoI/
vzDowuG3sVRP8Jsh1Rf9yApV+xwB9eQc9VQ8d5Dqg7h9fW6dwt+TU+g68vE5
jsM54iTiOd9PFfwy208V/ArbTxV8FttPFf1IRGeDX8M944mjfBrbZxV8Kttn
FfyetM9qLTXjeXDeT+H9FM4RHzjH/cI5riPn8M85/PN60j4VrDyuC+YFJ1L3
3/GylvdPAG9UPntKXbtLdF3Aq4Zuqh3QIJyuC/ixX6dL1/55mfyDq5L3/By7
4QK1Zz4fgU/O4Y1zeFOs05O8cQ5vnMMP5/CAec3MgDlT7zaX9zEAb9P0lU9k
/FnyAG4QM6exwa4g8gA+ss/jlstr+lFc4vMm2k+GcfjhHB4U6+skD5zDA+fw
wDnOF+Ofyds/DjXY5U/nC+747q1mz/pb6Lz4eAnnxTnOi3Ocl2Kdm3RenOO8
OMd5cY7zwrysSpDKr5bPYrpe6t7H5xz1V6wfk+rJOerJOerJOX1PhK+bwndD
GKfvcTBO391Q81455/R9CjW/y+dHOD7nOD7nOL6698r5PKKWmnkN4i3Gk9Vs
2m7W6ZBH+9RhHJU2sapVcM5Viv/grbST7ON05X3ewMvaxH7M35NJx8H4ZJ5F
3yq1LCLoOOCNA5+X1rG7S/0IuMd9E61DOnfp+DTOOX2hOOthEo0bwXWq+H2t
qH+Vfhfjh3Htre5PPBBO8Rn81zD/wLk95f3bwQ8F3Fi3a24W1Qfc6f2nTfMC
Mqk+4A7TWlzwGRpO9eHjFtyPnKOeGD8sq+iedPyf/hT1BF//+7FtrGMcxU9w
7WF6uXY7kqn+4M6Cvxhc9xbVH7yubsk37eKbFGfAN74OHp7yI4nOS/F8Sjov
znFenOO8MJ4pLHqZquoo70sGPsmpS60m9a7TeYEPFC9dH5YoXxfwK2Y9t5wx
SqbzAs90FxaPa5xA5wW+WRXy1XpJFJ0XH1/hvDjHeSneZ5HikrpxGs3HPesk
Nz1+gc4XvDR52pZjoyLpfGm8Mcdy5qrHN6hfAC/JbWCe4y3vTwU+1G1IlM2F
WPIA7jpB68fPdfJ76Hw8Aw+cwwPn8KB4/0LywDniFedrWH7VRMqvoj58/ACf
6E89Xke33vha3oeH97M4jmK9vZr8Ko6Pfk279412Vf0O0/F5fwfPnON3FevS
pd9Vl/dAP+Wx3GP6zWZ7qJ2AG5UFir1jfak+iud9Un04R30U67r/vf/Svziu
L+e0D4PUfzn51Ku4fm29/D0v1q/R97YYp+9nMU7fyWKcvmPF8674LhXj9P0p
xuGT94+oP+eov+I5o1R/zlF/znHfcY7zUqxbls6Lc5yXYn0y9o1kHNeL9+/w
wDk8cI74wzn8cA4/nMMP5/CjbhyiWIcs+eEcfhTrjSU/nCMucY5xFH8+Dq7u
ODy/hN/leRiMu3h/AT98Xgk/nMMzj5M4Ducor3g/SBof8riE665u3E7vh74K
XTQtNIT6WcT5JTHRRe8yT8nfB5TuR+fIVy8DXzrReAzttmp7u11/Th4v/H93
RdG7
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwt13mUl1Mcx/F7f3d+obKvTbbsOigq7SltOESTQ4WWobRMTYtKU00L7Sm7
iuzK1kI1hdIiQpZWHJJjQo7DFH84Dhren/N5/rhzX787z+95fs997v1+v0+9
4tKiobkQQqsYQqIv5s/x9FcWhDAsH8Jb/HMQLsOb8T24FK/FA/FDeD+ehcfh
9/AovBC35Vwr8Go8mfFd+C08G3+JK/BUvBuvwdPwHrwSj8c78Bt4NP4cj8db
8Gg8A+/BU/B6/Bj+GtepEUJLrnsxY4W4Fa6PD9AOckyin0B7H4/h+H14J/4b
78nu93c8He/Gk/E0vAtPwiW4Ag/Alfh7XI2X4bvxJ3gpvhNvw+toJzK3dQp8
r22Y29ej7/UqvDT6Xhvj56PnqRleEn3fDfBT+DJaBT6B/kPO1Yf7qsv9taNv
wFiR7pN+IcccQ38J7WV8HP0ijj8O38kxw5Kt37mW3zmLa3yBV+FJeKfGaUfw
vS0cW8x4C/rleka0POPL9ZnxEo7/lLGP8Cv4R7wXb8V/4d3ZOjmE38bz8Ff4
Z3wIF9CvoA3HnzG+ES/E3+I38Ti8vcDzeja/eQ7XrmK8ms819dxoq3EVx3TC
pfga3BFrUXfGN+l54664Ky7HRbgDHoI74b54Ee6Ne+P5uBe+Fc/A3fEteDq+
FffED+CeeCBeifvhHngO7oGvwSPwtfh6PAZ30b0wdydzLy1wP3wibob745Nw
czwAn4Jb4mv57ki+ex2+i/ETGG+Kq/ETweu5C20sx9zE+A34XnwjPswx84Pn
uTafFwfP2yDaKo7pz9jV+ow74rZ4AG6Pt+KX8H78IV6Mf8Db8Gv4AP4Av4gr
8cf4VfwT3oyfwt/h7dn8/Ip3ZNf9DW/CT+J9eAN+Au/F7+LH8Td4cPZ878ZN
ca+c560Jvj3nuWqEe+Y8J1fgHjnHro9pDVkvK+lbMX6X9h5ujftp7+E2uD9u
i9vhgbgDbo774FZ4V7bfD+LG+Lacn1cL3Be3xs1w75yf10HmfCbzXJlznGuP
34z+vADXymXxEh/OxnX8v9Expgz/ittwntm4Gp9HG4aPpG/N+AR8MDo+jcO/
Re/Rjnh19FrugFdFx8jxuApfQCvXGqBfwHg7vAKv0drHn+NzaMW4RvRaUC4Y
Fr1GtFbviZ4nrcMRuBHXVf64NDk/DMLfMD5XzwG/FB2zS/C30flhMN6LP8BD
8XfR8XgI3odPj46BIXovtoXL8Zm0TjhH34TrFdB3p69i7A8fHo7K5kpzVqjc
o/kv8DF/0n6hlfC/v+gbKabyv/acoxvP8D/G6tMKo/NGPfqO9PuDv1+p/Zb9
Bv0W5Zmz6Dskx/s6jE/h82rtK8au45yP0jdlfFmBr1+V/c4l2qP0GxSntXfx
RvyOYhnfeZjvHpvFc8X1WowvwW/QX8X/L2KsM/1hxk6nncbnwTnHkDE6PnvW
eubHZ7lAOaEl5y3OcpNyl+JDzZz3QW08PTp2Kv6Mj973vfCn0Xv9drwtOt/e
gNdFx4k7lFOi97Hu693oeNAX74i+X62xz6Lj8fn4EVyGz8UPRt/XHNUeyTFG
63BndMy+AD8aHRu64PXR8aMIb47Og8fgWdG5RfdbN+fcrv31D+PPcs9bgmOC
4lM3/F50XaC5Lcz5+fySPWvVL9qztRm/guMO4Muj849ycf2c152+ozWiGHwO
/bzoeK+c9UB0PK6H50bHLS4fRkbHjBr6XnR8qonvw3dgHlMYFf2sjsITo+Oc
9lppdG7Rers/Oo8pp5Thpvzmo/HM6DhXC0+Njluq74ZHx60j8YToOHcEHqd9
g0/Dk/FEfCF+THtRtQaegRvjf3A3+uaqs/B8xmdqjvCz0TlQ9cwL0fnzcvxM
dB4rxNOic/WpuDw6lzbBL0bn2Ib46eh9qP1YHVxTaD0fYixm8UFxYm5yfFBe
/jKLjarr1ifHE+WO9nnvDdUq5dqzwfWk6pfz8EOqx7SngmvUznnPhWqSdcnr
X/G/f957VXWO6qartR+1tpP3gnLlK8nrU7ny1eS9oLX/Mr4+OFcW5T2/qrXm
MH5ZcA08Onmdq24ZlbxHVJ+MTN4jytHDk9eScvSI5PWmnDU7uVZU/bwR9wmu
Y2/Me4+pjtpKuzi6Jh+Sd9xXbaa6TzFqMf+bkjwnqr1VfzXCz0XXdzrndvw6
x3QNzvXd8372qiEfyXKQ6qIFybWu8viTybWu8nufvHOParyHk/OU6qVnknOl
aobNyXGjflYzKt5WcN2nk+dcNcNC3Dq45n8w+XfqnUL5X3tX+ei2vPOQas55
yflOtdyi5HirGk/1pu5lk3JTcu7Q+86u5Fys9521OldwDVORHANVw7ydHPdU
f36RnGf1brI0OS6pRlqWHGf0PtKQdkZ0Ld0A143OC38kx3m9Q/2exRzVBXuS
87vep0qS945qmDHJe1O1rmpnrdvHOdcmxkuD38vuT95TqnvHZvtUtejU5Lys
Gvi15Jis9Tk0OY+oFjqEZwS/1zyHbw6ujSvx2OB3pR+y+kTvRwOT97LqpTXJ
+V318KTkva9a9J3kGkA1Z1nyvlZNOzk5bqh2Lc+7JtC7w4bk2kDvWYOS45Jq
rR+zHKH3vonJsUJ19ZAsRqmu259cX+l97X+jvNbv
          "]], 
         Polygon3DBox[CompressedData["
1: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
GhB8d/o/CVBPUg==
          "]], Polygon3DBox[CompressedData["
1:eJwt1mdslVUYB/DLvVSUFVdAisagURMMzsiQoYIMjYLURFkyKhQoLWW2bFpk
U4ZMKVuZCrLLEJDlCiDQUjCylCFfWPrJYCj+Tt774e97nt/7nPte7jnvqXXS
c9L6x2OxWI6kyJQKsVh11ztSw7hBIha7XTEW26HpuPqEnNK4kacYPymNjWvd
F4vVDtG31tyH+M/mfeFaV31Pahk30jvZ9XH1Xalp3JD9pneGuavUq2W3Z1xl
a9l+9QH5hZ1nC9km9WbZz06zKWy5eoXsZP+yH9lF9R9yjl1ki9khdZpnL/Pc
EpYfj54Znp2mryHrzAaqDWO99LUw6MMGsIfZwET0jJ/YbXZLxoTfhT0R5slr
etJZI9ZF3+AK0W+cwZuw7mwku5/1ZQ1YJ5bDlLGe/tOU9WCj2QMskzVm3dhw
Von1YdfYN6yE9WAb2F/sa3aSdWfrE9Fvui4erWNYzwxfqL9kp0TrvDM83/g7
vbvlJtvO+rHD6krm1JEmxqnW+4Drfvlb367w++jboS6WG2wby2SXjVcZHzW3
i++yxv1dslOuu7fVvb76LhmvND6ir7O+te5fYavZMfYJW8feZBlsEqvG+rO3
WV82iD3CBrE3WC82gVVl2WwLq6d+VA6zVPWvMkBfARsnm3yXb1mD8F3VH5n3
ItvKXlK/LNfcW64+Jv3MzWPDZGNKtK/Gsnnq+bKNnWAj2Cz157KFHWHpbKw6
XzYk93hRPNrzYe93ZxfYInZQ3d5zl/o+U9lldpdNY/+w+qwjq2cc3ut0177J
dQ3vbVirsGZFxm1cH6wQva/3jCuzcn11ZTurat5meT7seSlmVdR3pETPf2wy
u2RuOfuTVZYF7DarGPZUPDoT1oT3nY3TV6a+ae5odpXN1tfKtTorSv47EuyW
vtTwbrJy1szcnurP9FVhWawly2RDwnqywWyv7JFb7hW7l+WzuhkvMd6mr6W+
FYlozQfGo/UJ69Q6eZZMjUdnSzhjOrAzbBrbom5u7ixzu8gz6qaJ6N0PZ0C5
FLpfzfU5aZaI9kZWPFrvsO4tfN7HbBJbGvaR/hmJaB98Go/2XtiDjfUdZb1Z
YThn9Q1InpMzWTHbHt4Rfb2S78+JlOi9C+/fObaA7dPT1txFiWg/11bHpRWb
y0pZQTza42GvT0xE+3RkPDpLw5nazueeZKPYl+pX9Y3T9y5vHtY+Fp3xI4yP
68vVt1jfC2wM+1Bfi3CghbPeZZLx7/rm6dvD3mNFrIxNZBvCb8emsVNsAlsf
fmtWyM6y+Wwve58tZB1ZIfsqnLtsNuvAJrNl7BU2k6WxMWxuWCM2geWyw+w8
y2an2RB2kJ1l/Vgp65PcT6X+PfvU30snNp2t1Fdf3xyWz0rZdTaSXWZ57Ad2
gfVnZ1gBO8VusFHsCstInpknU6LzN5zDvZNncElKtK/D/s5Mnrdl7KD6kAxl
h9g5n5fl88pYOzaMzWBPsfywbmwwm8hqJ9etNQv/IzCK1WS5rA3LYWPYYyyP
tWLZbASrwYayruHvPNvI3mJL2DtsEBvPUtlw9gEbzmayp1kBa8vy2PTwd4WN
Za+zriyX+RMT683as9FsDnuWjWf/A2AeK8A=
          "]], 
         Polygon3DBox[{{1200, 832, 524, 154, 271, 1223}, {963, 962, 1322, 828,
           837, 1323}, {1321, 827, 836, 262, 98, 942}, {1199, 826, 437, 438, 
          855, 1328}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1:eJwtmHmUFcUZxftVVz9AZBlgBIVBcQGNuKAIGlCDGyiJ0SgaUJJIMJgYNago
xiSogEvc2YxiRAaIDouKek40uCuyg8uRVQQjIAOSyL5JzO/OrT/qvLr1ddfr
rvru/W51uwE3/ezGkGXZTaUsi/xeW2TZfPp96U/Js+wkBhfS70B/OrGW4FfA
jcD/APcBdwNP5Z7LwdfRVtK/jrFXuaYB8cn0D/AnzxJrD34PXEVsKvgxWgNi
YxnbwtjlxH9Iv4Y5mpazrD54Evg7rpnAtYeAXwYfzLVTwHfQNnHt7Yx9xNjt
4FrwbeDF4IHgeeCfgyeD7wbvAt8DXgW+gvm605/GWB9iD9IC//UoY18Tvwe8
m9hw8OfgnOufob+La54m9ldaif4jjG0g/mvwXK6/EjwJPAi8AjwI/Ar4x9zf
kf5TjDXh/eqBq8H7meMZrh1G207sLsZWcP2vop9dc2ruG/j9FvwprZL+aMYq
uPfv4B1c/zTXf0L/wuD1HUNrFvzMO4lfRfxC+q9z79WF76l79uC5htP2EBvB
2GpiV3P9RfT/xVh/rXXutVjN9Q+DxxP/GNwLXAPuD+4NnsX1vyh8j+7Vf47j
3griM+iX6U8iNpK2j/i9jK3RejPPmeDutCfTHJpLz/AE8XHKAa6ZCN4DbsR8
NfRL9CcSawd+E9wS/Dx4CO1r7r+VsfnKWeI96T/GHLOIPaGcDt6DvblzWLms
HLwffCt4A/gW7QG4E20j/VraKblzRrkjDjwA7sH8VfRPZ+xd+tdEc0k5qFx8
B3yd5hfp2P9bGFsPXke7mf5PiJ9AaDy4d2FOaG3WBnPlSdqhwZzaT+zJxKfT
g/nwFPh98BnB/BwA7peZ0+J2Ffh1cDPufQ78N1qrYI7tY+w28EauHQJeCP6G
NlJ7I04Q25w7N75Qzhfew1Pov5F5b++Mzg9xTFwbBr4v8x5rr4+mLQKfzz0N
eP/24CXgnuCG4Mj1E8C7ldOFOSQuPQueXZhjw8DLg7n3h2iu65n17B1oH6V8
PJj5jgEvBl8APgg8OForpBHSitHgF8BHJj4/Dp6SeY211sppzaU5jyH2WNIz
rZnW7pHEX+WkcnMmz3ct+AXwIvBzxPuAnwG/D3406ZlyTrknjoqr4pC08Ym0
PycE5/NN0XuhHFYuNwZPBQf+p7rwnmvv382sjdpz7b1yQlotzTw2WDOlpS9z
32/ov8jY4sLvrHcXJ6VtDYl3Bb8jfQFXgM8EzwG3idbEOm0K1krlqHJVmnZn
7hwaIy1P6yPNk/a9BF5S+J30bq9l5m6ztP71uG4ysd+DbwZ/xZzN2a/Z0lTp
CfcMVr4mfivnlHvigGrHf9J+3RjNdXFW3FXNOS64ZqkWDY3On63EWzD/e9JD
+tO5pgK8k992tOlaY+VytD5mjB1CfER0bSil/BMH6kk7M3NDvBa/B9Ea59bI
MmOjMmvnL9VK1qw2jB9PGyhtp30frNF1tSdYu1UTOtCfmblWrMy9PgsYu4vY
8YzNVf4yPg3cOenxyeDGZXO2fvCeiMt/idaTvdJ4Yn+O5rc0X9o/AzyA/jW0
huA/gu/OXJNUm/4UzX/VRNVGmYbx/GzjP8aDR6X8rAK34v9b0vrzv331ftE1
V7V3IfHVhZ9Bz6Jn+CK3pmutNic+zeP3UuKX0P6tdYr2FnU1lfjY5EeOTf5A
Gq69+CbxaxzxVzPngHLhJXkC8AzwQvBA4r/NkmcpzHFxqU1u7o8U5zN7AuV7
O9p8cA9wmXe7L3pt6yU9HJP8SYdUzzfmXr+V4IcKe5QltKHJu9wRzadt/H8l
890b/fzlVF/XFc69R1J9b0p8lpad/tb0vNKm1uDvC3NsbvI74p406EPwFZm1
SZyfk/yJtOBk7v9c60e/ftn7o1q3KFi/V9CWlawZC4hdz/U/BV9Mez56DWeX
rHFa293RfNf+rCIWpKnggvk20F9OW1qyRs7L7anE18XB+STPIb1bEpyPK3VP
8k+LiFXKTyi/ie+VFyi8Hp3A+1TLC9ci6cN+cU8aB24K3lTYUw1WPQzO54z2
cOK31voW6Y84xHWf5H6HFcnPat9+R39DZg92Pf01xC+Wj6Q/lfu+LFz7hie+
6x7d+27wnncmthm8jnYa/Unc04XfS+VlytZQ+YchwdoaGTub/jzGOkbv0XnB
NVR79xXXfF/yO2xPc5yY5tDc0gB5lrWZtUF8bBzM2WnS37J5JX59AN7MfC3E
FS0N+A3w88TOAI9lnm/BhxOfBm6iA0PZmjdbOUTsv4V1rSbpe3PwP/XsjO0u
7KmOBw8P9lryYPJi5/Ifb3L9MvBnJXN0Tm6NWJ/8l3JzKfjTkmuCasNa8M7k
52vBH+j/SvZ41eD9zHllyXukvdIaKR/WBa+darJqc0+ueSvaw6mWjQj2dq0Z
+1Dvyvgu8PTkN6Xhb0e/o2pZlvvdLwOfTews2hT6hzL2lvaa+Q7Qryo8X3dw
KPsMoLOA1mRy9JmnJq33lLQ//XJzTtw7jbYlswetjq6RqpXKafFRNU217XLa
7GgNrkr7oWcvgbsFP8Nx0ZzplPzbEeBzonNzPW1CdM0TN5Rfym9plLRKNbQm
WnO6Jv8hLdI7dU9+4QfRnGuazieqpw/SruL+fiXn3w5pGPGXiLcAbytcf+VH
5CeVMx2TX2iT/Ij8gzySvOxO4u1TfaxM/qVD8jvyQ6rnFen8I3+zpbBXq071
9BtwZTpPlKM19YhU/6W10qwi1W/Vplpwk+AcKkXvqfb2bfBR0Zoj7ZFH0VlE
NU3+9KPgWle/MLf0n/rvBoX/W8+0JeVjb+65oGTvKM/7Gv1emb1wReG10jvr
3VsX9mraA+1F28JrL8+Wl32mkt/9ONh/tynMVeWAcuGwws/eBfw//Tf/2U3n
k5LzUWNdkh88WvkJfjHznmnvGhdeK+2Z9k4evmfyy6dGP4OeRR5FXuVANFel
kdJKefReyf9Kn+TR5dV1Jjgl+oygs4I8fCdwAf5RcA0+QfwrrEXas61JTy7i
nc8p+aynGqFaoRpxeHTNVu1eAD4RXA98TvA3Dn3rWC/NDa5Zu5lnmXQg8Um8
0jeQyxhbla7fldsfbGRsbGGOiCtLg/VmU/Iznwe/78PR55tmyd9Js/Rfq4K1
7KHoXFXO6jyuZ1C+1AY/m3Jce3FQ7v0Xh8QleSxpuzyCuLY+1TPlrPJrU6q/
4pj2u0Hu/XsAPC7zNxidL6Xpqq950nqdZ7uWXKNUT44svHZaM63dEYVrk/ZE
e6OaofzYE1xLxCnl696U7+KcuLov5bs4pP3bHswtfZN4PeW76s3EaK3rlPys
NEFaVeTON2mK8m9Hqu/No/W2PvHtygX9b+aa3TZ3Tn0hbcqda8rRNcrN3Ll7
ic5HJXNE/l2aIz41za1FbaPft7m8amHOKzcPza0F4ohy97Dc3FGOrhB3cq+P
cm6l+JM7F6XBnyk3c/PxyOja3gr8XWENXar8zq2t8gDLpTW5vYE4tUz8y801
1Tx5vQnBtVAapNw+JLc2iQPiTovc3FCtPK/k+qs6fH/0eUpnBp0dxMm1qt+5
uaqachnXzg2uNapJqj3yEKpV4py414O2Ipqzq1VrcnNZnBF32ucpf6LzqTJ3
LZLmSfvOp62N9pa9Sq7PqtN9ua53qv/yAcoR5crjwV5lK7/9Gb+a1ihxsnkw
58TV2mivKk8sb6xvlPo+83Kw/98UvX7yyPLK+gaqb0+Tgr+f6Mx9Yqo/Oovr
G9O5ST+01l9Gew9ptrRbZ7QdpXQGyP0NTN+WRgd/G9M3mLOSPqqe6RuXviWN
Cf72tTPaK8uDy4tPSu87Mfh74OZoLy/PL++vM/Spqf7obK1vKEcFn7H1bUXf
mOq+NWkNcp/Z2gaf2XSW2xXt9eW55b3lh4dm/sZad14p7GPlkRXTmfPi4BxU
Lsoj6UwrzyfvJA4eHawJ4qY4c1KwxohLyvHOwZxV7uuMlIekqdKoaC+oM4PO
DjrT6GwzM/j8p2+6+rZYHfx9Te8kX6hvBXrXG6K9Y52HLJwv8lajgrXm/7jD
+RM=
          "]], Polygon3DBox[CompressedData["
1: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
47/xf0dTVrU=
          "]], 
         Polygon3DBox[{{1100, 628, 841, 312, 29, 891}, {1192, 334, 1219, 1266,
           698, 1555}, {1298, 783, 571, 197, 358, 1225}, {1256, 684, 844, 328,
           453, 1484}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0j1PU2EYxvGn0gqVCgWJgopQAd/AVujs4gsyMEGiJjAgbMbwEqNJQwAT
QgDjbuLERPwAFAo6mkiY/QQ6kDgZB2NQwd8THf75X/fVnvOc+7S58amhyUQI
4Q1+IObv+IKJqhCyPM1tPM95fsU34zU8yG95hCu8jcfyJy7xZ17hb/yaD3md
M8kQynyWP/Aa7/NPPPEQRfShFzew5/Mmvo5H7nGK3+vy3IhujOl3dQ1yD7IY
0F3lj/p6voY69Ovf6S7LJ3HPfIUz2NF38aiuli/hBLb1HTyiT3MnauLZqRDu
6nJyNSq+d5GP4058d5zClr6dH+qS3Bp3c+0Dc5V8AcdwDgX9fX1CPp/498Pc
Nm+6R4t8FN8dH/ItfVl/xvzH3MzDul/yhv60+UAe0hXk3/LL+B54Ne7Py3F3
XuJaXow78wteQFqei/vybNyTS3FHfs7P4o7yU3ZkmGHHham4ExcNX///x/4C
SiY51Q==
       "]], Line3DBox[CompressedData["
1:eJwt0jtPU2EAx+EX0cWFiYTJhMkFTCSAgigCXqAtbSktIModUTDi6uBu4gcg
bLDAJ4DRK5eEkbvcFAcHA7oAISQMPCdx+OV5z7+nJydNi/vfZEbzQgiTOlWB
jnSgch9UqCU/hEre0tfLIdxmk62K1bqj0ishZG01znd1T7W6Yc/Z7zvXqV4x
1x89p8H5gR7qkeL2T/bHzo1KuG7iN1ss+lxPbAk2a86eZEqd9nnX6eh9lYnu
sbVywZ5lTm1K2tu5aO+InqkuWyef6qZ37nb9LNrVrc/u7WGPvZd96leJe1O2
AedBPdeSe4eYtr/gS32xDXNEr/RahVr1Ox/rULFLIawxznUmuMFmbjLJlL47
p7nFFm4zwx22Mqtd5xz32MYfbOdPdnCfZd7vD8/0Syf6qwrvusLrnGMRZ3iV
Uzz3vTH+43vu8y1XuKxh59no9+Q04xyP/hv8wFK+4zVOeObv//+9C5FuTig=

       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{867, 1181, 1330, 1078, 866, 1331, 1079, 868, 1332, 1080, 869,
        1333, 1081, 870, 1334, 1335, 1082, 871, 1336, 1083, 872, 1337, 1084, 
       873, 1338, 1085, 874, 1339, 1227, 1453, 875, 1340, 1086, 876, 1341, 
       1087, 877, 1342, 1088, 878, 1343, 1204}], 
      Line3DBox[{880, 1228, 1454, 879, 1344, 1091, 881, 1345, 1092, 882, 1346,
        1093, 883, 1347, 1229, 1455, 884, 1348, 1094, 885, 1349, 1095, 886, 
       1350, 1096, 887, 1351, 1230, 1456, 888, 1352, 1097, 889, 1353, 1098, 
       890, 1354, 1205}], 
      Line3DBox[{894, 1231, 1457, 893, 1356, 1102, 895, 1357, 1103, 896, 1358,
        1104, 897, 1359, 1232, 1458, 898, 1233, 1459, 899, 1360, 1105, 900, 
       1361, 1106, 901, 1362, 1234, 1460, 902, 1235, 1461, 903, 1363, 1206}], 
      Line3DBox[{908, 1236, 1462, 907, 1237, 1463, 909, 1366, 1111, 910, 1367,
        1112, 911, 1368, 1238, 1464, 912, 1239, 1465, 913, 1369, 1113, 914, 
       1370, 1114, 915, 1371, 1240, 1466, 916, 1198, 1327}], 
      Line3DBox[{922, 1242, 1469, 921, 1243, 1470, 923, 1244, 1471, 924, 1375,
        1118, 925, 1376, 1245, 1472, 926, 1246, 1473, 927, 1247, 1474, 928, 
       1377, 1119, 929, 1378, 1199, 1328}], 
      Line3DBox[{936, 1250, 1478, 935, 1251, 1479, 937, 1252, 1480, 938, 679, 
       939, 1382, 1253, 1481, 940, 1254, 1482, 941, 1255, 1483, 942, 1321, 
       1561, 943, 1207}], 
      Line3DBox[{953, 1385, 1125, 951, 1386, 1126, 955, 1387, 1127, 957, 1388,
        1128, 959, 1390, 1391, 1129, 961, 1392, 1130, 963, 1323}], 
      Line3DBox[{980, 1402, 1140, 979, 1403, 1141, 981, 1404, 1142, 982, 1405,
        1143, 983, 1406, 1272, 1500, 984, 1209}], 
      Line3DBox[{994, 1274, 1502, 993, 1414, 1152, 995, 1415, 1153, 996, 1416,
        1154, 997, 1417, 1210}], 
      Line3DBox[{1008, 1278, 1506, 1007, 738, 1009, 1425, 1162, 1010, 1426, 
       1211}], Line3DBox[{1022, 1283, 1511, 1021, 1284, 1512, 1023, 1434, 
       1200, 1223}], Line3DBox[{1036, 1290, 1518, 1035, 1201, 1563, 1224}], 
      Line3DBox[{1050, 1202, 1564, 1049, 1212}], 
      Line3DBox[{1184, 1203, 1226}], 
      Line3DBox[{1208, 964, 1562, 1322, 962, 1493, 1265, 960, 1492, 1264, 
       1389, 958, 1491, 1263, 956, 1490, 1262, 954, 1489, 1261, 950, 1488, 
       1260, 952}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{367, 602, 1331, 368, 616, 1344, 397, 631, 1356, 413, 1463, 
       646, 429, 1470, 662, 445, 1479, 677, 460, 1489, 692, 1386, 476, 707, 
       1403, 492, 723, 1414, 508, 738, 523, 1512, 752, 539, 1563, 864}], 
      Line3DBox[{369, 603, 1332, 370, 617, 1345, 398, 632, 1357, 414, 647, 
       1366, 430, 1471, 663, 446, 1480, 678, 461, 1490, 693, 1387, 477, 708, 
       1404, 493, 724, 1415, 509, 739, 1425, 524, 832, 1434, 840}], 
      Line3DBox[{371, 604, 1333, 372, 618, 1346, 399, 633, 1358, 415, 648, 
       1367, 431, 664, 1375, 447, 679, 462, 1491, 694, 1388, 478, 709, 1405, 
       494, 725, 1416, 510, 830, 1426, 838}], 
      Line3DBox[{373, 605, 1334, 375, 619, 1347, 400, 634, 1359, 416, 649, 
       1368, 432, 665, 1376, 448, 680, 1382, 463, 695, 1389, 1390, 479, 710, 
       1406, 495, 829, 1417, 822, 831, 839}], 
      Line3DBox[{377, 607, 1336, 378, 621, 1348, 402, 1459, 636, 418, 1465, 
       651, 434, 1473, 667, 450, 1482, 682, 465, 1493, 697, 1392, 481, 859}], 
      Line3DBox[{379, 608, 1337, 380, 622, 1349, 403, 637, 1360, 419, 652, 
       1369, 435, 1474, 668, 451, 1483, 683, 466, 1562, 828, 837}], 
      Line3DBox[{381, 609, 1338, 382, 623, 1350, 404, 638, 1361, 420, 653, 
       1370, 436, 669, 1377, 452, 1561, 827, 836}], 
      Line3DBox[{383, 610, 1339, 385, 624, 1351, 405, 639, 1362, 421, 654, 
       1371, 437, 826, 1378, 821, 856}], 
      Line3DBox[{387, 612, 1340, 388, 626, 1352, 407, 1461, 641, 423, 854}], 
      Line3DBox[{389, 613, 1341, 390, 627, 1353, 408, 825, 1363, 835}], 
      Line3DBox[{391, 614, 1342, 392, 824, 1354, 834}], 
      Line3DBox[{393, 823, 1343, 820, 851}], Line3DBox[{394, 833, 850}], 
      Line3DBox[{819, 813, 601, 1330, 366, 1454, 615, 396, 1457, 630, 412, 
       1462, 645, 428, 1469, 661, 444, 1478, 676, 459, 1488, 691, 1385, 475, 
       706, 1402, 491, 1502, 722, 507, 1506, 737, 522, 1511, 751, 538, 1518, 
       766, 554, 1564, 865}], 
      Line3DBox[{855, 438, 655, 1466, 422, 640, 1460, 406, 625, 1456, 386, 
       611, 1453, 384}], 
      Line3DBox[{860, 496, 711, 1500, 480, 1391, 696, 1492, 464, 681, 1481, 
       449, 666, 1472, 433, 650, 1464, 417, 635, 1458, 401, 620, 1455, 376, 
       1335, 606, 374}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
ORwyGT+JvVz2gbsPfc7uxPj9ZvL6wyIpcOf8ARrxjADg7X0Vdwv3695G+PHM
NBf8Ps28kr0ZDF+ebY8kfl//bnz+Ct/k2tt+zTQLLZbKS/vxsR5/KaO3Poz1
ZK7FYYeacCKaLqX+cnhKC5KZtlJFY73aOfWsNHwpELH0ir0m+WIG9fJFOQmY
n5OVph81ExUQ2G44Nn/NAViNRuM+EdeBVrEsrg9+0MBx7+n6lBv0D9D3x2Pc
v7bSUqA8HnYdm+GTPuAL1ke3mkbi9oOSjUZyxzJA5YQkHKgNgJNrMjHPVv4+
fP4Kn0lbUr14KxXtPux6bdhlI1w4NBfWi/XnyJyUbyFNNCqUeaNnnacNgwuM
zryYn4s39+QHHHNGlzjUynbIm4NZZuVj4jqwlWOFjBRsgfloY/rzMQcg49vu
/Rzju3fQKdQfi4CShpIdeSzuwMJy2JWfaD84Om77qpYC3I+837io+sJtKbM3
D1f//nz+Cr/hRN9TvCURoQ2KS2dct4FhrJxXEtarNSm5+QPXA1F75df+UDUd
0DcmSGRhfoTcBjJGLsoi8W1AQ59vDnukptS+YrwvbelWMrc/yF007i/d7Aj2
SXubcjFO2/R62+T9eOiSUelhO+UOfVob3DLX/nP5/BXOOrBie6InClU6vVrt
GNkF1ze0PzyE+eG8OJvWcNMJHZHI0Aig0gWz16JqbzGOOmM1NLjsQD73Sdjb
ZXMgvcV04APRTpvSvb3PPwJsrNjZdY44QovuE/mj6//9+PwVPks7ZNthF4h2
C7u2LrtygZr/B8984nn2yC1XdS5ppNkdwKhzSxcYuEJur2D8OPNYDZmVP7Qz
czbFq1mA2cqEQvlvPv+P+Lv83rJPgk5Im63iuvA2fmBDZzzHMW9nKZ1O8Vbb
wcGsvr00dhdBa2Ou8+fffP5p/HizwI7sV+Lofv+CPe/zQ6A6n3d//Tefv/G/
KV70zIFBl64S3e82/HI7GuBDcXJy9AIB1o1cqH21q9GyhTfd7FFhxPqZzTt0
7q/T8537yeuYrS5BUga3SqWMMBgqPqJf+RPfUVjO41T+I1XI++GLH937jwNT
QzRZ1J/wp/0KLyFYXhy5V4Xsk3zNuJ5tB8W0Xp7Nf2H76qTohuJ0NTr68R3T
1i/CqCys13z1D/yr/1W8/MWaaq1eNSpII1z8SLkVptC7G4F/MI+5S14B5PTm
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
fwCFPmk2
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"Active\"", TraditionalForm], 
    FormBox["\"Dormant\"", TraditionalForm], 
    FormBox["\"dA/dt\"", TraditionalForm]},
  BaseStyle->{FontSize -> 18},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{914.609375, 378.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 33.333333333333336`}, {0, 100.}, {0, 0.5}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.2178125866822724`, -2.9638500958431844`, 1.0874397054957239`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.657836931096026*^9, {3.657836979936071*^9, 3.657836982052703*^9}, {
   3.65783705145545*^9, 3.6578370700966177`*^9}, 3.657837108109602*^9, 
   3.657837153621821*^9, 3.6578373383468027`*^9, 3.657837480017371*^9, 
   3.657838081355097*^9, 3.657838177636868*^9, {3.6578387954810762`*^9, 
   3.657838827251614*^9}, 3.657838873907366*^9, {3.657838920523467*^9, 
   3.6578389291497393`*^9}, 3.657838963661721*^9, {3.657839514832327*^9, 
   3.657839580892748*^9}, 3.657846829828395*^9, {3.657907253708971*^9, 
   3.657907262359009*^9}, 3.6579077140107517`*^9, 3.65790775890455*^9, 
   3.657908129374628*^9, {3.65790816281052*^9, 3.657908180046248*^9}, {
   3.657908577942292*^9, 3.657908587670827*^9}, 3.657909897730412*^9, {
   3.657910647600243*^9, 3.657910664359379*^9}, 3.657915127628393*^9, 
   3.65792013957889*^9, 3.659096961019764*^9, 3.659097349238636*^9, 
   3.6590974132511673`*^9, 3.659097446366354*^9, {3.6590975042246637`*^9, 
   3.659097513552291*^9}, 3.6590976451515207`*^9, {3.659097752475635*^9, 
   3.659097768029601*^9}, {3.659098029278887*^9, 3.659098048153483*^9}, 
   3.6591023710799427`*^9, 3.659103379103138*^9, 3.659103459746636*^9, 
   3.659103504452589*^9, 3.659103601612445*^9, 3.6591057574306087`*^9, 
   3.6591102374906807`*^9, 3.6598810822927723`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"dDdt", "/.", "Parms"}], ",", 
   RowBox[{"{", 
    RowBox[{"A", ",", "0", ",", "Amax"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"D", ",", "0", ",", "Dmax"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Active\>\"", ",", "\"\<Dormant\>\"", ",", "\"\<dD/dt\>\""}],
      "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "Amax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "Dmax"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", ".25"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657837117760027*^9, 3.657837121456294*^9}, {
   3.657837182667378*^9, 3.6578371864467993`*^9}, {3.657837631666966*^9, 
   3.6578376349936533`*^9}, {3.657839650301421*^9, 3.6578396868210773`*^9}, {
   3.657907720600893*^9, 3.657907721782737*^9}, {3.657907913866791*^9, 
   3.657907975483479*^9}, {3.657908188277377*^9, 3.657908209026576*^9}, 
   3.6579103257234697`*^9, {3.657910677151659*^9, 3.6579107003817987`*^9}, {
   3.657915131092536*^9, 3.65791513223623*^9}, {3.659097918023387*^9, 
   3.659097925021326*^9}, {3.659103569473693*^9, 3.659103573815938*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
oc72cvWRaYtf80yoC2VN/84epcIzoY4xVBK/ocuGe8K8e7fnUo2+BzMnzBN5
guZ8P/SKY8K8xvFohYVfOduE93A435gv5bW6x8j7ZOYi6ekKylMYzO+Zup+r
pX96/KaY34sMjD34P5p/pZif46o6Dmc7TYYp5udO0PouNotELsYbqf0t21xF
kaf9EJ73256H0T+SuK3zmBzyFs5qvc3JPIx46SjHrqb1yJU+Bdx6K8TDeJ++
pPFLMwN56iZ9geUR3AxJkcVbNNk2Ib/hze+2wZeLcayyqZ9j7VbkDQLsW5Tk
ZjDmsspZ6e/URL6UK8f/edV0Bud8o1zOo9rkOPOl/5ZpT2EcKusTDekgfmI6
VFK8xdgYMkXOkQ2biOeCpN+85qF/qMKKIS5jVeLNRfSM5fu671T7pbb1fqWG
yMVl5Dcu4/lIqexSnOMqbYxc+aSTvVXAX0ogvE95Su53vO9OtyhRT5YNUkeL
LmqH5RPPNtVD9wL8X1DM+QrySVfWekULkRd4nLcX87hNp32i4sarlFX3diHn
vfqpTn35Q2qeVPO65AZynLyBhZfDJHuosQMt6987Ej7l5bjMkjV3KObnINzX
iSYtfypYa/H4pcO/r0Z1d1HM9+9k9+lkx5ks/snOdzKf/9M8MNn1PFl+mOw6
nyxvTHb9T5ZPJrsvJsszk90vk+Wfye6jyfLSZPfXZPlqsvtusjw22X03WX6b
7P6dLO9Ndv9Olg8nu68ny5OT3e+T5c//6f0+2X062X032f0+2X194phGU3YW
y4T7QpzVWyg7iwffB7asbfZ/LGlKAYfx+V8e8mbd30bxbes9wMKyEMevifnz
NbTdCTmM75mRfEpKwoHybI+7l5UlgONzJYP0di13Rw7jv2amu8qs8aC+vdE8
avRQBMcPf37/qVD1DHIYP834+TrLUT/KgfvHHBaWFTie4Snf/fVvIHIY/4ht
psH7V5eoPpn0kizJVTh+9ZWLBeszQpHD+HVHHNi6S8Ip6xrWX+P1sjh+lb5u
pe/6ROQw3ulW/snvXUmU4G2T7UYP1+L435ZXxgK4UpDD+EVvXLZxj6ZST5/n
x2a9UcDxJ8+EJjxXz0AO4135hjyOu2VRkZ/Y342PK+L4/HyZvDO9Ochh/Pkt
f+atNM+nDKbu3WA0VxnHa35RDtkwUoAcxottfMYVbVREzZpbGpglqYLjw/jl
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
Kut/fDA/r/vWOpytcJrLYGyWuVwkbIDeuJVtHQ718DLi/LdUf7Uj8243+jtm
+Onze1KMSL3r0cUW6yonNkYoq4XecXlS17Kmv6N5DYuEW/8MQm+q8f3dO0Pe
URzu2/7e+x2K3irpOFmf3zPKyiP1qLd0nFUz6hdXBZK603I6zljKyN6sMhO9
pdBxZpwKVwtbm4feZl767zgP9tfrrfYsRG8v6TjjZszYvHdmCXpL+dukJtoh
OcFbtXdj8b/zM35ndSgzYgN6uzetQfSpgjhjptiF/g5TR/T2+mxdZLmTKCOY
5+XlX+ykzsMys5YzNEWYUezwZv1OybPobf7Fao+DPYKMPiU223q/y2Rew1v1
XoNPgKGs93qj+5wI9JZOx2myr29A8TCp8zTQce4OHVQxDk9Hb910nGfuBAtM
5yR1nq90nI4XvramWpE6Gzcdp5Tct3reEVJnE6fjPP1c83T7FVJPo+g4rS5/
Y2k/RupmY0dedYkErJ3g07dkKDgkRY7hZCcSlVHJR67D7y81WRpkGTt47qyP
7STXYcy6l1MP9sgwfrbX9+r98ESfYm6DNT3f1zDODRfLVNQHoM/CqoHjGnxr
GL0cUTMv7A1Bn25jrWYHTaUZbauzZlu4k7rZDzpOs8Hxta92kfqPPx1nmsAi
Yb62TPTJR8e5wPpZ9B2vPPSZQMdpujtNi7eV1M1W0nGq+hfxTHMuQZ+VdJyl
ZXOiGZvK0WcAHWfj246XbapV6DPO+j1Pea7yBJ8SGe86RDrWM8r774cHNr5R
BZ/Fr9/6hAwqMaqTZ+wv6T+MPimpt8osLEoMa4MgQYN5pC50w/HNV6fFigx+
19q1Ud9IXdo473Vuj8I6xto+TfmIs2Hos//DsLWGgQIjb8EFi7Mysegzno6T
56C0RqkDqQtJ0XEmFe278X4ZqQtV0HFKey19u+dyAfrcRMeZKPWiJFCR1IXu
0nFm9Iyqs3OUoc+9dJwbL1uGd/wl9bQ3dJzHNMRyHi2pQZ+CuW4pInYT60JD
2j+8er4zGEHuxlKXZ8ng9Zkz4moWcobBKN6/iopeRupCRy6NKf1bZ+F/3/2F
+x1S/z9s/nElC4NiSAVNTf5ldRl9/kr68NLJVJUx2LT05QuWSPR5dmAkvsdF
hfFpRqDSe8V49ClEx3not6PA1VRSFxqm49TUKFV4nZCHPvPoONM679tbfCV1
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
s0XO/H4Fx2eu4/0vhSDxxw==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
I1wDa96yZzhWq385UvEWr8URrp/V1x8crknUrx3C48LMfdbQcM2vWdZ94Tpc
M7Ft+WfWdzU3XCtqNtiAxwY+U0eS1V7hXKD+a064R9PMsF7ye1aPMi8cxzT3
ezVc72lWWStca6mPW8Pr7Yo7cv0veZxXjqsergM1V6kSzkHq3Y7M45LmjfuF
6yv1ej/nMVx5s3y4vlKd1S08y9LMdnMe2xXPLwznI81mT8/z8tfKaVz3jWoa
PmOZcC2kvNk+PCtTr31JuO5Sj6z6f61yBMeavMb3ilccK+TvX++hQ7hH00zv
44LnzB9xbBfuszT3axHu7zSvaxbuETQ/vCzcg2jWp+SlOlB5p1W4T9Ssb9dw
Xfdlfn+aZu67jwjnZfXdv/L7ymaeIxXyuKSc2yTcN2muWLPk2lo56JM8n67n
f1vzXKy6IoXrUuXos5L37tkcDwzX0pqV1cc9Mvf4+r17Za4H1JOoXlLd1Cbc
22q2+W9eAyu3/pbXpapJmvBvJyTXZjXCtbfmb5otjdN+T57f3ImX442qmZPf
s2Y8ozm/MjmXHZ95Xlcz3Kdozqa51N1aM8l7dkP+3rbke10xSrP/jfn3pbii
Pb8p89xLMfmd5DWsfK51MD+POZqzbc/ratU//xRc26vu+r3gGl611o6C63PV
cn/kdbVqub15nJp53qK52j3aF/yuprzuScl15qpwH6q/TTwfrks1D9R8fSn+
jevKcf7wzH1Hz3DOGpnnJt0TzUD6hGtpzax6h2tmzax6hWtmzaauCNfqmncN
wRMyzwn74RGZZ2J9w3W75mClcC+gGq9huE/XXLdxuL/WnPycPOYr9p8d7q81
Zz4rPE/QnFnveXDmWdlp+drWLHencG+i+va68N9rNEfqEe4XNDe7PNwvaN7V
PdwXaIZ2Zrjf1+z64nBtpr8N3RBeM5qj/pr5vSlHDchjsmaJp4bnCZoh9w+v
Pc3Zbg6vSc0hB4W/L80nrw//zULzw4Hh9ab55Onh+Ynm3heEZyaah18UnoFo
Tr4pX29aW0eF++he+f7VntKsUr2H9pT+NlRbsSzz3LJOuD/VTPvocB+teXjd
cL+s+fnJ4RmI/i5QDR+VeXZ9TLh31ix9t3AdqznYKeH5if52UC88F9JMvmy4
N1T/dWy4B9fc/v/J3n3A
          "]], Polygon3DBox[CompressedData["
1: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
f2V4SDf64Ax4FXiZmuu3ZYn/mBNeDl4b/sC5wTY+vHGTenMhfA38LjwYHgHf
DH8C7wlfC9/r9YcPhK+BR8Hfwwc4/2r68ckl/f0ixq/tRD/tCl8N3w1/Cw/x
967RE2eX+JvLGL+lE32+l/0KfgD+2bloP4Lvh3+CD4avUxPCP8IH+fvBN8If
wbvDl8I3wR/De8AXt/roQ3g3+Cr4Luc7vL/1Gr4T/hrez3puD4K/gve1X9fo
nQtK/N2JNXrn/BJ/tJ0aDd67yfwb0M3836uJ3t2qm/q+WZN61b+b+jW4iT/Y
ppt6sEsTP9APnhPeuYkfGF6jny4s0bOXdzNfvmR8H/jgGr1zUon+usueauuA
j7Oe1/iny0r07Fk1/u/yEn16co3eu6jEPw20JsL7N5mf75a/W2tnTviTkp5l
77LnnGst4/zbOP68if5YtOS7+xtYC/RQ/jb+RnorNZ5e0zXr2lUDHtmkRqsN
1dh7NPFoam89S/8mGvvX1iP0a6Jhf2k9wlZNNKfe4Sn1XJMa80frMbZo4gH0
Hnqko5r0AL2THu7gJp5Cb6eH04vr4fRyahK1iZrl21ZDq12s+WprPeQhTdaY
3lLPdlATz6SX01Pu00Tj6jX1RHpnNY9eSQ+3XxMPp7fT4+3bRCPr/ewp9hY9
gV5FT+dcck6pHcwAzAL0KPdwvKrzET6PbU37QU1/PqFEbzpf7M8nluhR+5v6
9JAS/Wc/tR7uUNI/etf0o4El9WzlGj28fUn/2N867edlu9rrWqOntyupR3pE
swA9p97x1hq9eF/JelPfqt8eKKkPeoZdm3hqvYSeavcmnluvpSfdoYlH16ve
VqPv7i9Zz3qa3Zp4aL2Ons+15ppTO+hxBzXx/HrfZ63/TTy2RlBPvFMTj61X
Hu015PipEn37kNcIfrpET87T1sPvmug9e97Adv45/+1xa7XX74+2pn/RZA1b
6635bzXRtPYCe6i9dEHnaDdr0LVoD7R32EPshfY4e8v4nPtFJz388ZLcyfzJ
1/s+i3TjT14tyZvu4zUvtOe+0vYIX2MPt3fYA+2FO8EDajyP3sc50b8mAzEL
8RpvUTPHnGv2nLVq5pBeQs3k3LLn395Ek6oFetXkKQNK+te21miOl1ePdNND
H26iGeyt23L8OccfsL1U8rec3ws36XF9eM2ifl6OT+K1D1hDOHdsib6/3zkE
P1Gi5/3O/la9XR/W/hq/8VBJf3vUmgCPa/3Hg9Yw+MkSf/AY/Bb8fKu/xlgz
4Gdbv/OINQB+rvU7d9T4n9El/fJxayD8Qluf76rRcw+X9LPfXENsvZpoADMA
589cbMtzvEE36811N7ydSyuy/aeJhnAurdDk9/R3fcIay/u/2OrHe2r05CMl
/fXumn4xpqS/6i/NJx8t8U8ja/zRvSX9UI+sV7YmbMXY5TX99ObS6oea/nlj
iT/Tw5o12oP0tvYgtYEawd70E9/n1iYeZxv4R3hkEw+0dY3HNDu0Z+k99Vx6
d3uWXkyPrXfRw+i91SBmDfZstYke3qzCnq2310OabdhT9ZZ6CrWgmlCvoeZX
O6uh9QI/qE+aeJYt4W/UE000+4bwF+qnJh5r7RoPcU4TT6K3+Lab9aDH3hj+
Tn3Sro9N4e/VW0080OY1HsXsWc2udtejnNrEA+ld9DhXtuvRWq2GMis2k1Bb
qRHMvi7rRDvoscxKjurEe+mJzHL08HolPZZZi5mD3kuPajamRtO76tnMksw0
9HJ6TrMvPbBeVI85pl2vrm89q1mNmlAvq2c1WzqmEy+rxjCrvbwT7aHnM7tR
w+gF9ah3tPVC76qm0Uvas+xdai6z30s70WJqMrP3EZ1otZ/VI0088rY1Huzu
Jp5Qb6aHM4s5oq1Pei6zSz26XkxPd2cTz6rX07Pd1cST6uW+VN828YDrwl/B
1zXxeOvDX8PXN/GAG9R8Rj/reSV++IQaP31uiV8+r0avXlXi38+v0d9Xl/jt
42u01jklft0149oZUeLX1WDq3ytbbXZ6TV5xSYk/P6NG319a4udPrek11gZr
r/mO+vuakjz9uhr9fUeJ/ndNubZOL8mLVu+mvlhn7F2X1ejnm0rykWtr9Prt
Jfr76hr/cFuJ/r6lJn8ZVaJf1+imflnH7I3mTw8yfmeJH7imRu//t0Tfm0F7
70APqhc1Az6uiWc3G9bjHN/E0+t91OR7t/pLvanmHtzqi7+z+x7R3uoDs3k1
t9pbTW42r4ZXz6pfzbLV8OqvaVo9oYfSS5m5/9hqarNfMyG1th51k1av/e39
e8Qbz9sk+1Mvb9/qGfWxmaJZrhmSWaOaWm1thmfWZ+bnvQRrtLXaTFCBroZS
S5n5fdYkwzMLNLPTW3mNvdZmgL82yRDNBtUsahczRrMrMyy9mp7NbMsM0CzN
a+K18f8cu6XE35lRmFWoCfsx9jDbaxw/U5LHqanUunO1Wuv3mtrpGnGtqF9f
Lunv3ts6tP17o9vvp8Yyu/P7qb3sqWaJ9mx7rZrM7FENqFY7uv09zCD9LPZs
sz01p73cnvdz+33sha45szPXpGvROW0ftZ8613+tWduuede+PVIv6hqxd6rp
1Hazt95jx7Y+jWh/b9fwq229cm3/UlM77Bn2DjWKWaQ9Vu2iRjF7dI2oXdQo
6gF1gdrlt5raYs2x9ozXTW2zRlmrrClj23pprbFmmPXpAawlavqz2/5k/1Cj
mx2YWajd1fRntf1Prd+/rb+ntfVWzaK3VEOoZdQUPdv5qNZQA5n9qnnURmoo
s1w1jtpKjaZP0C+o3dRQZllqELXVWGtsJ5pV7fpzTW/1Nb72hHb+j2vHnTPO
nQ/ZFurGo5i9mHHpXX6s0bL2THunmsTs2BqpVrHGfdKuD2ufNcYswZps7bGG
mSVYk61tpZveomZRu1S2IZ30HHtPt5vepeZVn6mJ3m31jlpp67Zf2k+trXu1
63Nku768WaP2UXOoPb6ruVZeM7XJDzV5lJpF7dJ0o53UTGonNYxaZpuS+9ff
1ty/VkOoJVasuR++bcn97G9qtIWaQ+3xV43WUZOoTXp20/vsifZGa7hZij3H
2r5rq+eua+uFPcCs3J5jb9Djma2oEfV+9iCzZXuKvckeZZZshmbv+qNGG6mZ
1E4DW32nfrT36fG+aeuT3m9IW6/uaevfnzVaSo2l1urRTS9XU6gt7DHqavW1
vcceZJaiZrU36QHMuuw5egM1uVmTPU2t/r8aLacGVAuq6c3C7HFqfTWy2ZE9
Ue2sxzGrM6PT+zgnnBtLNNHyevJRrR7Rq79Qk22YaZhtvFiTfZh5mH08X5N1
mGmYbXwNr91Jz7P3vVSTBZiZmJ28VuNt9bx6X5+B8FkIPdhmjL1a44X11Hpr
M0+fjVi1kyzUe44+G2GG6b3Id2qyGT253lz/qA/Tj/nsg73N7Md7tp9y/HqN
l9ZjW/+9B3ps26/V16/U9D57oPXTe6A+a2Dm6b1R75EOa/u9907ftad3khGZ
FZlhqOfUj+rD92uyEzMXs5dxNb3anm12Mn43Wk9NqDb8uCb7MbMxu5m3m95j
D7L3zd3N3HKO2Rvn7KYX22PttfPBD3XSU+2tn9RkQWZKZksf1WRBZkpmS1/V
aBM1i9rls5rsy0zMbOzzmmzKTMxs7Iua51XMrMyuVix53mIB+HOOP2V8+U4y
KLOo92q0jprH7O2DmmzJTMls6cOafM/MyezJzN1nQ1bqJIv/nm2LTjyMXsaM
3Fpjzdmo5h6Cn9XPrD/xHoH3CrwHsU7NMxw+i6J/8dkOM2uzePM0s2wzfZ8V
6dVJ1u8zHj6rYubvsx9v1mgzNZrZjfc0vLdh5r5eTeZu9t4f7lOTP+j9zQDM
vsz4zfqtgX0Zf6smCzJTMlvynoXXwmuifvyyZi46J9WW1kxroTXRWmrmb/Zv
zdyk5hkcn/3xnoXP5rxRk9eaGZkdWVN9VsiM3lr7dk12ZSZlNvV/K5KWMg==

          "]], Polygon3DBox[CompressedData["
1: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
/eG7mh1gY9hwto4dYonwe7Fd7A98uOk5
          "]], 
         Polygon3DBox[{{1167, 658, 465, 152, 313, 1107}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFkssrxVEQx8857s+CvPK+yGMhUpe8n7dYIF2UvB8LpESRkiJZYOFGkY0s
baxt7lIU/4G1RyyU18LChvCZRllM85nvb8785syc/In5njlnjGnBorAdz5hU
hAGfMRsIW2incAycB1fAR/AxXAe/49+wB6wVfRRfg54Jl8KVcA3cCVfDBdQv
oP4QXIQeRK+CH9B+4Bun/0+C260xOdgjnIkfdlr/EI7lbC48xtkl9BU4gl5G
fAk34E/IicD1Pu1P+rzH9tEP8LXobZy5grOtfpf7WMmj5jf+Gh9y2v82H8o5
8wl34PuwNKv1g07vskZcTP0meBq9zOkcFtDb0UfgVfQuLN7qTLqxBKtzC2Gx
Vucsc5KZTxJPcXYGDqPXwiGpCfdjGVbve46lWL3XIjnL0jMcwBLl/tTrhVOt
7i7J6tyi8M/E03z/4FwycRjdh79Fi8a/4s/IibO6Lz95AXLG4T12euf0nfR7
ug/ps9zT2ckcBuFN99+P7EHeWIzVXX9hncRP5OyS20b9WaP9JFplJzP0tE+Z
YdbfznLxjZ6+D5lJoadzl7dx8/euXvDNxB6569Qs8XRn0n+61X78+C+ns5L3
Kf3KHC7QfwH/FlMy
          "]], Polygon3DBox[CompressedData["
1:eJwtkktLllEUhfd5L13EgV/hwC54GUgQWJgpVn7lJC98GkSJpg1SB1FQSBAY
0SAaJAY17Q/UL3DYyP5B41B0ICg4FNGKnsV6B/s9a+2199mX83bOv7z/IouI
61iBDfH5y9mBHSNMlxFrKeIN/FUe8QP9I3gd3xe0T9gOccf4etGuFc7VHQ3w
W2wW/JX40dI5yl3B9577DrDn4O/49oidwVrgo/AuYu/Aiype9T/j+029f/AJ
tKnSubpjMXcPNXBr5t40g/rpynxfGzF1eB1+uXRN5T/DN4b2BN4DXkrWb8DX
4KfgD8G3sbzah+r1wa+Ee1Jvg/Bv8JPEPAA35davoneXnkGzfKh2O0DMHDwR
f69wTdVWjnpVzkLyDLpLO9QulXMX3gE+BO9gF6udaXe16v1UT73Wkne5ii2H
31T1N4k5Az6BbVQz7HI2J892jnOL+H3sPPgW+irnBHyAu/eJ3Q7H9BB/Ae1X
uCf1dhPfT/Bp8FThN9f8Z+HDhXeot2tJ3q16Vu9Nyf9if+FaAZ8ErxR+K72Z
3l49aBePMve2WM37OrNeJz6r/o8RtCV4IzyD4h/D28M71q7H4X/CPehfeooN
gd+h96K3J++CI47CPmn6py7lNvXbyKz9B7sBVpU=
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt0bsvRFEUxeEzryDiETHj0QgVzUTDDGJKRjIajXgViGQqIhGJRBQoyChE
I0qNWjOlkPB3IBoFWpXCd3OnWDl7/dbeOfvcO7ixs7CdDCHkKENzqRDKdJgO
oSr4chbpWvbG/9ATv04l9VEihGlZv5mxiKlf8W965NdoVL2rLy9r1VfFKlgN
q2Aj2CSW41voBbtPxfd28010h11hS9iQ2U1sAPtT/6biXcseMKOepUV9H/Ie
fZ+yC1kNO1U/Y2eyPX0TWJZvpjp2i41j7XyCVrECdo7tm61jB9gWNoX18n3R
Hdgov0vL+m6wFazY+C5tfKB5x3Bjx2jXgqwDL6XjnbPRO/hOfXn+gd6T8beP
/sGJmWPK6OlKxNmlt/0DGuEt1Q==
          "]], 
         Polygon3DBox[{{1075, 267, 738, 733, 47, 778}, {1076, 268, 739, 734, 
          62, 793}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0DsvQ3Ecx+HfaY9rXepOacpoEaOlLpNLikSwGCQSi0EXi9litpgtZouZ
wTvwDhiaCAaTUJen6fDJ8/3/c3JycqYOqlvHSUTs60uN/aFnvWci8qyzxFw2
YoYFljnNCue4xxWu6sg+5ClPeM4zXvKC17ziLW/4wNk0osZPPWrZh0xoUkWN
aVS7nuvgsHbsdg5p227joO7tN9/caverRUvuBphq0e5jVgt2nhnN273cZMIe
baTNn9KtO/vVe/8a/4dd7l647v7X3ZOdc1dx/nEus9O5bq/Z36x5ZsRdQeMq
Jc3//g8FzSbI
       "]], Line3DBox[CompressedData["
1:eJwt0jtMEwEAx+FTVPpERAenJlUBRSsgWB8U0ZYipDEIDSFKiLFMLpIwsTK5
OrkZJ1cmVl0Y2Qwg2uIjocZamUCIm18Th1+/f6/NXe/SZGl+8vmRIAhea8w4
yoqXXzxQ0rFzOq8LatdPn3cwcywIOnlRBfsSs+xizXcu8733O/YVu84Uq8w5
ftXu1rDdw17l7Wt8yD72a8K+zrQm7Ru8qaJ9i7c1oB/OO+JYxh7UffsOhzRq
3+U9jdlZ5hrXblxTI0po3z3/Vsi51hnmBiPcZJQfGeMW4/zEFn7mSZbZygpP
cZtt/MLT/Moz/MYya/yr7/qjXa01BcEHvuMql7nCN3zLl3zFJb7gAhc5x5Ke
2Xk+ZpoFdjLDs0w17o0JdnseVR42fr/2VNdTz6OFTxjnLGOcYZSPGOE0w5xi
iEU2c4InOM7jfECXCgps+v9/+we90j/V
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{777, 993, 1238, 776, 992, 1237, 775, 991, 1236, 774, 990, 
       1235, 773, 989, 1234, 772, 1317, 1116, 771, 1316, 1115, 770, 988, 1233,
        769, 987, 1232, 768, 986, 1231, 767, 985, 1230, 766, 984, 1229, 765, 
       1315, 1114, 1099}], 
      Line3DBox[{792, 1001, 1246, 791, 1000, 1245, 790, 999, 1244, 789, 998, 
       1243, 788, 1322, 1120, 787, 1321, 1119, 786, 1320, 1118, 785, 997, 
       1242, 784, 996, 1241, 783, 995, 1240, 782, 994, 1239, 781, 562, 780, 
       1319, 1090}], 
      Line3DBox[{807, 1007, 1252, 806, 1006, 1251, 805, 1005, 1250, 804, 1329,
        1127, 803, 1328, 1126, 802, 1327, 1125, 801, 1326, 1124, 800, 1004, 
       1249, 799, 1003, 1248, 798, 1002, 1247, 797, 1325, 1123, 796, 1324, 
       1122, 795, 1214}], 
      Line3DBox[{822, 1011, 1256, 821, 1010, 1255, 820, 1339, 1136, 819, 1338,
        1135, 818, 1337, 1134, 817, 1336, 1133, 816, 1335, 1132, 815, 1009, 
       1254, 814, 1008, 1253, 813, 1334, 1131, 812, 1333, 1130, 811, 1332, 
       1129, 810, 1331, 1091}], 
      Line3DBox[{837, 1013, 1258, 836, 1351, 1147, 835, 1350, 1146, 834, 1349,
        1145, 833, 1348, 1144, 832, 1347, 1143, 831, 1346, 1142, 830, 1012, 
       1257, 829, 1345, 1141, 828, 1344, 1140, 827, 1343, 1139, 826, 1342, 
       1138, 825, 1341, 1092}], 
      Line3DBox[{866, 1365, 1160, 864, 1364, 1159, 862, 1363, 1158, 860, 1362,
        1157, 858, 1361, 1156, 856, 1360, 1155, 854, 1359, 1154, 852, 1358, 
       1153, 850, 1357, 1152, 848, 1356, 1151, 846, 1355, 1150, 844, 1354, 
       1149, 842, 1353, 1093}], 
      Line3DBox[{882, 1039, 1282, 881, 1038, 1281, 880, 1037, 1280, 879, 1036,
        1279, 878, 1035, 1278, 877, 1034, 1277, 876, 1367, 1162, 875, 1033, 
       1276, 874, 1032, 1275, 873, 1031, 1274, 872, 1030, 1273, 871, 1029, 
       1272, 870, 1028, 1422, 1105}], 
      Line3DBox[{897, 1049, 1292, 896, 1048, 1291, 895, 1047, 1290, 894, 1046,
        1289, 893, 1045, 1288, 892, 1371, 1166, 891, 1370, 1165, 890, 1044, 
       1287, 889, 1043, 1286, 888, 1042, 1285, 887, 1041, 1284, 886, 1040, 
       1283, 885, 1369, 1164, 1106}], 
      Line3DBox[{912, 1057, 1300, 911, 1056, 1299, 910, 1055, 1298, 909, 1054,
        1297, 908, 1376, 1171, 907, 1375, 1170, 906, 1374, 1169, 905, 1053, 
       1296, 904, 1052, 1295, 903, 1051, 1294, 902, 1050, 1293, 901, 1373, 
       1168, 900, 1372, 1167, 1107}], 
      Line3DBox[{927, 1063, 1306, 926, 1062, 1305, 925, 1061, 1304, 924, 1384,
        1178, 923, 1383, 1177, 922, 1382, 1176, 921, 1381, 1175, 920, 1060, 
       1303, 919, 1059, 1302, 918, 1058, 1301, 917, 1380, 1174, 916, 1379, 
       1173, 915, 1378, 1172, 913, 1377, 1094}], 
      Line3DBox[{942, 1067, 1310, 941, 1066, 1309, 940, 1394, 1187, 939, 1393,
        1186, 938, 1392, 1185, 937, 1391, 1184, 936, 1390, 1183, 935, 1065, 
       1308, 934, 1064, 1307, 933, 1389, 1182, 932, 1388, 1181, 931, 1387, 
       1180, 930, 1386, 1179, 928, 1385, 1095}], 
      Line3DBox[{957, 1069, 1312, 956, 1406, 1198, 955, 1405, 1197, 954, 1404,
        1196, 953, 1403, 1195, 952, 1402, 1194, 951, 1401, 1193, 950, 1068, 
       1311, 949, 1400, 1192, 948, 1399, 1191, 947, 1398, 1190, 946, 1397, 
       1189, 945, 1396, 1188, 943, 1395, 1096}], 
      Line3DBox[{971, 1073, 1419, 1212, 970, 1418, 1210, 969, 1417, 1209, 968,
        1416, 1208, 967, 1415, 1207, 966, 1414, 1206, 965, 1413, 1205, 964, 
       1412, 1204, 963, 1411, 1203, 962, 1410, 1202, 961, 1409, 1201, 960, 
       1408, 1200, 959, 1407, 1199, 958, 728, 1097}], 
      Line3DBox[{1071, 983, 1228, 1211, 762, 982, 1227, 761, 981, 1226, 760, 
       980, 1225, 759, 979, 1224, 758, 978, 1223, 757, 1313, 1112, 756, 977, 
       1222, 755, 976, 1221, 754, 975, 1220, 753, 974, 1219, 752, 973, 1218, 
       751, 972, 1217, 1084}], 
      Line3DBox[{1104, 1421, 1015, 843, 1260, 1016, 845, 1261, 1017, 847, 
       1262, 1018, 849, 1263, 1019, 851, 1264, 1020, 853, 1265, 1021, 855, 
       1266, 1022, 857, 1267, 1023, 859, 1268, 1024, 861, 1269, 1025, 863, 
       1270, 1026, 865, 1271, 1027, 867}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{329, 534, 1217, 330, 1315, 547, 356, 1319, 561, 745}], 
      Line3DBox[{331, 535, 1218, 332, 548, 1229, 357, 562, 370, 1324, 576, 
       383, 1332, 590, 397, 1342, 604, 411, 1354, 618, 1260, 425, 632, 1272, 
       439, 646, 1283, 453, 1373, 659, 466, 1379, 673, 480, 1387, 687, 494, 
       1397, 701, 508, 1408, 715, 522}], 
      Line3DBox[{333, 536, 1219, 334, 549, 1230, 358, 563, 1239, 371, 1325, 
       577, 384, 1333, 591, 398, 1343, 605, 412, 1355, 619, 1261, 426, 633, 
       1273, 440, 647, 1284, 454, 660, 1293, 467, 1380, 674, 481, 1388, 688, 
       495, 1398, 702, 509, 1409, 716, 523}], 
      Line3DBox[{335, 537, 1220, 336, 550, 1231, 359, 564, 1240, 372, 578, 
       1247, 385, 1334, 592, 399, 1344, 606, 413, 1356, 620, 1262, 427, 634, 
       1274, 441, 648, 1285, 455, 661, 1294, 468, 675, 1301, 482, 1389, 689, 
       496, 1399, 703, 510, 1410, 717, 524}], 
      Line3DBox[{337, 538, 1221, 338, 551, 1232, 360, 565, 1241, 373, 579, 
       1248, 386, 593, 1253, 400, 1345, 607, 414, 1357, 621, 1263, 428, 635, 
       1275, 442, 649, 1286, 456, 662, 1295, 469, 676, 1302, 483, 690, 1307, 
       497, 1400, 704, 511, 1411, 718, 525}], 
      Line3DBox[{339, 539, 1222, 340, 552, 1233, 361, 566, 1242, 374, 580, 
       1249, 387, 594, 1254, 401, 608, 1257, 415, 1358, 622, 1264, 429, 636, 
       1276, 443, 650, 1287, 457, 663, 1296, 470, 677, 1303, 484, 691, 1308, 
       498, 705, 1311, 512, 1412, 719, 526}], 
      Line3DBox[{8, 756, 23, 770, 38, 785, 53, 800, 68, 815, 83, 830, 98, 852,
        853, 113, 875, 128, 890, 143, 905, 158, 920, 173, 935, 188, 950, 203, 
       964, 218}], 
      Line3DBox[{341, 1313, 540, 342, 1316, 553, 362, 1320, 567, 375, 1326, 
       581, 388, 1335, 595, 402, 1346, 609, 416, 1359, 623, 1265, 430, 1367, 
       637, 444, 1370, 651, 458, 1374, 664, 471, 1381, 678, 485, 1390, 692, 
       499, 1401, 706, 513, 1413, 720, 527}], 
      Line3DBox[{343, 541, 1223, 344, 1317, 554, 363, 1321, 568, 376, 1327, 
       582, 389, 1336, 596, 403, 1347, 610, 417, 1360, 624, 1266, 431, 638, 
       1277, 445, 1371, 652, 459, 1375, 665, 472, 1382, 679, 486, 1391, 693, 
       500, 1402, 707, 514, 1414, 721, 528}], 
      Line3DBox[{345, 542, 1224, 346, 555, 1234, 364, 1322, 569, 377, 1328, 
       583, 390, 1337, 597, 404, 1348, 611, 418, 1361, 625, 1267, 432, 639, 
       1278, 446, 653, 1288, 460, 1376, 666, 473, 1383, 680, 487, 1392, 694, 
       501, 1403, 708, 515, 1415, 722, 529}], 
      Line3DBox[{347, 543, 1225, 348, 556, 1235, 365, 570, 1243, 378, 1329, 
       584, 391, 1338, 598, 405, 1349, 612, 419, 1362, 626, 1268, 433, 640, 
       1279, 447, 654, 1289, 461, 667, 1297, 474, 1384, 681, 488, 1393, 695, 
       502, 1404, 709, 516, 1416, 723, 530}], 
      Line3DBox[{349, 544, 1226, 350, 557, 1236, 366, 571, 1244, 379, 585, 
       1250, 392, 1339, 599, 406, 1350, 613, 420, 1363, 627, 1269, 434, 641, 
       1280, 448, 655, 1290, 462, 668, 1298, 475, 682, 1304, 489, 1394, 696, 
       503, 1405, 710, 517, 1417, 724, 531}], 
      Line3DBox[{351, 545, 1227, 352, 558, 1237, 367, 572, 1245, 380, 586, 
       1251, 393, 600, 1255, 407, 1351, 614, 421, 1364, 628, 1270, 435, 642, 
       1281, 449, 656, 1291, 463, 669, 1299, 476, 683, 1305, 490, 697, 1309, 
       504, 1406, 711, 518, 1418, 725, 532}], 
      Line3DBox[{353, 726, 727, 1228, 354, 559, 1238, 368, 573, 1246, 381, 
       587, 1252, 394, 601, 1256, 408, 615, 1258, 422, 1365, 629, 1271, 436, 
       643, 1282, 450, 657, 1292, 464, 670, 1300, 477, 684, 1306, 491, 698, 
       1310, 505, 712, 1312, 519, 1419, 729, 730, 731}], 
      Line3DBox[{520, 713, 728, 506, 699, 1395, 492, 685, 1385, 478, 671, 
       1377, 742}], 
      Line3DBox[{521, 714, 1407, 507, 700, 1396, 493, 686, 1386, 479, 672, 
       1378, 465, 658, 1372, 452, 645, 1369, 438, 1422, 631, 424, 1421, 617, 
       1353, 410, 603, 1341, 396, 589, 1331, 741}], 
      Line3DBox[{732, 737, 744}], Line3DBox[{740, 575, 747}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
TmRphx4+CNcTL+5Gu9cT+9vdiP3tJ4j97XUetxlRr9hJt+ODmasuuBZ+rsLv
yoHhzKqRcLBedTglH2AAExPcvVhHULwckMP5cdrOhwP08LtOl+W4hPwzNbEv
/RRJX/pe5YnzrI3ecDLK/Dj5OnHQblragfuRK/pG9Sy3H/h0rV/fzyQDgWSR
gRg/h8v4GY1G/eFlI/sHnItvcHrhhvv0EbFv/Cixb1yB2Dd+6V7Cg8apMBB0
+UKWqKwHyip3JHHfZRnGfeAuioBNPjuFvfUMgYLl9Zoe1K8b499ifaKAklGg
L0+AAJ9vQjGeR5A7blvuEYkBuYMbm3cXG8Osb0Qnnkf8IPaBvyDpA2/4ftto
ScAX6GKe3ncrkQAzUZ5TuM7Vd0XIrab94ExRwGn1l7LwrOfGE1xnMzGbLU+K
AiDu2tJz2lklKOzqicP9lTPVY7HTNwgop3xKl7+rwkBO7yDG1bfE/u2bJP3b
cu9GhQ+UhsOMptbmx8z60BCdfBV5Ev4Rmo9ngiIhMyvPoHWbEZx3L7LHffSw
NfbkqGQ06ETov1C+QoB8srQKPM+KVyTbqrwUA87h2Q4PWU3AjaBdjOdZ6mPX
Cps/xoI6qy0l1x1TiBSsV8Rz2CZin3YaSZ+2Gheh2mnBF7YJUJW8OSIFh4bO
jKEd5Q5yCDwv9YdD65+MFITLQyvV9wm0o9R46tje4EDQuHTogspLZbAr4U/A
eEtZeLI7VioYaPbyMQp1qEF/FMdTjLeV1NdX+pZCIEL68+GdfZrQ3PpXAsbb
TmLftSqx77qP2HdtZfsm7kpEBPDuODg0tqAPKZkPJ9DuZRu9KxbkokB16pmv
S4wRyJxqjEPeI1e0e0J/NRr+2m+b3k1hDHxhucV4fmrs1hbc4RALDwVPvNU5
ZQI3AgjhyHsUXr9rFqMUB1UGK3wVtGbA6lH3Ac9P/eJZLvHvjYeNW8gC+VPN
YXWYogv1DbYS+6ulSfqrrYh91OIkfdR/ilcCBQtfdprawvh9Wn9pw+Yq+x9R
vf8vfbxuHbe+bdcyAm/zF8tf37Io9hnkLSBOOzbSLrbgaQ7vp/SNo7lXFdKX
+jbjc7bJ6baWC7ZwyGdY3CthC6xyUbWu/d9Zz3ZTGyc4m6USN5y4F6pm+DUQ
L71frKyp8ToCiXEyDEJCguAYrOyNeTw9m4xdKNYFOLnjw2XcxWB+SF8T8/gl
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
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"Active\"", TraditionalForm], 
    FormBox["\"Dormant\"", TraditionalForm], 
    FormBox["\"dD/dt\"", TraditionalForm]},
  BaseStyle->{FontSize -> 18},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{843.38671875, Automatic},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 33.333333333333336`}, {0, 100.}, {0, 0.25}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.176122988428572, -2.367825962986662, 1.0525630376557147`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.657908209672117*^9, 3.657910326948703*^9, {3.6579106520097637`*^9, 
   3.657910669591928*^9}, 3.657910701023429*^9, 3.657915132965551*^9, 
   3.657920142307888*^9, 3.65909696152218*^9, 3.6590973494179583`*^9, 
   3.659097925648766*^9, {3.65909803427527*^9, 3.659098051570013*^9}, 
   3.659102373863706*^9, 3.6591033792239923`*^9, 3.659103459861328*^9, 
   3.659103504568244*^9, {3.6591035708221416`*^9, 3.659103574488509*^9}, 
   3.659105761960601*^9, 3.659110242030027*^9, 3.659881086151948*^9}]
}, Open  ]],

Cell["\<\
How do A1 and A2 vary as a function of active and dormant mortality rates? \
Activation and dormancy rates? Seems like A1 > 0, A2 < 0 --> saddle node?. \
\>", "Text",
 CellChangeTimes->{{3.659881193328257*^9, 3.659881226471302*^9}, {
  3.659881299079434*^9, 3.6598813165100317`*^9}, {3.6598817142477703`*^9, 
  3.659881729158036*^9}, {3.659881761007009*^9, 3.659881765701767*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"StabParms", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "\[Rule]", "2"}], ",", 
      RowBox[{
       SubscriptBox["\[Gamma]", "g"], "\[Rule]", ".02"}], ",", 
      RowBox[{
       SubscriptBox["\[Gamma]", "m"], "\[Rule]", ".01"}], ",", 
      RowBox[{"\[Alpha]", "\[Rule]", "0.03"}], ",", 
      RowBox[{
       SubscriptBox["\[Delta]", "max"], "\[Rule]", ".1"}]}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"A1", "/.", "StabParms"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["m", "a"], ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["m", "d"], ",", "0", ",", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(m\), \(a\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(m\), \(d\)]\)\>\"", ",", "\"\<A1\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.659881231012273*^9, 3.6598812701352873`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"r", "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["\[Gamma]", "g"], "\[Rule]", "0.02`"}], ",", 
   RowBox[{
    SubscriptBox["\[Gamma]", "m"], "\[Rule]", "0.01`"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "0.03`"}], ",", 
   RowBox[{
    SubscriptBox["\[Delta]", "max"], "\[Rule]", "0.1`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.659881265363084*^9, 3.659881270531184*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
wU3Fb2o8TumoCh39Tmt0XbNf/rU6okRrNE4fFY8cXZCpNRqnyUtWjd4UpzUa
pyNKKoRZPdAajdPbN0uvCQ7RGo3TnYdcAgae1hqN053OQ9ql7NcajdOJPset
Fm7RGo3TagtXzS1ZpjUap7X0OivVbK3RONWfLmynGKc1GqcjUvxPhw7RGo1T
52kW64bYaY0+xydnB4YntxL8UA+fDjeeHpHe2/tW3vRD8DcnZszxlG5Kgdcu
TBhW8F/+B7QZmddSLfUbVMnSSiu4evilu1XaPZcOZQW3y376X3FunehZzzdB
chp/MOTCHcHnvG20zaZhitR8ZMTJZcGCt3Bo+rX3CS29gm9ccTXPel+mZL9F
HWq+97+ud9Gn8pfjs6WPVYO1TzYI/m2Js7Z7rRwp4kL6AtViwU+G58+KHJsn
jXg5eeb4GYKbjzl9avDhfMnZzzaq0WjBa7bwUT1NKZDuxs3fmT1Q8A+JF+1G
1zdI959a3A7q+n++P015NnWfm/Jv6j439bmYuv9NfV6mxoWpz9HUeDH1+Zoa
R6Y+d1Pjy9T9YGrcmbpPTI1HU/ePqXFq6r4yNX5N3W+mxrWp+/D/drybum8r
r3avXMrsCt2P/1a2Nv9orpaGd7VYamZ2j+7rpOfdYh0brCdOdbERZ6YclNTS
oQvpU83MRB3Jb7DVn/O6TcRx/KODLuXtV6sl9+oTrM3MXtLxQbri+tcithLH
8cPuHvMpH6qWaj570NDMLJGOv3UhwOq2yps45TP0XbYkF6ul/xxU08wshY4v
c23+RvX83cRx/Pbmmo3X2sZIzoMOVTQz09LxzZ8VquY23SeV/M+/DOKWcv0U
x+M8I/o+b+o/O4aO53XA+Nddf5aUZNF5UmxXzF/89QBxHD9Pf/upnyZGCoyY
/6Wk5I2ot06qMfNL9iHiOD53SOtfl+vESit8/d+XlIh8vFOjBTPWPD9CHMcv
z3Xs/mJkrOTgkVBYUpJHx3v903KO2a2jxHH8BfXQVj92xUr1x1Z4W1Ii6rzz
Eu1dvc74Ecfxe7dbru/0MFYq7NLnTUmJqP/uXt7Qo9I+f+I0786tXbi4zEMp
stqS9JISURfu7eF1377vSeI43qJoQcvIvg/pvsVzMaBtO58f3ol0f4JfbtvT
fOm5RLoPwbNKLCsUqxPpfgMfuD7X2+1NIt1X4HPHdPF8b5ZE9w949WdnX3k0
TqL7ATzuUI9tpXon0f3A65X43MHX5lfq18QjiT5f8Jmfd9lcO5BEnyN4xww/
O8eQJPq8wMdVWT5e9yKJPheqq1p5bdpYlET+wfurF51vZpFMnsHHl7VUR7dO
Js/4e+LkUy2w7f508gz+9VDtUlevpJNn8MwrRf/2fJ5OnsFfLPc+El2QTp7p
79WJdzEjK2aQZ/CysXYds6wzyDN4YVPvJ0sGZZBnXq+EZ/Ciuk11fp4Z5Jnq
TrMzRnU7nkGewf26Zmlf3Mogz+B250PXLkzJIM90/ie/21l8ySDPlJ8+3e1T
UsVM8gw+uUHmmLNWmeQZf4eTpwdkBQzTkWeqz/y09Z8/SUeewSc/CrTtvEBH
nsEvqQee/L5KR57Bm3ydmf1gu448g8+dO+nbrsM68gzuZ7U9858gHXnm9Up4
prrkr7oD30XpyDPle3wDw+/E68gz+NsGE37uzNKRZ6ozbg4q5/xOR57B320o
lda2REeewa+4ZC/9WSWHPINvt1XHP22YQ54xf5nSrUqniyPzyTN47R8utZdP
yyfP4LN+egX1dc8nz1TfHOeYXWF9PnkGj+obFJuwK588g5f+vGPsiWP55Bl8
R2ye94Lz+eSZ1yvhmfomjvUoU+5hPnkG39o9ZGBicj55Bp92umGr0zn55Bnc
/+jyi0s+5ZNn8KT7t+MHlNGTZ/Dosx+P1KyhJ890/nuN/uia6skz5n12wxZP
uDbWQJ7Bh3nbhqybZSDP4OG/a/k6LDWQZ/AHF8dVqbXJQJ6pDhnXq2rmXgN5
Bj/6yvzYxRMG8gy+dNL3kFXBBvLM65XwDG4+duCR2k8N5Bn8RfOMmbo0A3mm
euvNNTeu5RvIM3iHSbNUm78ZyDN4tkfOx9Hli8kz+LT9QzWKOsXkGXzcmLf2
XxTF5JnX1+CZc3jmHJ45h2fO4ZlzeOYcnjmHZ87hmXN45hyeOYdnzuGZc3jm
HJ55fQ2eOYdnzuGZc3jmHJ45h2fO4ZlzeOYcnjmHZ87hmXN45hyeOYdnzuGZ
19fgmXN45hyeOYdnzuGZc3jmHJ45h2fO4ZlzeOYcnjmHZ87hmXN45hyeeX0N
njmHZ87hmXN45hyeOYdnzuGZc3jmHJ45h2fO4ZlzeOYcnjmHZ87hmdfX4Jlz
eOYcnjmHZ87hmXN45hyeOYdnzuGZc3jmHJ45h2fO4ZlzeOYcnnl9DZ45h2fO
4ZlzeOYcnjmHZ87hmXN45hyeOYdnzuGZc3jmHJ45h2fO4ZnX1+CZc3jmHJ45
h2fO4ZlzeOYcnjmHZ87hmXN45hyeOYdnzuGZc3jmHJ55fQSeOYdnzuGZc3jm
HJ45h2fO4ZlzeOYcnjmHZ87hmXN45hyeOYdP+p49xyPMZ9MD8jlxZ/+Sm64X
pBZed6YOs7lHPo81D8xx1wRJWWNGlm1wK4J8auW6XzfNt0d9mtwgn70C4mdF
uB6T6kmKhx+9QsjnLbku1u9Nu4+TtBfI5/I/4b/aKzdJ2gnjS927HEA+p8j5
rrIsf1hajt/TNToyfHQ0+Rwkx7/zQ8qso+UfkM/NcvwxLZskzlh5l3xGy/FH
LvnV+H32LfJZSY4/vJ1TaMLwMPG9T45/3uTOipKIq+Rx/e4l4SrFfSn3WOrr
YmUC+cTrhxKF7UjrePLZ+7r9BG3YHel3gnXMhdJx5PN1ycqnN1wjJOtmuupl
Il+Qz3V/n5f2K8KlJR0q+Z5b8Yx8Nj6sCXHThEmna5zy+rvjE/IZmV3Z2lF1
XWowu3ep4ryH5DNIzmtNZPm3lXL8lZMTXnzplkg+HeT459o3XzOlRgL57CTH
3/ZZ7e8xhjjyGSfHv+1bXlDnJy/J52I5/r69cg9ITi/IZw05/jzrrq1aVnhG
z4HrcvxN23T9q879x+T589RLhQrlY2moheU261GvyW9M2SFBKsUjqfDEzkWB
HbTkGa/9V0R/bGqhIc9zRnrUc9PESDlvYs755aWS5+5fLRM0YWpJ3fRIM6vo
FPJc7vi5XUpVtNSnw0L9/pOvyHPygP5DbrhGSZFP03ZUW5dMnhsjL8fyb+/k
+L9krcvy6ZtOnu/J8T+7Uv5G7QavyfNeOX5tcovD/l815HmaHL//ujq/Wyem
kedOcvyeJbZTQ6+kkmczOf7BK6t0HOSTQp7j5Pi/Rx1LTZr/ijzfsPq0RxMW
J9WI7nOh2aU35PnEgnsLVYo46WBTs7pzGrwhv9sidymVqpfSy8Yu887vyCbP
eJ3mkxdl+JpFnoMfOpZz0zyXylVLHWo7J4s8r3d7c1cT9kxql3e05crETPI8
vNbaVUrVU+nezp3udwZkkucncl4rjeXfrsvxZ24Y2XNhC5F/85Pjb5G7zy50
3xvyvEWO37a0w/U/JdnkeaEcf8PfMc8d3LLJ8zk5/pzhq8/s12aR55Vy/FFH
CsZmOGaRZ6Uc/+7xD3/ZhIs859KN+/5VKJOlyM3VR9pcfUuenRMnb9WE/Wd8
PnG/uKTJW/I8sFXbmSpFktS45rwmt3zyyK/N6i+SUpUobQ21v1vqVy55xuv7
UVknlS655Plnkz3fw1wTpPF99qTsS8khz2+WOCe7auKlkLRuq9OG5JDnbXJe
6zTLvy2S49+b6j1/cyuRfxsvx5/YoOTx84NvyXM/Of5JM9z965u/Jc+t5fjL
dXz8Zc6SPPJcTY5/tM3e3GuZueT5mxy/YVSyZymnXPKcKcfvVtMh0emOyHN2
1HeIctWkSQ4J7kFdQovIc90+P08olGlSpVpeqWtaFJHnkj2xazVhqVLku/J2
6n2F5Dkve/8ElSJVGhJqeFrVrJD8vug2rbtSlSKNdS46N96tgDzjdZH/ipQA
rZ48n9B8Kw5zfSW5WNyZV+SoJ88D5bxWNMu/tZPjb1Td7dZ+G5F/qyXHP8Px
wspM3yLy/EuOv1mHEr/2FYrIs06O/97W2l3XrCgkz0/l+IP3TnZ8pCsgz9fl
+E98rlRYd3QBefaT478bVafl3Psiz6kf9VQb5pphNE9LOHMk3FWTbjRPi/g2
65BCmW40Tzv9d+elmrDXRvO0nf6/nVSK10bzLrzyeddbFg+8vWTxwNtNFg+8
nWTxwNs2Fg+8LX7/qJ1SZVxfTpDj4n7syx+brwnLMvbTqVRKmGuWkZ9OE+cO
USmyjPwEbn523VVjnJ+0umTbQqkyzk/uSvbdp1Aa5yenmMibxbP4KQ/M4ofP
Wyx++OzA4ofPABY/fNZh8VO+ncUPz51VZbYrlMZ5szNyvNxzvZwXszRhb4w8
767aPSHM9Y2R59I9/PqrFG+MPK+YXvqKq8Y4P6n3ntdYqTLOT942kTfrxOKH
50AWPzxbsfjheReLH57NWPzwvIzFD89vWfzwvGdIfC2lyjhvVmZRj80KpXHe
zEOOl3sufGA+TROWY+R5WqHL8zDXHCPPibXjeqsUOUaeHSS7C64a4/xkfRN5
s90sfvgtzeKH5xUsfnjWs/jheQqLH57jWfxU12Dxw3PRj5OnXDVvjTxPV5Sv
plS9NfKcNMx1vUL51sizoxwv9xx5sqezJizPyHOXxycehbnmGXkO+li2h0qR
Z+R5pYm8WSGLH56nsfjhN5HFD88OLH54vs3ih+dOLH54DmTxw/Pfl907qBTG
ebO7KUl+rhq9kWfb0r0tlCq9kedzNgGrFEq9keeGGH/M8971buM0Ycb5SfNz
idFhrsb5yWQTeTNHFj88R7L44bkLix9+g1j88FyfxQ/Pu1n88FyaxQ/P/87s
GxHmapw3a+QT2EalMM6b7QurdMRVU2jkuVzmonJKVaGR59UVXy1TKAuNPBvw
fYh5njHp9EhNmHF+squJvNk5Fj88N2Tx0/c4Fj88m7P44Xclix+eC1n88DyN
xQ/P5ayqOGjCjPNmvA8Zng0uqQqVwjhvNoP1b1Me+M6ZUkqVwcjz33kWixRK
g5Hnu3K83PNeE3kzcxY/PK9k8cNzEYsfnqez+OE5icUPv44sfviMlvNUfduY
Pb/U/ij5t5Z5jm2BZb9p54k3lX/Ovf3RZ+cj1HSee8wDjo80wSswD+Cm8nvo
H7vUOWWZk+sK+lyWyvPSa8WfR1/OLKbPBa8V6ldU/Bwu6uwTZH55eOdiD3Ux
nSepxbPAhP/qa8XPVx3u23LcKa1RnN5T473GdzOeD+ck2Z/q90FrdH8eaNZ3
rFqnNbo/BxQnHFS+0hrdnz3N78949khrdH+eCrwbMeK21uh+4/201LejbXB4
wlat0f3ma3fOJ22l1uh+a7bhiqXzAq3R/eZs+auhZrLW6H5zWzUmdOIIrdH9
NnaLV0rqgP/3fv5vP9//X3yaug/RTwnfwdVG12+/WexPBF6itrOv6SD2eQF/
18T805EYsS8J9RFL1sfqVIqivivw91XrzD8zLIr6hMDnuyWpB+2Lor4W8N4/
Kzb7lBhFfRhUd3KPeBdiFU19A+BHZj27smFSNNW5wRvvP5M96WQ01WWp7v0k
q7K9LprqiOC7w2tH9G2tproXeL8Qn3UDF6qpTgN+6J/a+WOuqMkn7tPxP5uY
Va0i9m8Cr9zeadSigjjyCf6lqmP+1Q5i3xZw9+CDOc4jxD4j4A//tH1usUTs
iwE+b/jmdff3i30cwPtUcX6xNlTsOwC+0yXwZJ9XYp08eP99q1+U+S7WdYMv
W1P7rxf1E8gneN9xkVEneieQT/AO7tGOy6ckkE/w14FLQpw2JJBP8KVjyqZ3
CEig5zv4tzsnr9aITiDPGPdXLH16OSWmkWfKfyf+7H80JI08g+f7eBaX/5JG
nsGDnAeNiq4r9mcBH3ro4JgtPcV+IuD+4cve2juL/S+of+1bazPLdWK/BvD6
J/rsTvUX+wuA/9m0wevsPbEeHvzHSrPUldli/Tb4mBSLtcPMRf0e3K1cxxkt
rUW9Gbx5ZVtPMwdRHwV36towNn2+qOeBr73WusO9naKvHc/RTWG1rW4+E/3r
lN8OrGGdclv0MYOft3823Tdd9N2CJ9+eW7KmWPSJUp/OwGZFU83EPizga44M
bDW4utg3BHzK05bnbZqLfS7o91Zpt6SmrdiXgdYTLIpd82ug2EcAfNDN5VG5
Y8S6d/CuLe4Pjp8t1mmDT+jWryRyhVhXDH7M62DhxW1iHSy4/U73Sn5HxLpN
cN+F28fu+lfsC0b9jJ2/RA3oLPZZAx/e6Yjf1KZivyrwcTV1X60HiP2VwDsZ
ynavPFrsBwRu5V1u7YeZYv8a8EfKw7Gpy8R+K+Cnay2q88BL7A8C3qq/05wL
h8R+FuDxnt+vHzwr9l8A7xDT02zjTbFfANWdemUNdn0k1reDWzaO3TwxTazH
Bv8Y8fCGQ4FYPwy+cdSjDLtfYr0r9RGUCvneqopYz4C/8x2PWZ1+fEDsqwPu
6Oc1OWeznjyDNzzRWH3ljJ48gwfb/r5/OEwv9nWSea0zjY54xurJM3j258LB
81L05Bn8Q6Lm0ch8PXkGX7h/SvPeP/TkGfxd/aJhrSxEvxf1cb8p/XfNhqI/
CXxmQWMrs/ainwbc/3zUtaI+ov8DfEdlj4ba4aJfAbzi7AcjnkwV9XXwI3O7
OEUsEus6MG8ab1Ph3YhvYt0sz1fDM83HfUMX96go9vMC99fZXmpaX+w/RXnc
lpNOVbQR+yWBa+5WHPbxL7G/D9XTJte//Hqo2I8GfNJb15iHk8X+KeA1t+Xu
u+4m9vugvObBedVOeYr9KcBVAWn9du8V+ymAV5/bsvnaU2L9P7hftO01lxCx
Xh08IvLDhwlRYn0s+IgVIzOViWL/Pp6XhmfO4ZlzeOYcnjmHZ87hmXN45hye
OYdnzuGZc3jmHJ45h2fO4ZlzeOb5Z3jmHJ45h2fO4ZlzeOYcnjmHZ87hmXN4
5hyeOYdnzuGZc3jmHJ45h2eeZ4ZnzuGZc3jmHJ45h2fO4ZlzeOYcnjmHZ87h
mXN45hyeOYdnzuGZc3jm+WTar5ZxeOYcnjmHZ87hmXN45hyeOYdnzuGZc3jm
HJ45h2fO4ZlzeOYcnnneGJ45h2fO4ZlzeOYcnjmHZ87hmXN45hyeOYdnzuGZ
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
qkuqph1LOiv6Jul6y9htCQorlv4X/DlflQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
I6K/HaSX/gescmOx
          "]], Polygon3DBox[CompressedData["
1:eJwtmOdjVVUWxd/d5z4bvSMthBISCEkAqQIhiIChJlJCKMEghISmjgp2ZYoO
U3U680+M03txeu/FjqjjiDq92mbWb9b5cJKzzrnvvlP2XmvtV9t7ovN4VCqV
1UWlUur/5/Rnjfrj1B+eKpV2tavU36aHHtXc59XWan68xkZo7hm1ieq3a+yL
mvuM2kr1x2hsqOa+LLxZeJLwGOFPCi8RHik8SPjTwsuFRwsPEX5DrVP9t2rs
d5r7ktrGwt8xWnPD1C5W/3Kt57Oa26s2S7hbz4yqVioPCy9Sf4TGLtWzx4TX
qX+7xqZXvUbWOkFjozT/utoG9e/S2G81N1/v7VW/RWP1yWPMtXNGwm+qdal/
RmOPae7Xaneov15jqzTHIXbr37s19oT6v1G7U/1rNNam+SvVrlD/an3PLzW3
Wv9v0vwqjS3R3K0a267+Axpr1Hr/pbHVwm8R/rnmflV6L+ypVXO78nkd0Hue
1Fyo9Qt/XM88rf655L2uF/6C8GvJe2FNrO0/yWvnnbz71eS1sif29l++Q/hd
wo8L/0Lt5sJrWqa5Qviw+mc19lTpNbLWNo0t1fz3hA8IzxNuSF4Da7lceCT7
1R5f1drHc0aa+73GphNvwl8V/pTaMu5WY4M1d73wYvUHuEN99gD3LdzPO4UP
Cq8QPkHMCB8iHoVvIAaF/653LBM+KvwTzX2N8y78nRM193XhHcIzhCcJT1Yb
q/4srfEbmjtK/Avfpmem6X19wq3CNwpPFj5c+i650ynCR4SvFj4lXCv8st43
R3iv8Lc190fhucI9wt8VfkW4UXif8HeEnxN+Tvh5tUXCfxNeqv4Rzf9Y+B/E
lPAx4Z8KD5C/wieFp+r7OrXu0+pvJQaSY4z1tWl8rOZfSN4rZ8BZTNN4J5/V
2LjkO+AupglPEO4VXqj+YThAnx+rsaHCz+hzfcJPJXMDHAKXPJnPD06AG76i
di1nQQ5r7vnkdzPG3EnOX/idwnP1vhs0f4n6C9S2ae58MpfACXDDs9xRxRwD
1/xBeGbFd8hdPp0ca3AW3MWZc/azNTYt+Yw5a+5kuvAjpbkETqkRfjyZm4hB
YvGx5FiEw+Cy/aW5As7gPHuEm4WvgwOFvym8W/16jU1NvmPumjueIfxEMlfC
gXDht9T2qN+gsVrN7RNuUn8/HKn3nRLemfmnifOBX4XvFa4TvpnzFX4HexTu
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
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt1ddzVGUcBuDNBnWU4iBJgBQgpCBJCGAa6QlppEJI770RSILSHPsMtrGP
ffwnvPLeay+9QsWCDcHeuz7fHC7ezHmf/X27OWfP+TZzevX4SjwWiw3ITZKw
LhY7AZ5KiMWG9MnEWOwz2eH4GLvitRIz98iM44vsUdlrcR/bzmr1OlnPFq3N
crxbrnrtPhY3t+z4aTbsfafMDLA9rJ4dlo3metk19oa+ZG7N3BRrYvNsQbaa
W2K97Kx+TnayEVYWj2bC7Dv6e9YnszJdjW3Q/5R2dpJVsHr9Pxlh97M21q2H
BaPsAdauHmf/ynA4J9Yaro/eby6TdYf/g21jf0snW2FVrEH/SzrYKVbJDidG
1y81Hp1/uA5v6f/wHnZGbzDXpp/jC+xVNstG2Vk2z15hM2yE/SFtbJmVszr9
K8ljzWw72xXOwdqDbIrtZ7lsiB1gk6yQ7WHXJJ8dYaks88b30RyPrnu4/u/q
3/Ni1qdnm8vXv5Mi1suyWJ7+s1SxMZbP7tJ/lAo2Eu4pdkD/RarZOCtgRfqv
UsMm2D5WnBh956VsgA3K5nD/sW72iH7UXMuNe+3OeDQTZt/Wf+MNbFYvMleh
/y6NbI4Vs0r9uhSwNpbGduuD1u9lQyyX7WA/SAnrZzmsQP9a9rEOls6y9G+k
kHWxDJat/ySVbJTlsYP6t7I/Hj2D4VnM0ad9bgs7zxpZFTvD5tjLbJoNs7vZ
FHuBTYRnnY2yQ2yRlbB97FPZxTrZJpaifyTprIndxu7QP5YM1hKecbZFvyI7
WXt4dlmyPu4zatkqq2al7POwH7BDbAtL1a9KLqthKSxD/1JyWBVLZun6gvc7
xh5mXayZvS8prDwh2r826p+E/Yq1sg0sSf9AtrJKdjPbpH8oaayB3co2619I
NqtgSSxNvyzbWDW7hd2uv7ku2s+uS2bYi9gKG9Of0UfM9bJVNs6eZaOsh82x
LvYg62BNbJa1sntZM6thp9kke56Ns342w46wC6yJVbPzbJG9xubYWGK0P8+y
l9iLclm/IEvs9bAnmhs3d0mSwp7Owja33p8T5vrZY6yHtbNJVs9Os1pWxsZY
OVtipayQTbA6tsZqWAlbZgPscdbLOtgpNsSeZP2si62xCfYcG2N9idHe3heP
fmPCb80l/aQMsif0PnOd5ubZUfYQ62SN7H+eSaDh
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
DMg1T/XbXP23kLxXlP7/MblG1/7lf6Dxeyk=
          "]], 
         Polygon3DBox[CompressedData["
1:eJw1mHW4H8UZhXdmZ0kCFKrUhVI3ILRFijt1UvcW2j4tgYQYxO3GPcTd3Y04
kXvj7p4AcRIswS0973O2f+xz992ZuzvyzXfO97vyobq16sQsyx4MWZb0d1ae
ZQv1d74e3ltk2VE9nK625nrWUG3Pi6eJm4kbiOfpWqr7Jer/gPrXUHt98Vj1
qSv+pLid+Gnxad1foatCPE98SvdJ16PiYeL/qv9F4jriEeLa4tsZlO4zfaeO
+DbxBeEFfe8x8SfEbcVz1eek7nNdtcVDxf9ReyF+TDxc/Ii4mriueKT4UfGl
4kbiCeL64mPiGbpvoWeNco+RsfKNpuIz4gXi9uIW4s+IO+p+oZ6d1f3FuhqI
x4kf1/suETcUjxfXKzxGxtpGz5ro/2fqWsD6aD73qP3Tau+Q+Rt8q7Wez9F9
az1rrL4v6tkScRdxW/FL4qXiruIK8eXixrqfrGeN9L7j4pm6b6lnT+TeA/aC
PWgm/lTyXObr2QvJc2AujKGl2p8TTxU3FdcT1yzMzcrvj9Y1RPeTNM4L6vuM
eLW4Svxz9V0pXi9eK64lHqQ+88Wn9Y5fiCvVvkG8Xu2/Eg9nfuKX1f5r8QDW
X3xS/DNxlfpvFG+Ibh+cvH4vqP2X4jVq3yLerPbfiQcyX/Gp4PEsVPts8Qq1
VxOPUvsy8bng/qPFy8Xnxb8Xr1D/deI16v+geJl4jXhV9PinJX8viv8lXqT2
OeKV4uri6WrfSviK/y2erfYpxIu4EK8WbxZvEv9WvEq8SbxR/BvxEvEqcWX0
/IeI+4rHiN/Xu4eK+3HexB8QW7nXb7H4/sLxcIXmUlPX/bq/uvDZqF3u5316
Vk1cPXe8TNbfMWqbrf/PxWPEQ4knkoR4JHus21eDx9tH7d3Eg9X+ltqeyh2L
g8RviicRI+QVcVT/KeKx4jnixFjUZ5H4bHB8sD7wArXfx3yT89GZ4PUfrPY+
4tFqf09tg8RPiUeJ3xX3FXcXDxG/TWzrGiBep///kf5/Qe79Xab2n4o/nBzL
xDSx/nTu+S1V+4/V/rqerQle826537k5eE34FjF/UDw581lgD/YEz5G9YY92
B68pe3devCp4zF1yz2FX8Boxt5H67g7xSPHA3Gees99Kz6/ReK5lDcvz2Dr3
GSQXdIo+m6z5RrUPzrwXbZLbyRnXF97DQ8ExyN6yZjvFozKvJXu4KfhMs7ev
iVcHr3lX8RvitcEx1118Tlwl7i3uLO6lcVSKezEmYik5ft/Usz8WzuHk8svJ
h9HXeV1BfIf6jlPbNPZDz24rvKas7UTxrYXnxNwGRs+nt3iQeID4h+Ke4oHi
/uIfiMeLp4uniW8vnE/Rpvpl/v2CvtmDeNCzV3Q/Us8mkq/V72b1nyCeIZ4u
vqPw/OaWesB8++sajn7p+Q2F94y9GyG+qfAedRZ3jN676vrG48RrsH4NUPsI
9EntN5L/xBPQj+h4/X7h/N+mXM+JaIbuZ6j9TvKXeBL6Jb5FPD93PntG/JPC
/8Ne9Ix+V7tkZo8Y38uc5+Az3E59n8w9vpbqf0JtH0vWDjQRbSz0/Kz4hK7t
uv+4nrXKrDFoDfO7DL0O1m7WlLXlTLbXu/foelb3R8p8+NnkfEF8om2fT+7L
mBjbR5O1GA+CF2mZfB5YE+azNnd+3RKdry9T+5PokdobFs6x5BZyCrmlldo7
6X5RcHx8SPwE8SVuwH4l79fi4Hj6SLL3wfPgfT6XvFZoLtpboasn+T54/8iZ
x4M1hlw6U+M6Grxn7N0OXQd1f0DPH1Lf7eID4v3if4hn5NbHeeK70Zfc+jVX
fJe4Y+7v9RBfV1hjXtf7V2bWnuXR2kWOI9ehca+JV2TWvp26Dun+oPo9XDgH
nwjWLHLz38Tvid/X9ffCOfuY7mdlzuWb2UPd79L//1ltW8X7xHvEfxXvFh8R
Hy71cJN4t3in+E/iLeK94t3iv4g3ineJd0Tnh13iw+JD4n+Kt4n3i/dFj2ds
sr94K/h95CC8Sr/o3DSe/CR+J/j9eD68Hx7zZrUdQ3d0bRffmDxGtJsYYuzk
ozHk4+BchQfFi+Ihb0n2qMNK/bwp2UPiJfGstyZ7TvT1EfHDuWMc7d+WOfYZ
E2PDU7AWzIG54ClYK9aAXMkcWRti5EKwJyB2iJEPgj0QsUMOwQtz5jh77GkW
7SnYa9aMtdsbvbesaYj2LKz1H8RvBOfoGcl7+nbwGrLX7Om7wR6Ovb4++eyf
1HUDZyNZi9BP9GcvHlV8qlxfPCXekhqgOd5I11RiVWO4SP3X5Y7dbeKLGZuu
w8F9xqrti8laicagNV9K1iI0FC3tkDv/dNf/vyr+crI2odlo91W6+mfWLOLj
ymQtR9PQNv5nebAG8C5qFvShXmY9Wp57LVZH+0s0aWtwzkerrkuOpVSOn/Xm
7OBpt/3fUwXnJLwWfnix7tepf43C8Xg8OicSH9cmrwdnlrN7qdouKfePfXwH
v6m2YcS8+o9Ljh32jL3jXaz9aXK07r+SrOV4ArzB1uh38w3Wnhgn1sn55Gs8
Hd4ODcGb4kFfCfZEeFM8N96cmq+qzDfHynxHfqlV5lvmyFzxrHh3chheljXE
q+PpWFs8NLUAHh5vjUfHq5MDqSXwgAdLv0L+pkbaH6x51E7kyH3Bmk3uRLNm
BccEWkZN8VKwJ64s4/1odAwTy9SszwZ7BGpZPN9zwZqPF0RDny/zN9pKDt4b
rNHkZmrkA6X/o3bGUx4t8yX5F896ptQfaglqjHNlfl5T6sPO0v+RX9GQlaV/
whugYWgZGnUvXlVXk8weED+Bxz8S7Jnw/tSY1JrUoHcl17TUttSgdydrHFpH
zXsP70rOVeQsagNq1nGlP7ozOX6pDaghqCXQ2POlnqwt8w9ehpqa2hwPsqH0
n3gTPAzeG0+Gt0Fz0V40tmfpd6tKP4z/xJNUln4SL4UGo8V4WLweng+vgGfA
C+LptgV7KLweHnFj6V/xjnikHaW/RX/xcNuDPRreDo+3PthD4v3wcCuCNRZv
V1NzqsyssWgtNRP5rnH0elFTM/cW0f6H3wzQgubRfgmPyVq2ia79qanJBR2i
a+0+yXtHDBKL/MaC1jSL9jvklFTqB+cVz4n37B2dD/H/1C+do/0Tv1Gw922j
f7vgNwpip3307wnkYPa+XXRu7pV8lohhYvlbePDMNQy1zDeTaxlqGGqZa5LP
Nmccb9U7OfY5o5zVnslnkTPKWeU3BmKvIvq3h+5odOYzxFnqkXyWOMOcZWqi
CvY2Or9/I7l2okaiVqIGQUv6ROfvfslnlTPKWZ2QrK1oFto1KTkXo5loZ4fk
WGTP2XvyYV7qP/FMjdde932j9WNystaiwWjxxGQtxCOhp1OTtTaUfmVKslZn
pb/qlhxrxCCx2DU5VolBYrFLspYQw8QyHhm/3S3aO+PJ8b9do/0wv/HgR7tE
+8++ybmLnEXu4jc5vE7TaL9KvOJVmkTXtyOSczc5ndzeMTn2ObOc3U7JZ5cz
xFnqn5z7yGnktq8n5ypyFrUjObQqs4cgt343WQvQBLwjGo5WTYnW9u8le008
Ml65Ruk315d68e3kXE88UVvjEV4s9QTv8J1kb0ANSy17tXhuZg+Ll/1qcm1O
DUstS808ptRzamk0E60fWmopHnp2cE2Bt/5a8nip8an1/wf58SGd
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt1tdzFWUYB+CT5RAMRan2hr2LcuM4KmP3Wv8DvbGgIL2EUNJoSagJJQk1
CQQSahJaEmrohA5SLSO2keJIL/p8s7l4J/s++9tzNnt2v3e7f97n0++iRCIx
WLVWTyUTiZmgPiWRmKif2iqRqGZnWWd1lh1lz7DZ+ka5fDadvc1u227P+tj3
jQ98k91gbdm37CtWxc7Y7qTO2HfEse+wO7Y7yPXlveXeYrdYOxZO8mv2hexN
lsZ6sy9Zm2R8zD/qP/t66V9WK/RH5BawSsdNZRvYBbaBrWZl7Ai7Sx1le9k0
Vq+/KFfPatgIlsdWsJWqp++dxZrYdf12uUa5p9ks1sDy2DT2Eqtk+1gJW8gW
ssOsTThHtoc9x+brm+SmsdnsebaAbWfTWTF7gS1kO1ghK2FT2Hp2nv2tUp3f
s2we26afKjdLroTtYrfZLZUm9x6LbHdS/e3ryz5krfVd1SDWn81j+2ynhP/F
5zX5vFfZKv0xuTK2lC1lp1lHdZodZo+zKfpauSw2gVWwY6ytOs6a2fuslUxn
NYB/73s/YEl9FzWQ9WOL2QnbHdQJxx5w7Otss/6c3Gq2vuX/3RnF1yRcm88c
24OtDeemXyq3Su4jlqrvpgbbN0BuIltm+2e2TK5Cbj5rZpFqZttbrv26cC/L
nVWfOPZFtpjt1RfLLZB7ha0M9xlbyJawPLaa/cZqWDXLZzXsd1bLqthktob9
xdayFWwSq2N/sjVsOVvCTrF71Cl2iGWwAv1muQKW23I/57NNbKO6pH9NbWK/
6lfJrZOrZCfZ3eokO8gKWK3+D7k6tow9waaxNSyH5bG7k/G1vB7uc/6xvqc6
oL+s3yK3S240m8F2s5lsMhvDiqP43MI5vuGajmSFbKe+SG6SXBeWzuaGNYcN
Yl3ZCDYvrCVhbWPD2MgofnbDM3xO/4iawJbpM+Sy5crZUZYW7mm2j73LUmQ6
qn68j3N5lE20vZyNlMuRG8+q2I+sipWxUayI7WIzWAFbxI6zduoHtp+1TsZr
3MUoXkPDWpquxurXO3YcGyVXynazO2w328JyWUV4DtgiNpeNZYvCb8YWs3ks
k5WyA6yUFbIn2XS2luWy/JZrX8L2s2Z1I3wnPxx+f/5LuGZsjtoT1lyZPfZt
lclmZeF5ZuVsDhvOctk6NpaNZjmsPPz/rIKVsrlsbxhG4bnxZxvLCt+jPyg3
hxWxcWxpFD9r4ZlL8XvMZtvZDf0OuY1yD7FxrIqls0w2gVWzn1g1K2cz2FZ2
lW1jG9gDLJstTolnYwbryIaykjB7WH/WiQ1jpWG+sQEt91oGmx9mj+rh/O5n
WWxRWE/lRsg9yHJYJRvCRrKZbBu7xppYAytmO9hNtpNtYq2S8fw7H8XzNczZ
7mqqvk4um02UW8AOsdQo/v3C79ghGa/p16J4zQtrX6FqDDNU3yhXJ3cvG8PK
w1rMhrMitoVdYVtZPXuMTWY1LJONZw+z8ayajWBZLC0ZPz//RvG8CXNnqBqi
X6IfKtdPLpmM3xUuRPH8D+8B3dRofVmYUWxYy32wJIrv0XCv9nKd2yXjuXEl
imdGmB33qUx9RZgfjk13bNtkPOsuR/G8CXOnsxqunxPeN+QGyk1nDewSa2C1
rH0ynkNXo3hGhlmZmozfeS5F8XtMeJ/5H31cWIA=
          "]]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0csrRGEYB+BvLu7XnbsxGOM6yC0xUZI0pCYrVuwsXP5nSRk2FOWW5y2L
33l+ncV7vvc7xcvb+k0mpXQt7xL9Ve6lPZdSL/tZYJkVrrPKfR7xlOfcyqfU
Z0C/fGZTGuCgfOlDHJZvfYSj8qMXOCa/epENjnNCnvVJZswvcUqyepnTktNn
OCt5fY7z0qQvsCLN+iKXpEVf5ou5K2yVO++unP2CZ6yzxj1uczVmscTR2N2O
D/yQHnmThpyY1c1jdrHGTh6ygwdsjztjW8yP73OXO3E2vRrnjXuMHbgZe3Ej
duVa7M9Hj6f///UHJOMh7w==
       "]], Line3DBox[CompressedData["
1:eJwt0bkuRGEAhuF/9s2slt4tqFyC2iXQKQgVlaioREUlKipRUYmKSmkdOw2R
2PexjWcSxZvnO6c458w/7T0D3f2REMKgemMh9HGIIxzjBKc4wzkucIkrXOMG
O+MhXPFD23rRjRLREHaY5C5T3GOa+8ywyiwPmGOTDu08j1jgMYs8YYmnLPOM
FZ7zktes6UKvulXVN25xk+tc5TIXOc9ZTnOS4xzlMLv8pg4H06a0eynWvKOV
SX3YLUzo3W5mXG92hTG92mVG9WKXGNGzXWwcuucGFlR3r+7yiXnXv/Zj4zzs
H/vBztnf9r2dtT/tOztjf/3/f3+xFT4s
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{778, 1076, 531, 777, 1201, 985, 779, 1202, 986, 780, 1203, 
       987, 781, 1204, 988, 782, 1205, 989, 783, 1206, 1109, 1291, 784, 1207, 
       990, 785, 1208, 991, 786, 1209, 992, 787, 1210, 993, 788, 1211, 994, 
       789, 1212, 995, 790, 1383, 1077, 996, 1078}], 
      Line3DBox[{792, 1110, 1292, 791, 546, 793, 1213, 997, 794, 1214, 998, 
       795, 1215, 999, 796, 1216, 1000, 797, 1217, 1111, 1293, 798, 1112, 
       1294, 799, 1218, 1001, 800, 1219, 1002, 801, 1220, 1003, 802, 1221, 
       1004, 803, 1222, 1005, 804, 1223, 1006, 805}], 
      Line3DBox[{807, 1113, 1295, 806, 1114, 1296, 808, 562, 809, 1224, 1007, 
       810, 1225, 1008, 811, 1226, 1009, 812, 1227, 1115, 1297, 813, 1116, 
       1298, 814, 1117, 1299, 815, 1228, 1010, 816, 1229, 1011, 817, 1230, 
       1012, 818, 1231, 1013, 819, 1232, 1014, 820}], 
      Line3DBox[{822, 1118, 1300, 821, 1119, 1301, 823, 1120, 1302, 824, 578, 
       825, 1233, 1015, 826, 1234, 1016, 827, 1235, 1121, 1303, 828, 1122, 
       1304, 829, 1123, 1305, 830, 1124, 1306, 831, 1236, 1017, 832, 1237, 
       1018, 833, 1238, 1019, 834, 1239, 1020, 835}], 
      Line3DBox[{837, 1125, 1307, 836, 1126, 1308, 838, 1127, 1309, 839, 1128,
        1310, 840, 594, 841, 1240, 1021, 842, 1241, 1129, 1311, 843, 1130, 
       1312, 844, 1131, 1313, 845, 1132, 1314, 846, 1133, 1315, 847, 1242, 
       1022, 848, 1243, 1023, 849, 1244, 1024, 850}], 
      Line3DBox[{852, 1134, 1316, 851, 1135, 1317, 853, 1136, 1318, 854, 1137,
        1319, 855, 1138, 1320, 856, 610, 857, 1245, 1139, 1321, 858, 1140, 
       1322, 859, 1141, 1323, 860, 1142, 1324, 861, 1143, 1325, 862, 1144, 
       1326, 863, 1246, 1025, 864, 1247, 1026, 865}], 
      Line3DBox[{880, 1108, 1248, 879, 1410, 1107, 878, 1409, 1106, 877, 1408,
        1105, 876, 1407, 1104, 875, 1406, 1103, 874, 1405, 1102, 873, 1404, 
       745, 872, 1403, 1200, 871, 1402, 1101, 870, 1401, 1100, 869, 1400, 
       1099, 868, 1399, 1098, 866, 1398, 1097, 1083}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{309, 532, 1201, 310, 546, 338, 1296, 561, 353, 1301, 576, 
       368, 1308, 591, 383, 1317, 606, 398, 1399, 763}], 
      Line3DBox[{311, 533, 1202, 312, 547, 1213, 339, 562, 354, 1302, 577, 
       369, 1309, 592, 384, 1318, 607, 399, 1400, 764}], 
      Line3DBox[{313, 534, 1203, 314, 548, 1214, 340, 563, 1224, 355, 578, 
       370, 1310, 593, 385, 1319, 608, 400, 1401, 765}], 
      Line3DBox[{315, 535, 1204, 316, 549, 1215, 341, 564, 1225, 356, 579, 
       1233, 371, 594, 386, 1320, 609, 401, 1402, 766}], 
      Line3DBox[{317, 536, 1205, 318, 550, 1216, 342, 565, 1226, 357, 580, 
       1234, 372, 595, 1240, 387, 610, 402, 1403, 744, 747}], 
      Line3DBox[{319, 537, 1206, 321, 551, 1217, 343, 566, 1227, 358, 581, 
       1235, 373, 596, 1241, 388, 611, 1245, 403, 745, 748}], 
      Line3DBox[{323, 539, 1207, 324, 1294, 553, 345, 1298, 568, 360, 1304, 
       583, 375, 1312, 598, 390, 1322, 613, 405, 1405, 770}], 
      Line3DBox[{325, 540, 1208, 326, 554, 1218, 346, 1299, 569, 361, 1305, 
       584, 376, 1313, 599, 391, 1323, 614, 406, 1406, 771}], 
      Line3DBox[{327, 541, 1209, 328, 555, 1219, 347, 570, 1228, 362, 1306, 
       585, 377, 1314, 600, 392, 1324, 615, 407, 1407, 772}], 
      Line3DBox[{329, 542, 1210, 330, 556, 1220, 348, 571, 1229, 363, 586, 
       1236, 378, 1315, 601, 393, 1325, 616, 408, 1408, 773}], 
      Line3DBox[{331, 543, 1211, 332, 557, 1221, 349, 572, 1230, 364, 587, 
       1237, 379, 602, 1242, 394, 1326, 617, 409, 1409, 774}], 
      Line3DBox[{333, 544, 1212, 334, 558, 1222, 350, 573, 1231, 365, 588, 
       1238, 380, 603, 1243, 395, 618, 1246, 410, 1410, 775}], 
      Line3DBox[{335, 737, 1383, 738, 336, 559, 1223, 351, 574, 1232, 366, 
       589, 1239, 381, 604, 1244, 396, 619, 1247, 411, 746, 1248, 749}], 
      Line3DBox[{743, 736, 531, 308, 1292, 545, 337, 1295, 560, 352, 1300, 
       575, 367, 1307, 590, 382, 1316, 605, 397, 1398, 762}], 
      Line3DBox[{769, 1404, 404, 612, 1321, 389, 597, 1311, 374, 582, 1303, 
       359, 567, 1297, 344, 552, 1293, 322, 538, 1291, 320}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
Ovqc22ZoZ3ZEUeTHotuS6PM0Xq5qSgYeRN88FAdcbOetU8itGnbYJgE3sFP5
RDtDkUMvEjeh/1Prq6R2EbjCZfOySOBT9exuyN2WSs7Gox+4sWlaOZoi0ca6
3OgLcet1LTsP/KSYxN5A4MI7tusiHwpWWHAOn9PpW6lMDEV6Pg61IreTVj6B
PtKN4HQOD+BiXCHs6CON+2hSMcBdFfsMNp2lSOA179PI70xdkkd/KeF9FrMD
8L71nkXI+TRdTkYBX5ow2y4aS5HS7FJB9Jeky5VdKeCte0YVrYGXPL+xGfn1
N/Jd6Ec94pCRFYqjyF2rwATkPTqLN0QAb4pfa74fOMt7qWvIx7aVlaHfOObu
WrH8HEU29wpNIk/1YDRA/yqAJUFKH/hi2fMs+H6tMFOdCgVu1i5QyX2eItsG
ahSRDx+4NIa+1tbC037bgU/WVKkjP8PDU4K8NJg3iv0CRT5tv/HHBytX61mA
3HipbKcK8C+hQYeR7yOM/fj+LirsPcsK7/Ur7V1OyOW6dl/423vdPtX6Rgqu
t06Kd8Trs3WTo/H67Jf70y/upkj49Yrj1qvoRJjZ/XVuZBtNJieHVB4PJq9/
h/xcf3OYJPE0H36x/jVt8PCQW4IBRXYqXMyNgOu5CsdZmeD6sH2dD9pqQsnZ
HQP99jrDZF2hJ60vuQnmo1W+7vspIpp6+WweXJ+tvlvKNaKNJnGIuB9bG04a
Vk5c38w+TDpza/y+sr6jnXu1NkTmAEV+lt+1qoTrswrLDEfD22hPB5oD7eZH
kNTi9P437+nk1c+KEtvxdzTWavUtjdYUMTlYbtAJ18cz7gkIxjrd6pz07twI
EniaxFk9ohO9pnmHwi8109Z970g0OApxy/4xYRyunziZ17Aarv++X+kxp2Ak
Ybp5Mi73Cp0wyRmPpiz99/XTgL4DV287UWQw68EhFshn8j+F2L+BfMbpnzrg
pX/qgPf/qQOeeKIhYfkokjho6PF8C6ET1tgTH7MetNBue6VdEvKmyHx2iSpB
uF7XW83HGq6vHtUqUf8RSfQnF4ds9YJxfyidMfq9hSZikf5R3J8iPjuvV62D
6xn7jNdvwfszi164KkaRrWXhPkGOdDL1kSXugHgrLXuK47tAMEWo14oLJOD6
q6kvv6yF6yfs5G9cM6SIXsNyLyMbOqnQWzXMs6+VtkX9UeJEOEWS+XtubYLr
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
N5Ibr8NzDg0f60H/J0Cg9Qz6ikoy1jkP8O/5ZuXvwXy4rTKfD88JmeHXV6iF
edbZQDUJdTBiq5VEHfpVUyrw79WWqPVUoh/CdLniTz/nv/bZ+v/TZ9s8PC7I
fJYiDyY8tdH3eOM5YP/n771yWx7DfT1OotuakN9v3FiLf59XT4mZnwN+V8np
09v/+CG1x7PxHImEVdd3LoJ5XHsD80XkfFt8Z7DPdk3IQbMlMI97u8jUI1fn
H38z54fM8Tk+x+f4f53/a73yyn/XvuP/n3GJxXIfa2H+NRtP/or7ZdYXxGzA
+sXO/ZP7i2D+zY+SWYbzuPlwKGMG8AUyO1USYf69lP15Fc7jgpNHNVKAm12a
0QqAvCjymMFizGfkau/2Yz6zvXCdnw3kIV73HQeQ850I+I7z+55I2U1a+PeG
9nPcwHk/aceCY7F/2cfhq7bHZBjrMv0NTjjv6/nKrsY6SCpRfNoA83il6+o3
yDkUbTdhnSg59F7cdZjH5d48X4v50sAbpQu439ZpQK8U/663tpSLNfKbi2T2
YR4V0cZT5QDz+BKhuxRy59Z8T6wzso6XrtaG9XXdh/+jziiYe3MS18v/AyOp
aEQ=
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(m\\), \\(d\\)]\\)\"", TraditionalForm], 
    FormBox["\"A1\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{713.7763584777101, 321.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {0, 1}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.1102894506693524`, -2.436757580832053, 1.0290242595056616`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.659881265363084*^9, 3.659881271267879*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"StabParms", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", "\[Rule]", "2"}], ",", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "\[Rule]", ".02"}], ",", 
    RowBox[{
     SubscriptBox["\[Gamma]", "m"], "\[Rule]", ".01"}], ",", 
    RowBox[{"\[Alpha]", "\[Rule]", "0.03"}], ",", 
    RowBox[{
     SubscriptBox["\[Delta]", "max"], "\[Rule]", ".1"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"A2", "/.", "StabParms"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["m", "a"], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["m", "d"], ",", "0", ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(m\), \(a\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(m\), \(d\)]\)\>\"", ",", "\"\<A2\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.659108786834948*^9, 3.659108859406787*^9}, {
  3.659108894899621*^9, 3.659108915274001*^9}, {3.6591102478588467`*^9, 
  3.659110248336828*^9}, {3.659110320896591*^9, 3.659110406869545*^9}, {
  3.659110499885191*^9, 3.659110625112856*^9}, {3.659110703167276*^9, 
  3.659110729524095*^9}, {3.6591108823952217`*^9, 3.6591108825606117`*^9}, {
  3.65988109834363*^9, 3.6598811385616713`*^9}, {3.659881177394764*^9, 
  3.659881191400502*^9}, {3.6598812830246563`*^9, 3.659881283135232*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"r", "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["\[Gamma]", "g"], "\[Rule]", "0.02`"}], ",", 
   RowBox[{
    SubscriptBox["\[Gamma]", "m"], "\[Rule]", "0.01`"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "0.03`"}], ",", 
   RowBox[{
    SubscriptBox["\[Delta]", "max"], "\[Rule]", "0.1`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.659108820230719*^9, 3.659108860124983*^9, {3.659108907720393*^9, 
   3.659108915739337*^9}, {3.659110244611554*^9, 3.659110250708509*^9}, {
   3.659110381323151*^9, 3.659110407282229*^9}, {3.659110502400106*^9, 
   3.659110625889975*^9}, {3.659110704617608*^9, 3.6591107301101923`*^9}, 
   3.659110883094317*^9, {3.6598810943500423`*^9, 3.65988114000467*^9}, 
   3.659881283603324*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nHlYTO8b/1tkzZYoIbQpkj1Ly6SQspQWUqRNjKbSorJNzGRUytSYyr6l
7CJtSKcIEdmTCkVZkhBCod/397vO+57rN9f1+fxzrs/L05n7ec2Z55xzP/fz
jPQJdlqppKCgMFpFQUH5f8cjbqfzY43DLHFU3Ol3q2uWfdEaE8s9+nbZHPAb
30uiYnZlFJ15/7xTz+4a8UvhwaU7JblFepfVJ+UHlhOvfPf6yPWxxUUVN0Zd
1LN7RFxNWOg1W3KjKN7kxt3AmkriLl6bnW633Smak+bzNi+whviHZ89Njo99
UKSo8H//qyP+5++rLk2vHhWtyKlI0LN7TVx3pFHvsZKnRVdXHxhsJ2kgPt7x
u+naWVVFQ4bxMgNr3hK3NJwcdbGtumj9wxmTJHofiJf2FN5pO/Gi6Nm2HsV5
gR+J5+6rUD8wtq5oyoyq+TV5n4jf5dneLhLVFyW3ZD7v7PxMvLXbwa11r14X
4f/hdapV/tSsi/oM/h/Hs979Kn606jPwDL4sap/xpokGDDyDx7qa9bAKNWDg
GbxPSd4kTrYBA8/gu8VrpJGtBgw8g+ue7z3m3cRRDDyDP7AU9U4IG8XAM/jz
nAp/v5xRDDyDVyxpWhf0YxQDz+Dd1N8nnDA1ZOAZnPurtW//KEMGnsFn7AoO
z7xkyMAzeMF6fatVHYYMPIP3XhDe3cnCiIFn+HvmcTzgwBhr8gzOXfR0al9b
a/KM49qc4nWJPtbkGXxwq/0HDb41eQY/uIFZcm6PNXkGd397e7tjrjV5Bk9f
yZv574E1eQb3Wt+2IL/ZmjyDN37tiNzY3YY8g+tOnL/DXs+GPIP3y/3gomdl
Q57Bhz9WTO++zIY8g/e+2TDrZ6QNeabPff+355ddNuQZfNPEuzdbs2zIMzy9
+tD07YmeM3kG33CKr+U2zZk8g8fdjW6qm+dMnnGc92rFouAVzuQZfN3uWnPl
MGfyDH509b+9+0XO5BncVEPD3WyvM3kGj11ZvPrVWWfyDD72UnVubIkzeQa3
ubdj/NSnzuQZPGGNRVnTe2fyDD7eYD8v/Y8zeQY3HJXa27ufC3kG//B16T5d
PRfyTN5muHb9ONWFPMOH/dhEk7IQL/IM3ttZUTuI70WewZVv/ygatMOLPIPH
pBT2vJbmRZ5xNIkrbA8+5kWewdd+Wxs74oIXeQaf5sY9+/iqF3kGf2Bg5xt3
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
/F33CTfedb+dSvHgPPsnrVitdmwb5W/x72kmwr8Z5YoUD84z7N2llM1bZfHj
76wS8xa17U5jVDcEqyoqnKf8JN9idofqR31m4eReYQoKxbJ8dWXAUY+67CJw
tD+f/Uu6V8eAST39coWCQhm1TwpUUR/tWFgEjvZpPtGpi90NmOD+Sw0UFB5Q
+7Bch61d6q4VgaP9vF7rD3IkBsyAe9eGKig8ofY9Kv1q2tJuFYGjvcCkfYnL
HQPmf40GKChUUfsJ3+1TmhzuFoGj/ZUlAzbsUhrFeMxK7aGgUEvtT+3fG/dZ
+KCo8//994p4O5vPR3uc51fJslsdM0YxaC+fl370YnJHZ2c9nefqn+FnGsye
FoGjvWZmhofdmVHMsSvcts7ON9Q+IGYr71XasyJwtO8frNs6pnEUE7Hn4NfO
zkZqP3VqIaf62/MicLQP+TS3dKK2ITM38nFzZ+c7ah+9x2PkU4faInC0nyYK
rFi2xJDRcu3+vrNTNu+wpca4z4PTL4vA0T4y+8jAk0mGTPNEizednbL5iN/3
m7c2CuuKwCk/r7r8+KA7hkxRv9CXnZ2yeYpzJaYKby7UF4GjvY7LuD3HlI3o
usV9I1/i8O+wjTVdt+Dnama/PethTdcneLvWz7/Xw6zpOgT3MN024s0Oa7re
wLv4XjfqdcyaritwY9HENrNCa7p+6D3jxF+fdU+s6XqQz5/jewd/Yn2lVUnF
hr538AE6UTcXD7Oh7xf8Z/rCk9lTbOh7BNco/bFx0EIb+r7Ap7XkDRf429D3
An69T0DED74N+QfXzI70WZtmQ55xH1418UzuuynO5BlcJSY6798cZ/IMbl1V
3jTYzZk8g9eZadtO5zqTZ3DRHKPiZRucyTO4rbTUPmaHM3kGV5jZXJO135k8
y+fP4Rm8IGhqwgDGmTyDW8S+Sp73wJk803PHfffg7fXO5Bncs4yndavVmTyD
J779Hduziwt5Bq8a3O3CooEu5Bm8w/1S7H4DF/KM5xrXCjWv55u8yDP4ttMF
qc3bvcgz+JPuThWKu7zIM/hScaHS4INe5Bm824S6cRNPepFn8KOqWYsW5HiR
Z/BeTvp+axgv8iyfP4dn8OgT+ftOPfUiz+B11eH59+q8yDP4vgmns1s/epFn
8CVxO+MG//Qiz+C+fZZNs1byJs/g+3Xdr/B6e5Nn8N12VX32aHqTZzwn7hya
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
bhiS2ncSjQM5bPwxb0RXvl0cR55/rDjbrGd3h/Pe/sOnrt8XkeebKnMyJXq3
OVJhdeqdEkfyjOMNrboJVkMdyLP/osjBQTU3OZv7Cyb0zZ5Pnk1/9n1ck3eD
M2jjoACl2fbkueuBEwl2klLO4l+v1bSe2pLnSuuZc/IDr3NmtwY5L/aZTZ61
2byWQC7/9oWNf/ftfwN0o5zIczEbv6Hb6se/rBaR5yQ2/rbTs/K9ujuSZy82
/kyF/mm5+xeQ5/Fs/BYl/cdX6M8jzwps/KsT3Wb2OjOXPD9k43fcMKmcN24O
ec7X/C6uyXvI2XWu06lm5gryfCigmCfRe8jRceunX3BwOXneXpRgZyd5wEk9
7tFo0O5BnnF8EMVLH+XiTp7Pldl3Daqp4FSlePIun3Ejz/ygN0xN3j2OeMM3
+1fKS8jzQvVN6+0kdzl/Nmfapi51Jc/lbF7rrlz+LYeN/9uA3PKglhXkeT8b
v9rpTXeWzfEkzzFs/IUPu92u3b+MPPPY+G0iV5S3fHUnzyfY+Htdi30smb2U
PEex8aslpdaXpS0hz3Zs/CPXXf6W9N6VPIdtTT6pZ1fJ8al69CJ7+Gry7PFk
uagm7yln7J+93LMDV5Fnm1GjfSV6TznXZq9s/tLTnzyP2dDGsZM84bQd7L9m
c6cfecZx6qD7jU7ffMlzx3Dx77zAxxzDuBE+IW99yPObUI/KwJpHHPXJ9XVV
Vd7keTub15oql39by8afs3KD0dT41eTZjY1f1+vOv0ubV5FnKzb+C31n3dm2
1p88G7LxP7sXkbDXZyV57sfG/zN56exfzn7k+Rcbf1ZXh+8HZ/mS5zo2foft
Rrt3TvYhz+OaTK4H1lRz8mZo3jQyk+XfNCw6DunZVXPyP/dU+bRnLXnuFN/a
VJP3nDOq8symk1+CyfO717uWSvSec4T+3d6WnAkiz/eneJnaSao4Ba03bHVX
B5JnHMvODU6/p8Mjz4dqfn3OC3zGUe9/61dx7RrybMPmtdTl8m/GbPx/jrxv
id0QQp7V2fjHzM6f2q9qLXn+w8bvcXfHL7Mpa8lzAxt/eku+j6ZeMHm+y8Y/
fEfldcUXgeQ5h43/q8HuAZNTeOR5Pxu/k1+JY9b8APL80elubV7gK85hzcHf
VjlFkufHGbsvBda85CTfWqn9VRpBnq/88kvVs3vJUTS+dE372TrynD5vQlhN
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
v+ADquI+RypaUX/B20786KaoYUX9BQ+rjFKVGFtR/SfV84ovPx5tbUX9hY++
p893N5zhQP0FP/deGqbp5kD9BQ/vZ+rSP8KB+gueXXk/QU3qQP2Sz4OhX+Ae
kpmv1mk4Ur8oP5Z1/+VOA0fqF/i8889PnJ7iSP0C/2S2ffzdWY4UP+Wp9EOV
I1a5U/zgOu681WUb3Cl+8Ihnzbe0d7pTnPL5McQJ/ijwBrNMxYPipDq0yMOr
KzQ9KE7wfZnJhTbGHhQP4hU/1fpu0OlL8VD91Xmnr396+tHnyufN8LngKRMX
ptes8KPPpef/NdoPiwP86Pz4/OwiF9+K8Tw6j3w+DecBr1u7+rFNOo/qh5EX
eiG3Hxf4crn9uMA7ef//flyU75Lbjwt8nNx+XOAr5fbjAm9h9+OiPA7Lh8jt
uwU+RW7fLYpHbt8tcK7cvlvgWXL7boE3y+27JZ9nA0f76ex+XPBJ+zu+5Az4
t4JPPsH9NX+rcdfwySf1W89a4Wk4n3yCB0cOqZ4ZzSef4Pufig5lxfHJJ3id
63YHbalsHR/4r+nV7gcv8skb8WmfH/Qr4pM38MYuK41jyvjkjepGJtvyfj3i
y9Y9sfzroaPiwBd88gPesHxbypt3Mg9UX/H3w7GRZ2Xr8mjfiOQy+9fZAtn6
R6yvPavvn14gIA/gTXE72/yKBOQBXKE5qcOgVLaeDtz7VXxXnxrZejpwlbpA
T4N6AfUX3GyYnuHHtwLqLziznON7vlkgW3/EcqNPi/pGtMr6hc/ft3bpvMdC
EfWL1vktOKg+PF4kW2/IckedRU4BSSLqF/i/xh5dClJl69RoPYo/r0aYJ1un
Bn7ripHD40IRxQ9eulNpsu51EcUPbnJAEhd2WxYnPsc3S619QI5sHRn4/KlX
G5oux8vW67H8zfCv1tdKZOu5wF+kvDgz+aNsPRf4ugUXzPq2xlM84KYvVcya
fsk+F+fbNbxX1hsLMX0urWOy2HFp9mzZOibK+90L2Ri+XkznB/+48ppe9RbZ
eeg5Wdd38pF+svU44EoZd9KPjJcw+P1jfP3OrmvA/2M8mB4+VE9R35Lagzex
dfuUl2e52gyO2bRoDp0Hv5tmaez+jBcLaZwBl4y+d6Tlz0I6P3ggW6+O84MP
ndT39OGHDjQ+0HOWjYbx2K8O9Lm4fieND7pppOlOnwte7D9FQd/YnX7X4MP4
VfP1rNwpHnAJW9dN4xrLFWL6P03Kdad4aF9e+7k+Z2670++X1pWu0cwvf+FO
cdL999Gj+ceu+VKc4JWPjRTuVfhSnOBSr9Fnf1b70u8UvLeHuaPeO1+KX75e
GvHTffx3yZpeun4UP7jgwPAam3F+FD+4zbAZo/hmfvT7Bb9cWDjvsq2fbN8P
9no3LQs31KwJoH6BGx0Kuh/wIYD6Bb7Fb8XKkp8B1C/wt6ts32l25dHvGvxS
sLFTqDqP+itft4z+0v1H7DN34gIe9Zfqjc0/+KZ48Ki/tG7sym7Xdi6P+gt+
0fGIlncUj8YH8AyXaedvi2TPLfhdGi/YvbjgVKhsXw6W16k07PmZHUoewF12
3H8w9UooeaDnKQ219qjroeQB/MpPP/Ur5bL9WsEVtgu1/z2W7VcgX8cLP+Br
E6dfPdgs25eVnh8Ovzvc+F22Lyu4X+OhwLF/Zfuygt9fN0YnQiWM/IAre7pe
ZXqH0fhG+cC0Joueg2T7Esjn3xA/uDJbX4r2iPdw67MD8UcE5Fk+/4bzgFuw
9ZM4L3iZv2fy9fsCOj/6fTx0VVjpWhGdH3y+1fp2/UgRfY/y+Td8rnw9IT6X
5rlu7fnKTReRf3CVc87G90+KKB74TnwqFETujqd4wN8NvFHgeyie4qHfa/gj
X8fMeLqu5PNviJPum2w9HuKkujjzfrFx9+Nl+zthfb9Ce+D6yni6TsALZ+Xc
4L6Ip/hxXWh0Ky5P1xRT/OAzRPvOa40QU/zgvC/Xe0hGiSl+8OlPGyp7jJOt
a5bPv6Ff4FZs/Rv6Re/3+f0W67iIqV/gD2LGvNvvIaZ+gf++/+CDhq+Yrn+q
9zt5bvmuNWLqL673D1alx4/9ku2jSPmDIJuQjD+yfRTBv9dfCM9UkMj2JWB5
jcX7C8e7yNYXUz2YNWN4srtsfbF8/o3eE+Tq02hdPMtdY+ea7NWUkAfwJ01B
d/cPlZAH8MbB5umHRkjIA/j5irjso3qydcT03FQ/oT3DUEJ+/iu/RPVXoshR
G1Jk+x9S/q0wdWvxHtn+h+AN6o4Dux2U7X9I9WAP+K8XHJXtfwjuY/fvvTRT
tv+hfF4O3uTr0OCN5jH5ehUrLsr2PwTPnt5Qcjxftv8h+MF+41s+X5Htfwiu
MrTBaVqxbP9DqitLqv28pVS2/yH4yqs/Sm+XydbnwqshO2/7fwAvQ6OK
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[CompressedData["
1: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
I/Ls2D/YBuO/Ay3T4QI=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rsvpFEYwOGPcRsMK6Jd0RAFpSgoN4pViSjoiGK3WIlsQakQOh1/AS0R
+k3o3MfMuM2ystkIu2Tjfg3PSRS/eU7mO5nznsxX0zvQ8S0niqJR3SqsL/Vb
87lR9IE/WM0NNvKQrTxnO5/Zw9JYFCX01bqew2zmONs4xS7OsJ+L/M5l/ucJ
77Wta/3TioFSXGWaa8xwnTthJu5yk3vcYlL74Xd4wBSzTPMnMzzkDo+4y1+c
dY9TPuhYN+GOmjBbkiNc4iAX2MdpdnKSnzjGJg6xjrX6Yh1nNx+d8Zl/2cIs
G8K9+JEX9v3hncp1FfaqyoxlrGSCFSwNe1jCBItZwng4j0UsYL4KrWMsCP9x
+I6vytNLeKYnGSOa83H2/j68Acy/Svc=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1004, 473, 689, 1113, 912, 691, 1114, 913, 692, 1115, 
       914, 693, 1116, 915, 694, 1117, 916, 695, 1118, 1010, 1217, 696, 1119, 
       917, 697, 1120, 918, 698, 1121, 919, 699, 1122, 920, 700, 1123, 921, 
       701, 1124, 922, 702, 1322, 1005, 923, 1006}], 
      Line3DBox[{704, 1011, 1218, 703, 488, 705, 1125, 924, 706, 1126, 925, 
       707, 1127, 926, 708, 1128, 927, 709, 1129, 1012, 1219, 710, 1013, 1220,
        711, 1130, 928, 712, 1131, 929, 713, 1132, 930, 714, 1133, 931, 715, 
       1134, 932, 716, 1135, 933, 717}], 
      Line3DBox[{719, 1014, 1221, 718, 1015, 1222, 720, 504, 721, 1136, 934, 
       722, 1137, 935, 723, 1138, 936, 724, 1139, 1016, 1223, 725, 1017, 1224,
        726, 1018, 1225, 727, 1140, 937, 728, 1141, 938, 729, 1142, 939, 730, 
       1143, 940, 731, 1144, 941, 732}], 
      Line3DBox[{734, 1019, 1226, 733, 1020, 1227, 735, 1021, 1228, 736, 520, 
       737, 1145, 942, 738, 1146, 943, 739, 1147, 1022, 1229, 740, 1023, 1230,
        741, 1024, 1231, 742, 1025, 1232, 743, 1148, 944, 744, 1149, 945, 745,
        1150, 946, 746, 1151, 947, 747}], 
      Line3DBox[{749, 1026, 1233, 748, 1027, 1234, 750, 1028, 1235, 751, 1029,
        1236, 752, 536, 753, 1152, 948, 754, 1153, 1030, 1237, 755, 1031, 
       1238, 756, 1032, 1239, 757, 1033, 1240, 758, 1034, 1241, 759, 1154, 
       949, 760, 1155, 950, 761, 1156, 951, 762}], 
      Line3DBox[{764, 1035, 1242, 763, 1036, 1243, 765, 1037, 1244, 766, 1038,
        1245, 767, 1039, 1246, 768, 552, 769, 1157, 1040, 1247, 770, 1041, 
       1248, 771, 1042, 1249, 772, 1043, 1250, 773, 1044, 1251, 774, 1045, 
       1252, 775, 1158, 952, 776, 1159, 953, 777}], 
      Line3DBox[{781, 1160, 954, 779, 1161, 955, 783, 1162, 956, 785, 1163, 
       957, 787, 1164, 958, 789, 1165, 959, 791, 1166, 569, 793, 1167, 960, 
       795, 1168, 961, 797, 1169, 962, 799, 1170, 963, 801, 1171, 964, 803, 
       1172, 965, 805, 1174, 967, 807}], 
      Line3DBox[{806, 966, 1173, 804, 1265, 1057, 802, 1264, 1056, 800, 1263, 
       1055, 798, 1262, 1054, 796, 1261, 1053, 794, 1260, 1052, 792, 1259, 
       568, 790, 1258, 1051, 788, 1257, 1050, 786, 1256, 1049, 784, 1255, 
       1048, 782, 1254, 1047, 778, 1253, 1046, 780}], 
      Line3DBox[{809, 1058, 1266, 808, 1175, 968, 810, 1176, 969, 811, 1177, 
       970, 812, 1178, 971, 813, 1179, 972, 814, 1180, 1059, 1267, 815, 585, 
       816, 1181, 973, 817, 1182, 974, 818, 1183, 975, 819, 1184, 976, 820, 
       1185, 977, 821, 1186, 978, 822}], 
      Line3DBox[{824, 1060, 1268, 823, 1061, 1269, 825, 1187, 979, 826, 1188, 
       980, 827, 1189, 981, 828, 1190, 982, 829, 1191, 1062, 1270, 830, 1063, 
       1271, 831, 601, 832, 1192, 983, 833, 1193, 984, 834, 1194, 985, 835, 
       1195, 986, 836, 1196, 987, 837}], 
      Line3DBox[{839, 1064, 1272, 838, 1065, 1273, 840, 1066, 1274, 841, 1197,
        988, 842, 1198, 989, 843, 1199, 990, 844, 1200, 1067, 1275, 845, 1068,
        1276, 846, 1069, 1277, 847, 617, 848, 1201, 991, 849, 1202, 992, 850, 
       1203, 993, 851, 1204, 994, 852}], 
      Line3DBox[{854, 1070, 1278, 853, 1071, 1279, 855, 1072, 1280, 856, 1073,
        1281, 857, 1205, 995, 858, 1206, 996, 859, 1207, 1074, 1282, 860, 
       1075, 1283, 861, 1076, 1284, 862, 1077, 1285, 863, 633, 864, 1208, 997,
        865, 1209, 998, 866, 1210, 999, 867}], 
      Line3DBox[{869, 1078, 1286, 868, 1079, 1287, 870, 1080, 1288, 871, 1081,
        1289, 872, 1082, 1290, 873, 1211, 1000, 874, 1212, 1083, 1291, 875, 
       1084, 1292, 876, 1085, 1293, 877, 1086, 1294, 878, 1087, 1295, 879, 
       649, 880, 1213, 1001, 881, 1214, 1002, 882}], 
      Line3DBox[{884, 1088, 1296, 883, 1089, 1297, 885, 1090, 1298, 886, 1091,
        1299, 887, 1092, 1300, 888, 1093, 1301, 889, 1215, 1094, 1302, 890, 
       1095, 1303, 891, 1096, 1304, 892, 1097, 1305, 893, 1098, 1306, 894, 
       1099, 1307, 895, 665, 896, 1216, 1003, 897}], 
      Line3DBox[{911, 1009, 685, 910, 1321, 1111, 909, 1320, 1110, 908, 1319, 
       1109, 907, 1318, 1108, 906, 1317, 1107, 905, 1316, 1106, 904, 1315, 
       1314, 1105, 903, 1313, 1104, 902, 1312, 1103, 901, 1311, 1102, 900, 
       1310, 1101, 899, 1309, 1100, 898, 1112, 1308, 1007, 1008}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1113, 252, 488, 280, 1222, 503, 295, 1227, 518, 
       310, 1234, 533, 325, 1243, 548, 340, 1254, 563, 1161, 355, 578, 1175, 
       370, 1269, 593, 385, 1273, 608, 400, 1279, 623, 415, 1287, 638, 430, 
       1297, 653, 445, 1309, 668, 460}], 
      Line3DBox[{253, 475, 1114, 254, 489, 1125, 281, 504, 296, 1228, 519, 
       311, 1235, 534, 326, 1244, 549, 341, 1255, 564, 1162, 356, 579, 1176, 
       371, 594, 1187, 386, 1274, 609, 401, 1280, 624, 416, 1288, 639, 431, 
       1298, 654, 446, 1310, 669, 461}], 
      Line3DBox[{255, 476, 1115, 256, 490, 1126, 282, 505, 1136, 297, 520, 
       312, 1236, 535, 327, 1245, 550, 342, 1256, 565, 1163, 357, 580, 1177, 
       372, 595, 1188, 387, 610, 1197, 402, 1281, 625, 417, 1289, 640, 432, 
       1299, 655, 447, 1311, 670, 462}], 
      Line3DBox[{257, 477, 1116, 258, 491, 1127, 283, 506, 1137, 298, 521, 
       1145, 313, 536, 328, 1246, 551, 343, 1257, 566, 1164, 358, 581, 1178, 
       373, 596, 1189, 388, 611, 1198, 403, 626, 1205, 418, 1290, 641, 433, 
       1300, 656, 448, 1312, 671, 463}], 
      Line3DBox[{259, 478, 1117, 260, 492, 1128, 284, 507, 1138, 299, 522, 
       1146, 314, 537, 1152, 329, 552, 344, 1258, 567, 1165, 359, 582, 1179, 
       374, 597, 1190, 389, 612, 1199, 404, 627, 1206, 419, 642, 1211, 434, 
       1301, 657, 449, 1313, 672, 464}], 
      Line3DBox[{261, 479, 1118, 263, 493, 1129, 285, 508, 1139, 300, 523, 
       1147, 315, 538, 1153, 330, 553, 1157, 345, 568, 1166, 360, 583, 1180, 
       375, 598, 1191, 390, 613, 1200, 405, 628, 1207, 420, 643, 1212, 435, 
       658, 1215, 450, 1314, 673, 465}], 
      Line3DBox[{265, 481, 1119, 266, 1220, 495, 287, 1224, 510, 302, 1230, 
       525, 317, 1238, 540, 332, 1248, 555, 347, 1260, 570, 1167, 362, 585, 
       377, 1271, 600, 392, 1276, 615, 407, 1283, 630, 422, 1292, 645, 437, 
       1303, 660, 452, 1316, 675, 467}], 
      Line3DBox[{267, 482, 1120, 268, 496, 1130, 288, 1225, 511, 303, 1231, 
       526, 318, 1239, 541, 333, 1249, 556, 348, 1261, 571, 1168, 363, 586, 
       1181, 378, 601, 393, 1277, 616, 408, 1284, 631, 423, 1293, 646, 438, 
       1304, 661, 453, 1317, 676, 468}], 
      Line3DBox[{269, 483, 1121, 270, 497, 1131, 289, 512, 1140, 304, 1232, 
       527, 319, 1240, 542, 334, 1250, 557, 349, 1262, 572, 1169, 364, 587, 
       1182, 379, 602, 1192, 394, 617, 409, 1285, 632, 424, 1294, 647, 439, 
       1305, 662, 454, 1318, 677, 469}], 
      Line3DBox[{271, 484, 1122, 272, 498, 1132, 290, 513, 1141, 305, 528, 
       1148, 320, 1241, 543, 335, 1251, 558, 350, 1263, 573, 1170, 365, 588, 
       1183, 380, 603, 1193, 395, 618, 1201, 410, 633, 425, 1295, 648, 440, 
       1306, 663, 455, 1319, 678, 470}], 
      Line3DBox[{273, 485, 1123, 274, 499, 1133, 291, 514, 1142, 306, 529, 
       1149, 321, 544, 1154, 336, 1252, 559, 351, 1264, 574, 1171, 366, 589, 
       1184, 381, 604, 1194, 396, 619, 1202, 411, 634, 1208, 426, 649, 441, 
       1307, 664, 456, 1320, 679, 471}], 
      Line3DBox[{275, 486, 1124, 276, 500, 1134, 292, 515, 1143, 307, 530, 
       1150, 322, 545, 1155, 337, 560, 1158, 352, 1265, 575, 1172, 367, 590, 
       1185, 382, 605, 1195, 397, 620, 1203, 412, 635, 1209, 427, 650, 1213, 
       442, 665, 457, 1321, 680, 472}], 
      Line3DBox[{277, 682, 1322, 683, 278, 501, 1135, 293, 516, 1144, 308, 
       531, 1151, 323, 546, 1156, 338, 561, 1159, 353, 576, 1173, 1174, 368, 
       591, 1186, 383, 606, 1196, 398, 621, 1204, 413, 636, 1210, 428, 651, 
       1214, 443, 666, 1216, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1308, 444, 652, 1296, 429, 637, 1286, 414, 
       622, 1278, 399, 607, 1272, 384, 592, 1268, 369, 577, 1266, 354, 1160, 
       562, 1253, 339, 547, 1242, 324, 532, 1233, 309, 517, 1226, 294, 502, 
       1221, 279, 487, 1218, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1315, 451, 659, 1302, 436, 644, 1291, 421, 629, 
       1282, 406, 614, 1275, 391, 599, 1270, 376, 584, 1267, 361, 569, 1259, 
       346, 554, 1247, 331, 539, 1237, 316, 524, 1229, 301, 509, 1223, 286, 
       494, 1219, 264, 480, 1217, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
bf8H+Z8TyA==
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(m\\), \\(d\\)]\\)\"", TraditionalForm], 
    FormBox["\"A2\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{744.6309667958269, 345.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {-0.02304940911002597, 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewCenter->{{0.5, 0.5, 0.5}, {0.48191251113903544`, 0.496894617876281}},
  ViewPoint->{2.8175001115415905`, -1.704626823410782, 0.7784218100565375},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.659108820230719*^9, 3.659108860124983*^9, {3.659108907720393*^9, 
   3.659108915739337*^9}, {3.659110244611554*^9, 3.659110250708509*^9}, {
   3.659110381323151*^9, 3.659110407282229*^9}, {3.659110502400106*^9, 
   3.659110625889975*^9}, {3.659110704617608*^9, 3.6591107301101923`*^9}, 
   3.659110883094317*^9, {3.6598810943500423`*^9, 3.65988114000467*^9}, 
   3.659881283879434*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"StabParms2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", "\[Rule]", "2"}], ",", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "\[Rule]", ".02"}], ",", 
    RowBox[{
     SubscriptBox["\[Gamma]", "m"], "\[Rule]", ".01"}], ",", 
    RowBox[{
     SubscriptBox["m", "a"], "\[Rule]", "0.2"}], ",", 
    RowBox[{
     SubscriptBox["m", "d"], "\[Rule]", "0.1"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"A2", "/.", "StabParms2"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Delta]", "max"], ",", "0", ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(m\), \(a\)]\)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(m\), \(d\)]\)\>\"", ",", "\"\<A1\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.659881459023714*^9, 3.659881518782745*^9}, {
  3.659881567031102*^9, 3.6598816406889763`*^9}, {3.659881695140294*^9, 
  3.6598816957423773`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"r", "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["\[Gamma]", "g"], "\[Rule]", "0.02`"}], ",", 
   RowBox[{
    SubscriptBox["\[Gamma]", "m"], "\[Rule]", "0.01`"}], ",", 
   RowBox[{
    SubscriptBox["m", "a"], "\[Rule]", "0.2`"}], ",", 
   RowBox[{
    SubscriptBox["m", "d"], "\[Rule]", "0.1`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6598815220359488`*^9, {3.659881568312202*^9, 3.659881584285515*^9}, 
   3.659881696252358*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyVnXt8z+X//0e0HFJyrkhZwiQZQjmV1CSHyKEPkcOkTD4OFUlySiM0OSxi
ji1nYQ5lDHN8O8w2G5uNOWxmYaJQ7Pfxer4f774ej8/rdvt9+uOz2+6fy/W8
XvfX6bqe13W99mSvj97qW9DPzy+oiJ/fff/5uaDL8o0Taw5pgp9+3v8+qNUk
4ungn5syX5F9PD8geIfwgC2lgzaGHhB+KO6ZdQHBR4WH1YrzhKYeE95yVq/z
0aGpwgs4/3tKeI/1hyYHBGcK3/r+DxWCw88Kf6zigKWhqeeFD49vFBQecEF4
8vgi26NDLwqv1yildWr0b8K/vbT0eH7+ZeH4HV7ZM3N4Zg7PzOGZOTwzh2fm
8MwcnpnDM3N4Zg7PzOGZOTwzh2fm8Ax/7Jk5fmcOz8zhmTk8M4dn5vDMHJ6Z
wzNzeGYOz8zhmTk8M4dn5vAMT+yZOf49c/zOHJ6ZwzNzeGYOz8zhmTk8M4dn
5vDMHJ6ZwzNzeGYOz/DBnpnDM3PUyxy/M4dn5vDMHJ6ZwzNzeGYOz8zhmTk8
M4dn5vDMHJ5x3OyZOTwzh2fmiMccvzOHZ+bwzByemcMzc3hmDs/M4Zk5PDOH
Z+bwjONjz8zhmTk8M4dn5mgHc/zOHJ6ZwzNzeGYOz8zhmTk8M4dn5vDMHJ5x
HOyZOTwzh2fm8MwcnpmjfczxO3N4Zg7PzOGZOTwzh2fm8MwcnpnDM9oLDs/M
4Zk5PDOHZ+bwzByemaPdzPE7c3hmDs/M4Zk5PDOHZ+bwzBye0S72zByemcMz
c3hmDs/M4Zk5PDPH8TDH78zhmTk8M4dn5vDMHJ6ZwzPis2fm8MwcnpnDM3N4
Zg7PzOGZOTwzx3Eyx+/M4Zk5PDOHZ+bwzByeEYc9M4dn5vDMHJ6ZwzNzeGYO
z8zhmTk8M8fxM8fvzOGZOTwzh2fm8Iz62DNzeGYOz8zhmTk8M4dn5vDMHJ6Z
wzNzeGYOL8zxO3N4Zg7PzOEZ/449M4dn5vDMHJ6ZwzNzeGYOz8zhmTk8M4dn
5vDMHL6Y43fm8MwcnvH/s2fm8MwcnpnDM3N4Zg7PzOGZOTwzh2fm8MwcnpnD
M3N4ZI7fmZ/bfL+navDCpvgJfjr/U8/G0F9cOef9en/XdHpo6iUpj3jM8Tvq
4/qZo/z77T+pMDB1t5RnjvKDSnat6ud3RMozR/maI/5oGhyeKOWZo3x25vSu
4QHHpTxzlF/8xvNDUqNPSnnmKF/7nX4twwNOS3nmKD+lRP2E6NAzUp45yufu
KNQzNfqclGeO8q0+ScjNz8+S8sxRPipw4fCA4Bwpzxzl7z816P7g8Fwpzxzl
cd1xeeYoz9c/rmO3erg8ynF5/O52f7nNO/B9gXrcyvN9Ac7XPzhf5+B8PYPz
dQvO1yc4X4fgfL2B83UFztcPOF8n4Hw9gPN5wflwux44rw7OeWBwzluCc54N
nPNC4JzHAOdxNziPE8F5XAPO/XBw7jeCcz8HnN/L3SY1z98UurwpfjJvU7fY
ED+/7cJ3F265NDxgn/D5H24fEB4QL/xfid0npEYnCS/X+K/5AcEnhCcsmb05
NDVd+Ov+c/qnRp8WvvSX/n/k558RXmhQg7EBweeF9wrwfzg4PFv49pSkuaGp
OcIrfbO4eniAeqs6K/XnganRwov+EDU5OHyX8DEDz2xLjT4o/PYTU29GhyYI
3zyxZik/vxThw/L21QwOTxNefmVQleDwU8I/fq/gmtDUTOGJZeJfCg84J7zO
/vn7okOzhE8bNbBTavQF4ZfqND6Tn//P9XbiyKznqweHN22dVWxQQPAlKc98
RPMh0dGhl5vi33F5/P9cP3P8zhzPX34+ox6+/lGen88oz/cFyvNzG+X5fkF5
fp6jPN9HKM/PeZTn+wvl+fmP8nzfoTy/F1Ce70eU5/cFyvN9ivL8HkF5vn9R
nt8vKM/3Ncrzewfl+X5HeX4foTw/B1Ce31Moz88HcLf+A1+fuP74+sfvzFEP
c9TrNr/vdh+53Rdu9bjdp279Mbf7lMujXn6ugvNzFZyfq+D8XAXn5yo4P1fB
+bkKzs9VcH6ugvNzFZyfq+D8XIVnPi9vLTza55fQOU3xE/zV9k/tXhExXMoP
un7yuUURXwuv1mrX7HpBi6Qf9a/P/zzwfshS4VPW1MifE/GT8Ngz3esc9qwQ
PmLS3joF/NYIL/10L8/3EWuFr4r5q2/doHXSzte7zMg/6FkvPDOvVkS/kGjh
I524m4S3H3T1ZM6IccIRl9uDuMwRlzniMkdc5vDP/VX4Zw7/zOGfOfwzh3/m
8MAcHpjDA3N4YA4PzOGB++fwwBwemMMDc3hgDg/M4YE5PDCHB+bwwBwemMMD
j0fggTk8MIcH5vDAHB6YwwNzeGAOD8zhgTk8MIcHHn/BA3N4YA4PzOGBOTww
hwfm8MAcHpjDA3N4YA4PPN6EB+bwwBwemMMDc3hgDg/M4YE5PDCHB+bwwBwe
eHwND8zhgTk8MIcH5vDAHB6YwwNzeGAOD8zhgTk8cD4BHpjDA3N4YA4PzOGB
OTwwhwfm8MAcHpjDA3N44PwJPDCHB+bwwBwemMMDc3hgDg/M4YE5PDCHB+bw
wPkieGAOD8zhgTk8MIcH5vDAHB6YwwNzeGAOD8zhgfNj8MAcHpjDA3N4YA4P
zOGBOTwwhwfm8MAcHpjDA+cD4YE5PDCHB+bwwBwemMMDc3hgDg/M4YE5PDCH
B85/wgNzeGAOD8zhgTk8MIcH5vDAHB6YwwNzeHBrP4+70X7maD9z1IOfXA9+
cj34yfX0a3U0P67zdqmnbrn5nvCAWH3/nv0wokderNST8diDQV1G7pN6bHyx
X+/TDUs9eWV0vLDijypBw9rFSz2PdA+LSI2Ol3o+3Xklv3lF7W+/3yO2dUxm
ktRj/VvtZ9atOaXCpNXaXw3Y+26I/7ATUo/1D09IPVe+CwxKbK79vVO1//6i
nX+GS38vQ+pZcXtv64qJGVLPIc/d/05LPdY/0X5C3aC7/2l/o+aXc7rmldH3
rL3f9T0bnlVge+eR+r4Oq/fB+TI99D1l70d9T12Zc6T1yDh932VfaDCkUVS2
1GPvl2ypp027+ccjS+j7ouU8f78eeTlSjz2f9Tm5otDAkLjO+rxd/NaxyWMb
6XPGnm/6nCm6+aXfL0Tq/e7nv6RC1Fi934Oc54Pe7yGhxUaXyPmHXy/7bd+C
fpFN8RMcz9WF1YPzy/VYIM/Vk7mBs/d1nivP1Y8nxD3fO2+Gj1d67+07LwRN
b9poZ+bstTeW+fi4Pb/0mRcR0dR/2uq+o+J+lPYkdRtZ543wxfJcPfHJ3Rsy
VJ6re5bdvaDHyXPV8+K5/cWHTZPnat2FdxPiM+W5euSngWWmDFm9jeNWnTfa
U7bHWolbvsihvrfCVkvcs0nf19nTeYXEXbOwX/70gJ8kboh/j4sfF4gVby/8
VTTkapmN4u3Id4vzJ63eJN76O3mnLXIet7/waMiaG1vkPNpxbZbz+E2hrDqf
x22U9kxy+DZpz9UP3ow4Exgj7ekavy4/OPxXOY/4yT7xk33iJ/vET/bZzvuT
44ZV/iyiYmKsxN3aYZWnnX+sxL0y4XT+2EbbJW7LodVDBqbGSNy0lIhKRaru
F2+PtG0WMmn1LvFm77U48Wbvtd1yHjv/9lpITuRuOY92XHFyHu244qQ9MQ7f
J+3Jc453r7TH8ld7xOehNQ1CasZo/nDO54WDbobtFJ/vO/2BXeKzntMfiBOf
V68E7fgyZb3ELXh1g2f1jf0St97TF/IzA/dr3C6PB5XtsU/izpnUNiQ4fK/E
rfl2TtSbS+LFm3k+KN7svBxy8XZYzuPhmDERI+MOy3m04zok59GO65C0Z074
tS/yysRLe+o5/Y0j0h7rnxwRny3HDImIydT8ZynnuvWIz1POdXtQfK50rttD
4jNvX8fSCdN2Styt793Ijyyh+cZOf30b0SgqXuJa/yde4n7t9JeOSNyzW7/a
MfOFY+KtwM13zncemSDe+jn9ugQXb4lyHq3/lijn0Y4rUc5jZ+e4EqQ9xpOk
PXnO8SZJe6x/mCg+M6p3Dokaqz5bTtvqKZGj+VvrDyeIz1JOfzhBfA6aM/W1
vhs8Enf4/hkVciI1X/pIn+fWjW2k+VLrfyZJ3Fed/mqSxI2s+nRaxr4T4s08
p4i3Ks55SXHxliLn0frPx+U82nGlyHks5RxXirTH+Alpz0rneI9Le6x/flx8
2n2dLD4LOtdtsvi08Uiy+DzsXLcp4nNo/b5b/8rV/H89pz+v+V4bF5zQuCF3
/zshcW28cELidpu643q1bhnizTynibcM57ycdPF2Us7j3Ii7/52U82jHdVLO
42HnuNKkPcbTpT39neNNl/YUdH5LF592X6vPGOe6TROf9jxJE5+TnOs2TXzW
nl8wucUXyRI3zxkHZUhcG09laNzD941efSNd4to4K13iFv97tX/DP0+Lt+8d
/6fE20HH5ynxZtfJaTmPNn48Lefx5pvvV43J1Px/3KP1fg9bfUras9vhp6U9
053x5mlpj41PT4vPoj/POt68oub/G98dXrTT/P+g8neaRo3V/P8iZx2O5v/P
+Ude+aZkmsTtVPCFdZmBmm+v4pyv0xLXxr+nXc7jaYk7cM2o77o3Oyvebjie
M8VboHNezrh4OyPn0a63M3IeOzvHdUbOox1XprTHrs8z0h67zrU9drxnxKc9
r9TnHOe61fkLe+7p/IVdt2fEZ7tNlcZfbK/zR+ujCzfzH6bzBV+OPVo8sbnO
F1j+QecLLF+hcT193nxyzNfnxZtdP+fE29fOeTnn4u2cnEfLn5yT87jBOa5z
ch7tuM5Je8Y4/Ly0p61zvOelPXa858Sn3dfq054P6tOeJ+fEp12358TnqgG/
lXx4js5/PfJhoicwRuc7Ml5YEHEjTOc7LP+j8x2WL9L5jhoVHl+19Gi2eLPr
J0u8ZTnnJcvFW5acR8tfZcl5LOUcV5acRzuuLGnPKYdnS3tWOsebLe2x480W
n3Zfq097PmSJT3ueZIlPu26zxGfxJ3+dV/eszt8NemJR13b+Ol/TOPejqhUT
syWu5d+yJa7l67Il7sSDOY0OPHZRvNn1c0G8veqclwsu3nLkPFr+MEfO47+d
48qR82jHdUHa08ThOdKeYs7x5kh77HhzxKfd1+rTng86/2XPE53/sutW578+
SAoL7PpslsQ9lPDv80Pb6XzTnMgm65pX1Pmm9538Z47EtfmUHIl7/svNey73
+U282fWTK94WOecl18VbrpzHgk7+NlfO42HnuHLlPNpx5Up75jr8N2lPf+d4
tT12vLni0+5r9WnPB/VpzxOdv7PrNld87v2666bPP9b505oTmw2JiND5spsd
H2wWEqLzZbufPFE8KEjny6Y781kat0X9iR1Lr7os3uz6uSTeCjjn5ZJ4q+t4
uyTnsccvQ5Z6PJfkPNpxXZLzaMd1Sdpzw+GXpT1xzvFq3j7cOd5L4tPud/Vp
1+0l8WnX7SXxecy5bi+Jz6pNqr26cJvO/3790kN+MZmXJW6nImmesNWXJW6V
Y1ERnUdelrhXFg4LCQi+LHHbDVs+aO5fV8Qbz2PCG3N4Y471tLz/COtpmSMu
c8RljrjM4Y3bA2/M4Y05vDGHN+a4bnl9LK5b5rhu3dYV8zpz1MMc9TDHfBZz
zGcxx3wWc/hkDp/M4ZM5fDL3jdeIwwPvK4EH5vDAHB6YwwNzeGAOD8zhgTk8
MIcH5vDAHB54vww8MIcH5r55duLwwBwemPvGfcThgbmvn0AcHpjDA3N44H1A
8MAcHpjDA3N4YA4PzH39XuK+9wJxXx6DODww9+WHifvyObS/yfd+JA4PzH3r
CojDA3N4YO7rbxCHB+a+8SNxeGDumz8i7htH074teGAOD8x96xmIwwNzeGAO
D8zhgbmv304cHpjDA3Pf+IX2o8EDc3hg7ltHQRwemMMDc3hgDg/M4YE5PDCH
B+bwwPvs4IE5PDCHB+bwwBwemMMDc3hgDg/M4YG5L19NHB54/yA8MIcH5vDA
HB6YwwNzeGAOD8zhgTk8MIcH5vDA+yLhgTk8MIcH5vDAHB6YwwNzeGAOD8zh
gTk8MIcH3u8JD8zhgTk8MIcH5vDAHB6YwwNzeGAOD8zhgTk88D5WeGAOD8zh
gTk8MIcH5vDAHB6YwwNzeGAOD8zhgffnwgNzeGAOD8zhgTk8MIcH5vDAHB6Y
wwNzeGAODzx+hAfm8MAcHpjDA3N4cBu3MocH5vDAHB6YwwNzjNN5fyXG6cwx
TmeOcTpzjNOZIy7vZ0Rc5ojLHHGZ37vua4fE5f2DiMvcN19GHHGZ37tO6YDE
5f16iMvcl08jjrjM711Xc1Ti8v44xGXuW5dFHHGZ37sO5JjE5f1oiMsccZkj
LvN71y2kSlze/4W4zH3rl4j78pbE751nPyVxeb8V4jJHXOaIy/zeeeFMicv7
mxCXuW+dD3HEZX7vPOZZicv7iRCXOeIyR1zm9867nZe4vH8HcZn71sMQR1zm
984TXZC4vF8GcZkjLnPEZX7vvMZFicv7UxCXOeIy961jJH7v/MU/HO9H/ATH
+xE/wX3jCO9PcLwf/6zztGdhiX/Wq+P9uCs/b/ZHqf/U49tH44np+1LUImnP
6yEZdSolrpX2rPK8GjGu0RppT42QLvlJzVdKPQX3JtfZlql5xbnv/dvTZeRW
qaees258mxzXBy9N9Axrt02OK37hpTpp0VvluF4o8nbEyxV/lfbMGbes9YIS
+h2DQxtPfpHYPFbaU+Diw+v8h22Xemyfzh6px9aj7pF6bD3qXjmulZdHVTjo
2SvHdeqpn1v7+e2V4yrV6dwXQUF7pD3G9bsELb8uvy4kZL+0Z/ivb5yPiNgn
9di+Ic372fpMzfu96qzP1Lxf+KluS1ff0Lyf5Zc077e71LTjmYGafzOu3xno
sbL6kJFx8dKemy13Fi/bI17qsX1Mmsez9YpJet6d9YpJclxtgm9tuxGm+6cs
X5QkxzVm5LO/B8ZoPs24fjfgsbJ7Jsd11u8GbFjds2qPvCSpx9YVa17O1u9p
Xs7WnZ6Q47J1Yrqfy/I/mpdr4qwf0/yYcf0OQPKoPktL5JyQ9vzbWW92Quqx
dbaaZ7N1qul6PTvrMNPluGy9TbocV0/n/Z4ux3XLWYej+S7jGdIeW4+XIe15
1lm3k6HXobOeU/Nm/Zz1XZo3s/Vdmjfb0bz//TmRmjez/Izmzf6VWjBybCPN
XxnXffrVog4PaOev+/SvD53bsGKi1mP74DQPZusbNQ9m6500D1b5jxeml8jR
PJjlWzQPtnlqfM2osZqPMq777id0m3dzaDvdd9+h+oe7m1fUfeu2LlHzWrbe
T/Natv5H9/GNWnZ/5aAg3Q9o+RPNa5VrEbnZ49H8knHdR3/24dAJERG6j37t
yYYdQkJ0H7qt08uWemz9W7bUY+thsuW40t5NWtF5pO5PtHyI7k8cdmNgy7wy
2dIe47ov/uW4F0vFZGp7Hgp/4FTYaq3H1q1p3snWg2neydaHaN6pUanFDUfG
ad7J8huad0pY0TihTA/N/xjXfe6Rw4tGZgbqPvfQlskDVt/Qemwdl+aRbL2E
5pFsPZXuu5y9Z/DuyBK6f7OPk6/QPNLz7xXv2ShK8znGdd/6nWeP1/QfpvvW
D9xacjOhubbnmrP/Llra846z/269tMf2A+p3vbrs7O+5GbZR6snrdl/I9IDN
Us+kP+bm14zR/YaTHa7fGas6rX7E7s7r5bi2VT9Sp2feBmmP7UfbJe2xfMVO
aY/tw9LvZVVZ91GFh3K0nitfvHQ+NTpO6tnausi6qLE6n2tc+71hFY59Mazd
TjmuzucXtn654i5pT39nP9pBac9cZz+aR9pj+8V0P7v1ww9JPTYffUjqqVep
xflGUbofzbj2ews6/XaPHNdhp59/UNpj/agEaY/lW/Q7VLbfQffXF11+dVtE
hNZj88s6z3vsk22TQ0K0f2hc+72N05/+3ePR72stajG5a1BQgrTH+lHJ0h7L
5yRLe2w/UbLUY/3wFKnH+vMpUo/1/3W/knHt91q/PVmOy/r52h5bD58m7bH9
LGnSHttfo98fsH641mP9eZ2Htf6/9g+Na7/X+u36/Svr56dJe6wfpd99snyU
fvfJ1ofr96PmDe47oVGU1nPU+W6q1lP4+IHcyBLarzOu37NqUDz/icTmup/l
w6Z1OvgP0/ZYP0q/42T5Lv0+g62X1u8z/F21bqkeeVqPzc9q/7D3N98Pj+us
/UPj2u+duf3gihth2u/d97vfqcAYbY/1o3S+0vJp+r0IWz+s34t4x+mHaz3W
n9f+YazT/9f+oXHt915z+u3a733G6efrPKz1o3T+0fJ1Ov9o62m137vJ6Ydr
Pdaf13qecPr/Op9oXPu9bzn9dp1XHe/083Ve1fpR+t0kywfqd5Nsvbp+T6Os
0w/Xeqw/r/V87vT/tV9nXPu9a5x+u34P6ozTz9f22Ppw/Q6S5Rv1+x62flu/
7zHU6YfrPKP157V/mOr0/7V/aFz7vSWcfrv2e5s7/XzNx9pxaT7W1pPrutb9
Tj9T17XOcvq9uq7V+r2/SdzaTv9W19Pedvq3Oi9p67p1XtLWdet3UXo66661
P3zUGS9oPYWdcYfObzZwxim6rruhw7V/PsAZX2j/fL4zHtF6+jn+dd72e8f/
ZannoLMuXb/LdO2z5h3iOuv3XmJfL1E5PEC/9zKlTGruu3nanm8cflna807m
j5sDY7Q9z6weOuFGmK6Xftfxf1nOb6Cz7l3Lz3SuHy2/z7nedH3+3851ouu6
n3OuK13X3cu5DjUur9dFXOYob99XWSPlQ/8o4zkbuErKl/+tYX7XkUuk/BuV
Q+t8szpKjmtUh8i+2zOXy3GtnZAw+/cyq+W4rjrjr7USl9ffIi5zxGWOuMwR
lzni2ndLYiWufedku5QfEfFISHv/rVK+dNCK/JzIGGlnJ2fctF3aaeO47dJO
G8fFSlxel4u4zBGXOeIyR1zmiGvj0P0S174fsk/K2/hrj5S38ddeaafNs+j3
W2w8uN+lnfslLq/XRVzmvn1PxBGXOeIy950X53sF8RLX5gvipbyN47SdNo7T
dto4Tr+LUsQZV8a7tFPXIfA6XsRljrjMEZc54jL3rfdwxsW6/sHmHXTdgo0H
tZ02HkySdtp4UL83EueMT3W9hLVT4/L6XsRljrjMEZc54jJHXBtf6zoNm784
IeVtXKnttHGlttPGlfodjy+dce4Jl3bqug5e94u4zBGXOeIyR1zmiGvj9AyJ
a9/ByJDyNm+VLuVtXild2mnzUPp9DPseQoZLOzUurwdGXOaIyxxxmSMuc999
7Yz3dd2LzadoeRvnajtnOeNcbed+Z5yr7bztjLvd2qnrZHidMOIyR1zmiMsc
cZn71l85eQNdn2PzMrquxsbL2k6b59J22ryYruexeTRdz2Pt1Li8fhhxmSMu
c8RljrjMfc89J/+g64hsfkfX/9i4W9tp82W67sjm13Tdkc3H6boja6fG5XXF
iMsccZkjLnPEZe5bR+fkMbIlrs0TZUt5G79reZt30+8h2Dydfn/A5vX0+wPW
To3L640RlzniMkdc5ojL3PdecPIhui7L5pt0/G55AG2nzd9pO22+T9tp84O6
jsvaqXF5HTLiMkdc5ojLHHGZI67lVTRfYfviNc9g43Rtp80Dajtt3lDXm9k8
o643s3ZqXN5Xi7hu+2357yVh3M0c427maD9ztJ852s/ct06gWczMm2Wm+jjy
CW8PufsHk8b4OPIJZb+/u9Cnr9Sz+Msjs972nyH1FM2uf+f//t0i1NPwxzZ1
Subo92ZLZCUGV325u/hZ1d9/Zslho8XPyPqJvdKbfyPnBT/5vOAn+5zZ7ESf
R3t8Kz57rs/6u1/eePEZeLhez/rBg7Wf8OCPz2cFzpO4fy9tdmB03CyJy39v
C3GZIy5zeGMOb8zhjTnaw/kQtIc52sMc9fA+cdTDHPW47Svn+wjHxRzH5bav
n69/nBfmKF/IWW+5TsrPc9ZbbpDjLePkMaLF20gn77FBvGU6eZV1EtfWi26W
uLZedJOUt/WTO6W8rZ/cKe20fIJ+h9byDzulnZY30P0IlmfQvIrlJeKkvM3j
e6S8fYf2oLRzhLOuUr+zaus8PdJOW+fpkbi2nvOw+nHWcx6S8ra+Ufc72PpG
/W6nja/1O6LTnfG47newcbTmGWxeWMfvNk5PkPI2z54s5W29YrK008a5ydLO
ts64OFnaaePZZIlr87wpEtfGyylS3ubNdZxu6w/1u4s23tTvQBZzxqdp0k4b
V+q429ZP6rjbxq1pet6dcbHuv7D1hLr/wuY3df+FjRN1/4WN73T/hY0HNa7N
k2p5m9fWcautD9T9GjZfqfs1bLym+zVsnKXjUBuX6fjO5j11/Gjz1Dp+tPV+
ur/D5h91XGbjJh0P2nhHx4M2PtJxls1j6jjO5p11fGTr93R8ZPOJOj6y8Yvb
+EjHZTZO0bg2L6njKZtH1v0jth5P94/Y/KDuH7FxhO4fsf6/7h+x8YKOO2ye
UcvbvLCOa2x9ne43sXk03W9i/Xkdp1g/XMcp1m/X/r/Nx+k+UO5voL/KHP1V
5mg/fnL78ZPbv6Xs2Dv//j9/dwD/fmfej32fSFwg9VT+/EKflOY/+Dj2Ja5Z
+ff6KRe/9HHsG2SOfX3Mse+OOfbFMce+NebYV8Yc+76YY18Wc+ybYo59Tcyx
74g59gUxR7+QOXx2HP3HxmV114tP5vDJHD6Zwydz+GQOn8zhkzl8ModP5vDJ
HD6Zwydz+GQOn9wvhU/m8MkcPpnDJ3P4ZA6fzOGTOXwyh0/m8MkcPpnDJ3P4
ZA6fe2u81XhKSY/4ZA6fzOGTOXwyh0/m8MkcPpnDJ3P4ZA6fzOGTOXwyh0/m
8Fn8yJ1OMyYcFZ/M4ZM5fDKHT+bwyRw+mcMnc/hkDp/M4ZM5fDKHT+bwyRw+
14d1nNq7ULL4ZA6fzOGTOXwyh0/m8MkcPpnDJ3P4ZA6fzOGTOXwyh0/m8Nnt
1WV7nh+TKj6Zwydz+GQOn8zhkzl8ModP5vDJHD6Zwydz+GQOn8zhkzl8FvQe
Bzj6c51O1ng8q0mmeOby4Fwe/rk8OJfHeeHy4Fwe54vLg3N5nEcuD87lcX65
PDiXx3nn8uBcHtcDlwfn8rhOuDw4l8f1w+XBuTyuKy4PzuVxvXF5cC6P65DL
g3N5XIfLtrzd4NDnZ+V6Y47rijmuH+a4TpjjemCO884c55c5ziNznC/mOC/M
4Z85PDOHT+bweWfW6I4bfj0vPpnDJ3P4ZA6fzOGTOXwyh0/m8MkcPpnDJ3P4
ZA6fzOGTOXy+5Xx3N1t8ModP5vDJHD6Zwydz+GQOn8zhkzl8ModP5vDJHD6Z
wydz+FxK87/wyRw+mcMnc/hkDp/M4ZM5fDKHT+bwyRw+mcMnc/hkDp/M4fPW
cwV++mD4b+KTOXwyh0/m8MkcPpnDJ3P4ZA6fzOGTOXwyh0/m8MkcPpnDZ5sH
a8a133RZfDKHT+bwyRw+mcMnc/hkDp/M4ZM5fDKHT+bwyRw+me8PjWt/st9O
yS+93NRv/EeTPcK7T6yYNjpF828V8rZc3/dBsvCkrl0eKnVb82+vnx5RetVr
mn9bOiN4wdFpmn8r1Kp8rT+Pa/6t153zWx6rkiV8+88bXms2QPNvlfqNS+yz
QfNvC0rWn5rVZKfkhSqcGbRjeG+P8OATSbcK79K8WeFXhpRu2ylZeOzyh2vN
zta8WZOiyYsGNda82dyYJbVnTNC82a3BQ7duPqx5sy7PvNIqvXyW8OjUkskF
e2nerPS0U72fWa55s8EtVl9545rmzZDf4TwP5keZYz6SOeb/JM/mnW+Terzz
W8wxnyT1e+dvmGO+ROJ65yeYYz6AOfYjMW/XtVzRv3M1r4XfmVce1bLBw3M0
r5V2/kz7rs8mC5/d9ssPF27TvFYN5w/TaV5r4sPvtn10sOa1zu+qmdbkF81r
tRj+1/u9C2UJX/js/utfval5Lb/M2WNWzNS81rsz+z0Un6F5rWq3v3rt/l2a
p4o8tGPE7GzNU+F35nsbzB2UXj5Z+LgFDcOeWa55qsrjL7bfVEnzVKMabklP
66d5qrTfJn5YYK3mqRot7Hzj6Vuap5rdqer4Vq9onuqPotdLfjRZ81Qdt+2c
Nz1J81R+C26Me3iO5p0+HRy0aeE2zTvdeHLjsEcHa94JvzMf9Hte1IqZmncq
u+q1/zyJNe80tFfZgfO7a97paNlzt3Yu1bxT7QPrvsq+rHmnKV+MKf1gQ807
5Qa1X/D8GM07tcp+olanA5p3SmnRf8ejgzWP1K7s4usrZmoe6eyQj76b313z
SJFpxVdlX9Y8En5nXvzu47mo5pE+mDT49nsdNI+0t2nzsAlzNY9U9dpD5Zaf
0zzSuKj0RYdraR4ps9vK2tc+0TxSs5Ijt5aP1TxSlY+fKN3oz7UyTp84uVXj
5ypr/meNS77I793xg2JbaP6nmku+6Ndyp+J/qqv5nyMu+aJPR39+8epuzf9M
dskX1b3waOGXumr+53WXfNGV9nf/kF2GlEc5Lo9yXL6nS75o/bc3o4pN1PxP
jEu+6JGWe+vVjtf8z+Mu+aJBt2bu6Pio5n9GuOSLDq3q23Z4b83/pLjki2r2
rpv2wwrN/9R3yRdNLHdf/x3XNf+TuNVvapslayWP0bP2LyMa/hkrPKXAHysP
PKb5n6j+s6/Uqqz5nz5H6xX99GfN/1R+MaFKbAvN/6TdvU2TM4S3vv+r5T/V
1fwPfmf+wEcBcVd3a/4npMrv7cs9rPmfXcmx6S921fzPU5OnfdhzoeZ/RjXr
cWPcRc3/NEgM3PTKoVjJY6xZEnIx6ep+4d/90u6h9cU0z9Mu4FK12z9onqf4
N5Nebllb8zx7r1f7Tw8iQ/jLz51pNKCG5nkiz6zdM22I5nnwO/NurduePl5Y
8zxb/CoNvNNG8zzlN+Teemq25nmG9v/lq9dOa57n4U/nXn9zSazkKyYGJ1c7
tW+/8NEPFqnV8M944S99vPS1MV9rPudG+ivvHXhM8znr7742V2UIb9Cl6f5a
lTWfM7N4ic4d+ms+59r2tDOf/Kz5HPzOfE31Ebe3t9B8Ton018POfaP5nA/C
y5Urmqz5nGzvPljOS/T07v9kPsC775F5Ne9+P+ZnvfvcmEd693cxr+Xd18R8
snc/D/Mc7z4W5q97928wx+/MC3nX64sH7/5w5tu3fT6oV4dYyT80+HbTomuf
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
   "], {{{}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
Naf1r3eBrgVjXpbfhe4PPquC/gd0HfgsCS6H7g6tKnxH+YvQcoa1teZkI/Qe
k8ymyLbUQN8RbiIbC+fRXKTPDGQBWj/P/OTm9GlEn570Gc71GO1B2t/gZvBs
ZF5adXiWbAP9W9H/Nfo/A7eBj8Lb4A7wXdk6+FH4PDySv5kl34wx39Uckq+l
5xnbe7+M/i2uOyke57eOi80e/on+GPrH0edHvxZuB19VjoE+j9FnLrIn+mZa
U77lUJRLKaz7j+y3pJWdiOweMsH1ZMd1n8jKtPrwDeTnmmOa5wnmo+eWHeZ7
h8It0K3yLf+iPEzJyPIyys/kUcyneQl/qN/nnv9pZOnI1ld2vrcP180Vtyr2
ghvDATwCbglngx+Hm8Ip5Rfw2+6F9r560LYzxhpkN9pGeHVseZs7jP+GJK0Y
99sOfYJiGN2P/B9adfQd0Z1kvFp6PopD5HuhbxVbjuU2f7JJUn4e+kc0X9y6
q59o7+tlrrMkm91YCadPtvj9H/72MPKcW4+tEi22qen8YcXi8sOVc1S8Ezqf
XDZdtr1WbLZbNryu7j+wudeV8a64velkgs3P6ejiZJtXz8Opk+096X1VD82m
yLaUCS1/oTyG8hnan7Mwxljaz259/Sifxdlw5Y2iwObVwND2VeWI1mi9Jdr8
b4s+ZWBrZ0xo+2c2Pl+UYHu18iRbE2z/z6r9l3Yz0dZdY/rfdOv3OjIxND9H
/pTnbMXdwP5e43SA2wRmiyYxRq3AbFHfRLsn3VvLwL5b99AgsO/T91aHGwdm
o0bQf4/zAd6UHxGYnemcaM9Cz6S8fndg9n+27jcw26K6xK4Ey7d0RZczND9K
eb5UoflOiuHur1muc/AuitLvqPz50GJjxciKWxXzPgB3iizvo/xPRvq873yS
E8gjzm85iPzE+TOnA8v16B4UbyrXo5yPYvNLbk+5qH3a+Uif6504u5oZmexs
coTMnGCxtuZibq7vcT8XtXeFds+691/dWi4aWp7gU9kQZAWu66Gv6VusrnFk
bz90/SsyTi/0uxljbWw+inyVBrHlKJWrVM5yRWD7+zrNu9jmrexNNvke8DI+
m661jW6zfjf6Gug3Jtj96961nsq5fUf7z5eM25R+5WKLl896tvYVd+x29uGk
2x9TI2fSz1f8ENvv13Moh/xWcSDjVIwtLk7jWT6zprOTspd/J9p8S+TzG4k2
3+6g/y3R5tKfcHH3TPQsJ8XmL69CDonN9ixHTlU8AK9ElnX30AR5mZaJvy0g
G5xoOeTDoeWRxXnkI3CP6bQu9B59syE79Hy0z8HPae9n3OvyTWLLYabjfnfF
lj/MCu9D5vPN5uxLsJxwCsV4yIK+vbvjCRafHnf27RptC5/Voc9gZ89l16+4
+E72U/lx+UW3fYuF5DttV/3Dxd3KRZ+U3+lZXlT5bvlUn/qWv5avctm3daj1
uNy3/OcT8LrIcuXyqY74Zrtlw2XLu7u5rTmiPKry/6oDyO7L/msfkE2XbZeN
1z6h/UL7xm3nuyqvrxyWclnKBSmvmxfuF1nuNz38uPJ8bp+6v1+5/VT7anu3
r2l/+47+Q7nHKow3zu1x2ut+VYyMvj76q/ASuGZsdk32rZv8IPTTkNViyzOX
1r4cWQ5H9dIWkdkv2bGWvuWuW8AvRLbnyGe85Oym7Ocs3+yg7OFI33L+NeUL
aX0o/onMl1AsqdrFd7HlM5WDUm5TOXbVTJWrV95+mmd1gezYu+38prGx1SiV
21fNsW5o60LrY4/zbXZp7wgt/lUcfCswn1C+od6r3q/yLcUZ8wv6TdH6SDD7
eY2+r7r9QvGxfG7NsXv8llec37UFeTkw31s+uGKlC1yHyeYTa+2nR5+P6+Nc
T1RMkWx+j75LtU7VEVTT1NqUT12Mz1uGtt617hXPK66PQ4tRFaveC6w2qnqE
6qQX5TfzWZPI/GM987HyY50v2i6036eY+pvQ6izTPau5NHO+aBP5KaH5+TVC
84n1rh/1zRfXPOntWy1YtTnVbSuFZn9kh84k2Bz+jnubENtelDvZ5pDmknKn
mlvT3FxTLlR5ZuVL88ND+fsikeVRlYdXfnUB/U+456YcrGoByqPmhIfQP29k
+VXVBZRrVY69tmf584O+9cmF7jt4GFw8svx8Lc/y8Gd8+94CkeVsVVNQbrYM
PFz7S2S/5W3uIQ+/5aZv+rKR5cOV+1Ut46jzmdVPdlM2syDPZKHz54a536F9
XHmRXwOLlRQzPci4e/lsfGx1EOV+VUfY5/Z65UtUN1F+WLWSYpH9llKRrSWt
KdUalJdWrl75ea1trXGtddUmlAdWDUI1F+WNVWdZ7nJxqhfELoeTVT6Rb36I
Yp3Kvvmu+ULbI7VXaq/VuYhenp1/UP1FuVzVd3Quordn5w2Gh+Y/pAjsLERP
z85R6IxED8/ORejshOoXOi+hcxddPTuDsTewuE/xXw8Xa3QL7ZyGai46a6FY
UXZmHvc4PrT4aGxoMbPs/xvoJ4XmtzwQWIwt277Gt9xsF8/OeChOP8Tn15Fn
A4vBFYsrB/Ie17diO0fRx7OzGbKhsqWyqcrZqh6k8wbvBBbnKt5VPUX1GtVc
5EPIl1AuQL7KLr3/2PZR7aeKK04GFhcrPt4cWKyqmPW1wGJkxco626A6lPLJ
quOoZqR6jWKTDfS7guwdmh8bcj3ExVCDQotltqH7Kbb9Xvt+ZdUjQ/NpPflH
8rd1T+gKMCdLuHkr/6EQXAhdXhfLKKbRWQ7VbXXGQ+c3VLfVuY7yzmcri0wb
2piZdF+h+RjyNXT2QzVTnetQjka5mhuB+S1n6FeE7xoamz+YlGxnP1S31fmQ
F0KLcxcgvw4sB6JciM6E6JyAzqh84fZ61Xzln8lPk7+2JrR4dlVo+5n2NdUU
VPNV/VdnD+THyJ9R7Kfaseq/y53/oPMPqgUrryGf4SfGPRtarkA5A9WyZ3hW
p26sXA/6ZpGdbVCtWedVZoUWv88ILacjP+RzxvFDy8MoH6PcjfyN477VBFVL
Uq1QObePua97sflD8ovkH6mOoBqK8ufKk6tWoprCUj4fpPkfWf0llWd1E9VA
VRdQbVQ1lxSe1U1K8KyruDqd6t1TPatx6wyGziPpPIZqCnS7X6NR/Uh1B9VJ
t/E3UWT5Cg85QPMwMt9FPozy9qpRKm+vmqN8RfmtpZItn9/Qsxqc6nGNPKuH
qoal2q7qWaqLqVarepbqX6qNqkY2P7Z9Wv6A6kQ8nvu1JPlA8oXkE6k2lNKz
2pPqR6k9qz1t5fPB8t8iq0MxzP3ajeae8iUlk60eWtCzunCayJ5nhshq0AU8
q5OqdlzIszqp6tSq6ag2LZ9fPntZxskU2Xdlj6z2qpqj6rA6h6BzZTrfonMv
kz07S6Daa2HPaouqMxbxrD5YOtlyeapv6nyCznrp3MLrXKeOLHekehCq+zUg
nU+Y4tm5BdWn+He/TtSM396P+/kjtJqRXpvqRKrFqIalmqDq4KolqVauWrzq
L6q/D/Pt/SZE5qfKX1WNXucodA5NZypU01QtXjVK1X0aeFavUZyjeEdxj2rf
qvurrj0d3UDGjCOrj6tOqpqR6viqCaqmr1pSPc9qlKpX1veslqT6uOrvqner
pq/6oM4DqIaumqPq+ylYVyMYv4r20si4emT+q/xY1fRVN9YzuRlafV91K9XW
da5AtcX7tfjY9mbt14oZFYeVSbYzBqrd69yCzjCovq+zAao/92fMf7QXcQ8j
4Vqy5b7pb7s9d5Tz32pG1qdeZGcPdGZA5xaSIns+qSI7h6AzBjqT8D8VpRFm

          "]], Polygon3DBox[CompressedData["
1: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
Xpz7TcxRat/JuXUSK9A1FKyrQF/yVcFxpDEnzA1zwtygg0HvDw9Zr39CBim6
TbStWLWfDHuSvYnPzaiCbQKs1/ZV2173ULh5bp0Wdkh4HLwOnfAnqX3muG+h
D0aXjG65VdU6pz1L5pnwzk74AFXsn8T9Cj86fCnwB2ypcEelr0vt/8R9DJ9t
fAN434Uv97YK/5ba3sn9DZ0zumq+ybcZL+x27Bn2DjpaZJe/CtbdAug/C9bP
oj9ZLPrNgvVJAJozlLOUM5SzlDv2UbnlA+7k6DMn5tY5oXt6q2D9C4CmzvV1
M6cFzxFzhQ58tehVBevG0X9X4m6HPpo20ba1BeuS0bH/BK8oWPeODxV6bc60
5qGPJ406qRsdOvdy6qTuj4XzypZJG+T+Rhp3y6XBH3hjBE9iv+PjeXDJOkvO
G+wk2GL4Bu1Ap4VuC58h/IROyX22IMPDv/G3xncXf138xR8Kf178dfGPH557
7HhDBv+HR3A2blM078CnCN+iH2KM2EOcjR2L3luceZx9OxYtO9ya2ZcXn95P
VP9tmf3Xifu0Yn/tuXH+wN/hIZytXYrmLfiL4xtMHvy554S/MT7G+Ovj/40/
N3nwJ8dfHF95/LvxD8ffH390/Ovxh8c/Hhr/et4f8R4JmjL/719OWerEn/zB
8GfGRxz/f3gwshI+JPBmeARna9eieQf6dngfeWqG3Q/fT84LdGbYgGuHfIRt
GJ4Cb0MnCa9B5wWvQYeLLgx/6nmJ/enxT8f+wllAGeyd+K+TRh95z3BL+E/z
huJjhU/N/P70bOG+im2uS2Nt4EvG+68blHZ94vdkUzO/95sS/BkfLHyxvgye
dpPSJyttUuL3fbz3g6YO3o/xnvA6xifxe07eq1E3ce+GfnNs8H/uA7yfHZc4
Dn0n7yevET0x8Xtl3i9DT0j8/pX3sNDjE793PSXze5Djo3+8hyWNOnmPy/tS
2kKdvMfkPQdzyfsI3nfcnHms6PNHFd8fsN9gx+F+gJ8dvndrYs+fjE9CYh/9
eyr2wSPP2uBZtIexJs+9FduxsW1jY8WuOjyzb/kJwgMV+7Xg64LPG75v2Lwp
Q15ssadl1l2eE/nxgaEMefHlY37pO3XeX7FPDL4x2EixW+IDRRw0tkx8gvAN
woaLnRWfIeKgsa/iU1ArzjN8DbizcHfpK7pL7vcxjB1vTHh/gs8Tvk/YTLGd
4nODnw1+gfgW4mv0W2L+jM8RPjX41mBzxfaKzw1x0NhT8eHGDxsbMbZifArx
LfwgZBjS8NXGh4Q8+GTjd41PKb6lw0PfOyLGg/OTN7K8oeV+Ak+Dt/FOlvOU
tuPric2aPlAXvtz4GFMnvo1/JObPtAMfUPw+8aPCt/yXaOPSONPpO75GlGMM
0Iuzl9nT631C8/Xid7Is9dmNnRlb+eI4o9A78h6K8xydODZo8pDGOYYPO35b
i+JM/DPugshv7FPuq8hC6AyQf2vF3Q6eBN/mzObsfrhs3Sp1MS8L40xFR4ss
/1LZultkAGSBp8vWvaKj5W6xqGzdbauQzeBJ7BP2x5DEe5L1jwyALHBP2bpd
7mz4+3BH5C53e+a3TJwJnyn/zMzvgWYIKxSelfltEHFfVexDyxm0Ks5UfG6w
93MfwhdnWub3WtT5ecU+KvhTtErsu3JH5rdc5PmiYh+smiGf45vFnZ28J4ju
qvbOyNyW6cJy9B2Zaer4smKfIPxduJ/hK8SdjLaMRoee+85G2gTsSLnXDr7D
7AvWEO+52Eu8b+L9HPcr3gZ8nvi+gk8CvgkfhszNmmXtsqZZ29i08Qdhj2Lr
RieDbmZ3/dcx95pn7TPmjD3+C9RJXcjxvN/j27yn4r0NMjvrCR88ZHn8L5Ax
kC1+Llj+5U07b+KRv3mvQ1neX/Fej/fivMe6R/hG4bsy03cnlv9530de8vCe
HPs+a5dv4t/Je6IXE595vB/izo59BzsPd3neH81PnIf3Rrzn4vcSXkv8/o73
cvw+AnG87+J9HmmvJn5fxHukVxLff7nv8v6INOLS0HWfHfwDnfftcf5cE+vp
tjh/JsZ6vSXOL84c5JsRJfsB8yaCtxH8HsRSzsrEv5/A7zG8n/gOy/371jiv
qBN56NI4X2jD/DifxsZ5xnnO+7DBifcY5w/vfXmrxXso3ivx3pDfDuH3M3hP
yHtFfm+D3xfhPR7vI3n/xBsp3ofx3omyvH/ifTC+Z/CHlYl90N6I+zN18N6R
935vJ47jPR8+0/hO44eDzw2/F0Ff6SO/N8H7Y+rmjdW0it+7oV+kDbzP5P0j
beX3LHjvyPtB2kofeC/Je0jSmFPeP3Kn4zcX+F0I7nrTQl64NvbzJwqvSPyb
H+hT8VPHdx0fLny5Zoa8Myn4CT7h+Ibz5oS3J9zBec+PzI3sTd/wFcfHiD7i
E4+fM28weIsBje8zNivipof8c33wC/YIe4XfkeDuyrfwxcemxTe5Q/L7EOfF
3kK+GpP4jfTSin3s6QNtxyeMtbXe17zoNYZvAvz1y8Q+CrNCHkNG+7pin9D9
ohxrk99LWZZ4TfL7JPw+zWesvcS/P8Pvs8B7iOP3avB5x48dPz58+qDxbcen
jzjkRWQ51ijyE79f8mHib/B7LPxeyUeJ4/g9E37vhm99kvj3bfi9G+iPE//e
C7//Ak0Zft9kRsiPzBnnwR0hz10X/Bf+gqw6NfjNsLj74dOCTxa2JGQ19hQ2
JXy48OXizrey4DsotiLu8NxN0aXjC8cddF3cyZBfePPBXY3zjL3BWwvuutj/
kQ2QEfBn5r00bynZk7y/x7bE+03agI2J95yDEu9h3neic6EsPsroYvAd5bzF
3tk92oqvG/dT2oyfM77rnOu89eA8Jy9vEbib49vL+Yy9FR9fbGO8D+XNKDYy
bGG8DyUOmxjvReEFAxK/H8X2gz6fN6nYgLC1UZY+YHPj/enAxH3gPSq+xcgL
2GPxMcb/B1mPMcO/Gl9U7p/Yd/FJRZ4gL28X0DWg/+QdDD4R+Eawp9nb/MYL
+hree/NWlTHl/Tm2RN620gdsitgOaStx2BB5D0tfaCPvY3m/i28F73F5f4uP
+KIYO97m8H6c97x8g/fkyNvI5icKsyt+I8MdiLvPimgTbeN3aNAt8Z6X977U
wftz9H/Y7rBBog/k/S/fJg/vff8PmNsi6Q==
          "]], 
         Polygon3DBox[CompressedData["
1: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
89B94Bx5yV7znte7/j+WERKs
          "]], 
         Polygon3DBox[{{2113, 676, 675, 674, 673, 2112}, {2119, 714, 713, 712,
           711, 2118}, {2123, 735, 736, 737, 738, 2124}, {2120, 716, 717, 718,
           719, 2121}, {2116, 695, 694, 693, 692, 2115}}], 
         Polygon3DBox[{{2047, 256, 2049, 2138, 831, 832, 833, 2139}}], 
         Polygon3DBox[{{2049, 259, 847, 846, 845, 844, 843, 212, 830, 2138}}],
          Polygon3DBox[{{2124, 739, 2037, 1932, 138, 481, 480, 479, 478, 477, 
          137, 2123}, {2112, 77, 433, 434, 435, 436, 437, 78, 2028, 2027, 677,
           2113}, {2115, 92, 444, 445, 446, 447, 448, 93, 2031, 2030, 696, 
          2116}, {2121, 720, 2035, 1906, 123, 470, 469, 468, 467, 466, 122, 
          2120}, {2118, 107, 455, 456, 457, 458, 459, 108, 2034, 2033, 715, 
          2119}}], Polygon3DBox[CompressedData["
1:eJwd0DkvRGEUBuDPiDCWgkqhoFYMQghBolASE4JWpRB+gMK+NWIriK2ztRJa
DT9CIsQWg8oyImJ5ruJJzrznvefeTFnfUHIwFkKIU0BjTgjzgibzTkYIu+yx
zwHN8lR2CA8sRT39eobNCbt1nQ022WKbCvm9/h0jeg36PSQyQ/iWnXAWvd8u
nzxyiXMqL9fr1k8SN3/q77Bn9+F+mnfeeI2+WZ6l16FfS787pbIFu0WWWGaF
MvmNW9cM6NXpd1Hi+S/ZIcc6MbuM6I/i13M/HPlZrNepX0lL7H8dRu3GGGeC
SW7lF26d06pUpd9O2vwhW4voPOs+8UiKB1blL3pt+tXR95kLZVN208wwyxxF
8iu3LunVq9H/A2nVP6Q=
          "]], Polygon3DBox[CompressedData["
1:eJwt1UlsTVEcx/Hz+hK9HTQoEmxIxJCY51JqjCGpmVZfuxFTTTUsJFViCG1t
qJYQ007Vzhw8ZUOVHdVFqaohqhShZsr35/wXn/Sdc//n3N77P///7bU0b/76
GOdcbyQhPXDuIxMf8B4tKGa+PuTcUzTgGRqxj/nv+Brr3HM083tz2LlN2IgN
yEM8sbntnBvN3rnstxprMIbxXISJiUEIDkf408SaN2jGW7zDUeZ/6p7cqwFN
/F5F/EqswHIsQxyxEe43gr0Xc58MZGIk4yese8G6TigmrgiF2Is96Mj8dGJn
YCZmYTjrZqGe30/wGHXIJ/YBax6iBo9Qi616J2jlXqNYl0NsNiLIQk/n/8dl
9j+vsGfQs+iZGlnXBqfnZu4tmvFG19GF+dtcTuH3WIxDKpZwrwXoqhh0RjLK
if3MmlZ8wVd8wxnmf+udcq/FrOtPbD/0RR9c5lobcX/h+L9DiMEVzWst6z7i
E7/X4j5x91CNu6jCGuavsuYariOKadwrBRv4nQcdwHUY7PxZybOzs9HOks6U
ztbLWMuF5UY5Uq6Us1jWLSEuCxFkIyfsc62cN+G9cs5cEQqxF3uQqNxzXsaz
9372O4ASTGDcomdkXQ5uEXcTlbiBKLKZP01sOc6gApMDn0PlshfKiCvFQZTg
QMifgSw7EzobOiM6K69Z945raThLXIXyhHKcxgTmdxC7E7uwG6mBz32qnQWd
CZ0NnZE4rscjAYlojzvOny2dMdWuavgW8TdRiRuIomPI136L9QL1BPUG9YiX
Vu9DcIq4kziB4zgW8rlcZ7lVjpVr5bzZ8jAbl4i7iAs4j3NIZ76U2DIcwmGk
Bd5hm9M1xSj2f+4sl4WWW+VY99C91CvUM+4zdw/VuIsqdAr5XuOs96gHqRep
J8UF/nqVxVfbeu2j/X6w73xiAsaxaId5ga951f4lxhdxAedxDh1CvmfUWQ9R
L1FPUW+JRzLXHxD3EDV4hNqwr9Ff7LuImB6Mu6MbFjJ+ZedlO+NtKMBW5COB
/bZwrscSV8B9tmE7xjGusz6YY7USsdpRDamW0lk3lLgpxE9VzWIY4wR05no9
cU/RgGdoDPue8Id9M4kZxHggBiAj8DVRYTWiWlHNqHbaqx6IKcFBlKIs7GtO
tadeEbXeoR6iXqKekqRzRtxxnMBJnAr7XqSepJ6m91Zr77HG3qver96zemKy
9Uj1SvVM9c4g8Oc+anVQaXWh+lCdfGPfOcR84f9oxWfMDnwv1PM32vtosPej
96T3pV7ax3qreqx6rXquane31bJqWrWtGlfu8i2XBZZb5Vi5Vo9IDPx3QN8D
fRf0fdB3Qt8L1fZfYiLETGI8EWnKL+N/FmIV2Q==
          "]], 
         Polygon3DBox[{{2054, 271, 934, 935, 936, 937, 938, 244, 2035, 2121, 
          719, 718, 717, 716, 2120}, {2027, 240, 916, 915, 914, 913, 912, 269,
           1683, 2112, 673, 674, 675, 676, 2113}, {2033, 244, 938, 937, 936, 
          935, 934, 271, 1711, 2118, 711, 712, 713, 714, 2119}, {2030, 242, 
          927, 926, 925, 924, 923, 270, 1697, 2115, 692, 693, 694, 695, 
          2116}, {2055, 272, 945, 946, 947, 948, 949, 246, 2037, 2124, 738, 
          737, 736, 735, 2123}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, 
    {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jlPVFEYxvF3GBnAjbGhk9XESj6BVDgQMuyEECA2GNkK6CbQgZBATYEt
jZaEAj8BFCwd+6IgCZG4Vtjzu6H45/k/Z8659z03UzM02T2RiohlTJHEn5dG
NJIsr+Q5XsWreDOv59W8hTfwGp7nrbyWt/FBXsc7+Dh/wbv4WiZiWu/hu3yR
9/JT/pH38Rv+mffz//wLH+TpkohNXsRH8Uzf17eKI7bx1lpjOuINckjpf6z/
xT+M6E+LIsqRxYGzefta0YZ2dCBt36HfjnCME5ziDOf4im+4wCW+o9iZMVzx
l+76jldgT8+acyOZW67LW3f6JH9k7r/7iVyQO3IbU3xVjskVOSCXZF7Oy9ey
IF/JUVmZPAvD3jegl/MhXprclz/BYzzCQ5TBiGGcyCSz4wFcPa6Tdzg3hw+Y
xQx8rmi2uQk5FKx1O9CFTmT03x70Cz/xXp9O3f+n7gBB6UKT
      "]]}},
   VertexNormals->CompressedData["
1:eJztyDERwCAABLA/OiEDDRVQD0jgjhnrSKgCFJCMaWP1WZK8NXlysj/vvffe
e++9995777333nvvvffee++9995777333nvvvffee++9995777333nvvvffe
e++9995777333nvvvffee++9995777333nvvvffee++9995777333nvvvffe
e++9995777333nvvvffee++9995777333nvvvffee++9995777333nvvb/4f
stfl3g==
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(m\\), \\(a\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(m\\), \\(d\\)]\\)\"", TraditionalForm], 
    FormBox["\"A1\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{631.4303528134957, 307.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {0, 1}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.110674095116823, -3.0345642088388605`, 1.0039039380690777`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.6598815220359488`*^9, {3.659881568312202*^9, 3.659881584285515*^9}, 
   3.659881696407206*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Equil", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}], "/.", "StabParms"}], 
     ",", 
     RowBox[{
      RowBox[{"Equil", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2", ",", "2"}], "]"}], "]"}], "/.", 
      "StabParms"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["m", "a"], ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["m", "d"], ",", "0", ",", "1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Active Mortality Rate\>\"", ",", " ", 
      "\"\<Dormant Mortality Rate\>\"", ",", "\"\<A* or P*\>\""}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<A*\>\"", ",", "\"\<D*\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6591092081691513`*^9, 3.6591093922896957`*^9}, {
  3.659109437809731*^9, 3.659109472847843*^9}, {3.659109583098089*^9, 
  3.6591096559758244`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1:eJzMvXk4VV8b8C+VSqlEySyEzPNYrWMsmicaEEkzSSFN0qiBJKU0l1BRkrFB
SHXQYDjqxJGZ03EcSqXZW86+13q/u8d1/d7/ft/rua51PR+rfe792Wvvs9e9
97rPhBUb5/uKioiIDBguIjLwT3t58c3sCN3NU6GNMy3t6CxSYqzTn3pmonM6
Ah4U8POj/h4lRgr3ba+6cyHmcSGFG47aKDHU70mbZPuVYp4tH6V4u0uR8fKJ
5l115wrMDzK8HhtfVmQc1n/y3K/mNeZHs1JcE2cqMpziVrRm+dVgvm7Yma5D
HxUYA0T+/leP+ZyVO+xnxigwlme8PKru3Ih5VP6Jw9N0FBgP15yXdY5pxjzy
Qc+Lhw/kGfKKGxL9alox37LcZRbLUZ4RWm5tEqP+HvPKRTZVkU/kGG/2D8vP
8mvHvFVjedpjazmGmTV7Zk1WB+ZVjxKZCgmyjOOCxLe9vZ2Yi227vkZURJaB
94fyKi7TcUhylyH2DO33BT8WhRgYYs/Ax8StWCXxwAB7Bt5ZLaVuIGWAPQNf
b3L6yS8ffewZeHzuttMKt/SwZ+C2S4/e1fygiz0D3/H2Frqrq4s9A3fwWH7D
xUsHewZuc4mZt/GINvYMfHHDmctnUidhz8B/XrS6afJUC3sGPtRRXf4cSxN7
Bh532u2CKlsDewauNujIZbGyidgz+GvNNZcaEmuKPQPfxf4h2Ctrij1D2+m/
t6j0rAn2DPxRu+L7h3Im2DPwyMDdXRanjLFn4PFz1KPGjjTGnoGHJSpsMdxj
hD0DV0tWNfD6aIg9A7/tebw31NMQewa+pnGg5+WjBtgzcM/fy4vWLNDHnvHn
+h940TxaD3vG+/VE6dv1Ih3sGXic1nkTJ39t7Bl4iM+JBQyJSdgzeIrc+sxx
aJc59gx8ybXFSzlu5tgz8LGL1u2LfmCGPUO7+ox53XAlM+wZuPPjx9tMd5hi
z8CZsx/O6nxtgj0DLxq1UkNF3wR7Bt7za2/89XBj7Bm4zGb3LxvKjbBn4N9+
+Gq7KBphz8C//n6XrexriD0D570eYXlyngH2DPxgQcXmmWV62DPwI5tn7h/v
pIs9A5/mPMzyero29gw+Nt/YHeQaaok9A++qNXqt+9wCewa+J8J+9TgFC+wZ
uEeQgZjIWnPsGVrDVlluVboZ9gz818YDMXu/mWLPwNN5Nyq7J5tiz8BHrll6
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
+GdVjXG0fF0XMpL5dadkgTQtX9eFIubO/jkhdgwtX9eFfryTcFvUNpqWr+tC
9nrWiWpnR9LydV0ofVOJqnjUcFq+7k8884wO30saSsvXdSGzgb/Xx3AH0/J1
XejBsdP7u+bCuO3CvPqL2DPTBhHKwxUELeQVwTydCzUIELSf279MbU0XxRy2
r19n+XrUn+MI/x6299/td+HtNPiPlysIGkD1j0HQ/jfv2omgXVKsH8gtGkCL
MwbRtw/9T/rfu2ClTbZPjwf6wb8THzaR7RU6gOL3//ED/x/+fvbTA83g6fZ4
fPbXH/4+29PQa1KHE7X9m/3s700E7X/5/X7yzFn9bOc+jtOirWe9qJ4dLX91
H807u/i4xj07/LmwvX21BvNUEh1oHtLRYffcyTE3HfHnQnvwW1vKqlEO+LhI
GAyzK+elIXpeXf3wF3ZkI32/StFHl6VnjrkkI3pe/c0lk1MZOxMQPa+++2se
U3vLJUTPq3/Ztb+ud/ppRM+rs7U8dzwZEYXoeXVDGZPJaaO3YB7mf/PXQY+m
fzwvDUtnPtqdiqAF3qYXki229BG6McbdpWjCDcy/LmBdGJLORPEPdY2PXr2O
eVTprY6Y3WVILPxR7/1ZiZhnPrNVn3uFhRRknxxzLybj542B4L7PQzYao6o7
z0v5Aub3rs/7WVzGQUP10Uhjo1OYLznBK7zqV4/2vU6417XmCOZ7b6/npvj9
mUeFOkrqOARi/sV1iZmLdShSO9YtCMskx0srZ7leUkAW+jrBV2Bvn0I7Luno
wPDhdeE+qf+Mc21rxdN3Em5jzvyqmyCWm4wEW26NWa1665/xOWbDdJFfo2/+
c/2hj5/+4vx//dz+jmN/+9Wfh/7i72889Df++xsn/Z0X/Y2f/s6X/sZVf+dR
f+Otv/Orv3HY33nX3/j8fz0f+xvPwl5p+Lnq5Y0/LrlYGVI8Hz/fTMovljSb
pYQ59N+qUPzoSTM8Z2Hi/kML5isVjlDCHK8TkuHs3TMf+pfh/mGfJLu7mIqY
Q3/RpBPbTt3XpzgL98+vSVPYFa6IOX4veOPEJcXK0J+N+2s9ujxV2VwRc7ye
K8VtRd0uPYpzcP8Hzo9s9rRCfvjf9XHQH7Yjcz1F4wxbF/enr/MScrKebm0x
W0XLUgFz6F980f3+m1AdipN1dtYKc2y82PKYQ/9vB42CE/O1KU7W3/UwLlav
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
i6HivxOyrbpxF/gk7xuvLnpw/ulgkm/0p+KXPXJ64CJt8Mmn/LehbM0tHm+W
kXyjCxX/XUu2C+cyPd/YjpbcWuJceoHkwYT+eeheRZrT4lySB1Pti5+HLpyc
Zx52E8ZhGeWfh2aLZNae55I6dUL/79Fvzf3WKdok3yj0/x59znA6NDuQ5BuF
/t8jJe/Mm3r5JN84ncrjxdPyjdOp+PMv3mia1ELyYFlU/IvPW3mkBJE8mDoV
/2tb99JNEiTfGEPFf89zrcfypeCTvG+8bXfeMtub4JNP+X+PamOVtgwbRfKN
HCr+RSuOrLU7SM83dqCG4/bmcmtIHkzovwPNd1rw1UsRfDJRRl/8fHT3g1l2
mz+pEyj0z0dv6yfz5z+B85pF+eej7N5DwYYTSL5R6L8dtT5O5UruJflGof92
NC404dLRdrh+wvPNf/ON1VT8YjFZV0fuInmw6VT8600mrhqpDj7hOTIfReg2
qsldBZ9cyv+feZ7fi2MLR0L+Fp7X89HrD8E3pI6AT/K+ccSsn+eT5Ei+0Z+K
f8HJk+5r80jeRnhf0YnCN3ec/pRO8mB92K8THRh/7qX4OPDJpOLvRImCxxVd
O8FnGa4/bBMksk61neTBhNefP/c7pY1uSp4k3yi8/gvQV6mfAavegE94vtmB
GtU8UsPcSL5xQz/5xo1U/HnfzndPdyJ5MA4Vv0u2weGBvSQP5kLFP7orXix1
N/jkUtdVAfI7etb0+hiSb5xIxb+tTJspmwU++egEFb9r+fDtmhtIvhHaCzkK
3vGGgzBfT8VZrNHV7TdpIK1/Fzp1NX9JzgDgkE+jv8+WT41ben1mmG/S606n
Uf33/MOFfs7+w7OoPBv9c/uLJ4vK8zSJmuzKOGePt1ND5Yuu3vkQfK/WDnN1
Kv/TcOLwt+9bHTF3pvJI6yY7bFJLg+2Q3+N7/LtscK0A8odMKj9Gj7OMys/Q
PbBQ6//cXza6/D99ctDT/+mtnrpvvzSZ7sH60qzgPUtuIPp7iatHcgsd14Yi
+vuZyfFVvwUN1/+JX8lCrN73On2/WEi+VUJBF139J/6aqq6zhywu/hP/cu93
e203xP0TfwWtfiz4X/4zjbE+OPX/I+9vf///tl//+of3gGH/HJu9S4xtyO+N
At+949KsQdMM8O84A5/v6nfUPlkP/44z8EHXfztUjtLDv+MMvFZ0y8LoTbr4
d5yBD1hnGKX6Qgf/jjNwm3GPDmqr6uDfcQa+RlyijBGgjX/HGXjz/vPin7Mm
4d9xBm7JyH3//LMW/h1n4J4OQQPsdbXw74ECd93ds/7JEk38O7PA09uDzTJ2
atC85aOQQdvjRJRNaN7y0QG57TsPRZnQvOUjfQ/5eUtTjGne8tHW18EaW8yN
ad7y0aJTq/ZMemhE85aPEraZn1zAMKJ5y0dj187WLH5kSPOWjzyqFq72tDGk
ectHt8tCVxX7GtC85aOR7TbZC2fq07zlI3kTk4JPk/RoHpjomu8xue27zWge
mEgxT+reQQlzmgcmuuCvlujUZUrzwEQiP8sjX7qb0jwwUXGs6N3PT0xoHpjo
e7jeifM6JjQPTLRwuKhxYqQxzQMTzbzRPEDQbkTzwESB5y6UzHMyonlgokNK
0lEp5wxpHphob/vVqlu1BrTxw0Rb1m7/Oj9UnzZ+mKgg0j2gc7ge/r1g4G2z
3U5MOqmDfw8XeImjXPllaW2a5zIUMnLM0UFjLGiey5A/M3/u7QwLmucy9Ep9
/roFG8xpnstQbHF12/7HZjTPf+7Hx9hq7pcxo3kuQ47zzq2yWmNK81yGmi5p
fjqUaULz/CfOacaqHr3GNM9lqGfcfOvTjsY0z2XIvrV4o3KEEc1zGTouPra8
6qkhzXMZerThoOX5AYY0z2Wo7lV9SEqAPs1zGfo0fql5fpUuzXMZ6p05aZmR
sQ7NMwsl8e40ielb0jyz0KaLwZmDGixpnlko2J6nYbTVguaZhYzz7ds2PTKn
eWahUuW0b1kDzWmeWSjyZdWZDgczmmcWesxI9hHda0rzzELTulNmNjw0oXlm
IcNR3HNBn+meWejAwvVt1ycZ0zyzUNixcNE1S41onlnozuaA3tMH6Z5ZSDY6
1t5lhQHNMwulXI9OaUvVo3lmobYBs+a/+UD3zEZWKHLx8gFWNM9stDd3ceDo
AiuaZzba+uXXLLE/V/X/emYjI4lr4j2hFjTPbBSXM6RONZ3umY1aH+5N29ZG
98xGZ35s/iyQNaN5ZqOgmkl3Njqb0jyzkXhw7kZ+kAnNMxu9HnnKduFFumc2
GrfhZ9bJJ3TPbGS/WqvmApfumY3uvZ9v4DHUkOb5j4f7PJftzvo0z2y08e0F
syXbdWmeOWhUao10boIVjdejr87lJx9oWNP8c9AKsXnrIv3pvB5tLxh0tuqr
Ne24cJDnyS1m69j086Ie/SzlRM+fb0U7XhwUtMV/0Mlh9ONYj7q2XLkdud2S
dhw5aOXeJn89S/rxrUebMhfU+lyxoB1fDmo6sFhacyX9uNcjUV+H0pKn5rTj
zkGIM90hKJI+HuqR3BTnzmwufTxwkPj++B/iGfTzkdT3+O844SAjxW8N1W/o
52k90r1gtfObuilt/HDQjDPjpr35Sj9/69F5mZozFsiENq44yPZsmfLHcfTx
Vo/M+HNnv3I1po03DpJVsBqoaEwfh/XIbuDW5xnrjWjjkINExodrOrvQx2c9
ei+W2Fuzkz4+OSg17eDDl3n063A9kjY1GLtJzoA2bjmo4tkKzbJG+vW5HvnG
xh3ebkK/32hETcwKn7ZI+vhsRPZtn5h3V9nQxmEj2uke3yBIp4/DRrTiYCG7
oIo+3hqRmduwDLcv9HHViMYOcb2TJG1BGyeNKMowpj7Z0Jw2HhqR5etQ1fku
9PHQiGI/emvGe9OPeyNyMv7sFxJMP76NKHlHq219BP04NiIP3ul7Jafpx6sR
JRU9yNVNpB+XRrTZubCyx5vuvxEpHu4OXRZI99yM+I8ytPc30z03ozHiHwsH
P6Z7bkZhQ6xufxtoTfPcjGRm2kq6T7CieW5G9YUjOhMmW9I8NyP1mIjHzxfR
PTejCKXtLaUb6J6b0b6Z1w/Eh9M9NyO/PZ/TDWPpnpvRUrOtcw4k0D03I6Xi
47In0umem9GuQ5+vzc6je25Gi3enLk97RvfcjHJZeiOXn6d7bkZOY255H0ik
e25FcYqNnir6NjTPrWjEBadbEZKTaZ5bEcturkLpdLrnVvRyBfPMHm+651Y0
1b7an7GV7rkVcX2rxv0+SvfcinYv0e3KuEj33IrGf6i08Uyje25Fj20vKHTn
0T23IkXH46c2lNI9tyLJ35ZRj6vonluR8s9Pz7pq6Z5b0RcZ2zZ+E91zK3I4
8LHG6xXdcysK228YsrqC7pmL5PeJvvD0o3vmoknxehrDFtE9c9GUKM6+xr10
z1y03FmZGXWa7pmLRBdlf/e4SffMRZxtSWtdHtA9c5Hc4BMus0vpnrloq43j
fR823TMXLf5oVrCvie6Zi06MG+58k0/3zEXlyjIa5d10z1x0fj5Lsusr3TMX
3b3nfnPAT7rnP3Eeftjx+xvdMxc5FCjce9JD98xDTkudbBkJdM889DHPmpdw
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
GJ3lsKuZRtgMK1tGZzm4bzE++/uONaNz3fvdSrxsP1kyOsvB5PmFf/bNNmd0
lkPtXJ/KS03MGJ3lIB20zS73ojGjsxxedljibLXUkNFZDvLuM/oYjTFgdJbD
k4nvBjUaocfoLAfrwp7+0aXajM5yiO5zytC/C56vqeT57abz+9W+0GR0VsCf
D277kvlztfhSwP3I00OHP2vH6KyASZ3Ei16a2TI6K+B9obWOVb41o7MCeklH
GtuaWjE6KyBs7j+dT541Z3RWQGppbguDoWaMzgpwz1W1PWtiwuisgCT3XW5X
PxkyOteNs81Pl/VlBozOCpBWdHEe8UGP0VkBwRcuRq9qpcvorIB9Gm5ddmxp
xeisAJNfa+Q/PPDcYiXP81Zva1nSvBmjsxKSIrtUvrW1ZXRWQmVt061/Ztsx
OivBymlPmH2d/RfqrISXlU3yL0VYMTorwebkteJeP8wZnZVwcPTLJuSyGaOz
EjpVfV9YtMGE0VkJ++KadwmPMmJ0VsIKiWiGfGYbRmclFKSbvy9eqc/orIS/
dv46OfuMLqOzEoYdv2B/90VrRmcl5Fq7t/++qQWjsxK+Znzu9nM6nlus5PlY
7z6zh/7dhNFZBcbuTjatfuNzDb5UkJo3rouPjy2jswpSlq3/PCvJitFZBdat
i/cfGmTB6KyCahPH32+s2jI6qyDTSrZ9+h8TRmcVLL43ZXvUFyNGZxUEBpBq
x19tGJ1VIJ92YP0DUwNGZxVs1BKLd/bVY3RWgduaBc6znXUYnVWw5EuU3VtZ
S0ZnFcS8Mlj0V54Wo7MK1q+Iu+v3Gs8tVtLr35q2sIlVY0ZnNeSEk/aHv+D5
UHypITk/ok9XaxtGZzW8TTyZEpVlweishmgXs0N2O9syOqth6vt/XD/U+RVC
ndWQXuZp+m2pMaOzGq780s9ZsM2Q0VkNG0+d8Eq8ZMDorIagNxv1d1boMTqr
obF40sWEIF1GZzX0GbXc8QS0ZnSum+8/B25ouLZgdFZDZovs0uSumozOatgs
O3Lu+xo8t1jJc5+cP4GmHzVIwzk9ms+wPa66qv/qHpw+NJ8hWdOvqdfV7qTh
eCDNZ5BMkXu2W9iNez/NZ7j0KtU73bsrpyfNZzizpfKdxfcQgvVHkLdfm6Z7
9RYhWMcBefdWj+OTH3YmWHcA+cWmVyKM1wYSPCfP82S7l697+hM8181/rscB
L6WpL8FzyMgDh1nPCPjpRfDcLPKbsy2SlCoPTp//yXNwe/UjqQg4TvMcDrZx
LH38JIi7Ds1zsAs3Kln7vBPB+jXIrcZWyju+CyBYbwV5fNTmhRGN/EnDOU+6
r3hiY+ywNgc9CZ7/R949JccvT+VO8Lw68pJY7bU6CW4Ez1cjHzXE4IPmrPYE
zwMjr33osNJoshNpOD5J8x+MW7s6jd/px82X5j8EmjwvT6304eZL8x8OVDbv
mzrcm2C9GORTNu86lP3Qk2CdAuTr9MwdV7m4EDxXj7zp+V3nJsc5EjwHjvzh
0gFvPre2J3huGXmtd+qCzim23PhpXsRzTfu3v5w8CdYDQq4pLlkyT+JOsH4N
8skmNXZTm3QkeJ4feVpUqJdDiB3B8+fINYpNT39zteHWOY1f5Dqu6TRrqiU3
Hpp3UXx/8FWvax0I1sdB3li9W5oc40LwHDvyeJ2907bZWxA8d418/QYDTYNc
U+76WD+nCO7oP9DdaO9I8Dw28knJF2RWC4yIFre+G3gZHOXq0oQJ7EDd89rK
2bvfDXYkewR2oAxCR/50WHLenswR2IEyeJs//9FCs3YkQWAHyiDziuanljts
SabADpTB+KOH/swztCFSgR2oe266X653uz/6G/R5MGDF2NfTKnC+9LlveiPp
MNMZxpz+NA9BT+P0pGNNDEkvgR0og9MXrjVZdV2fFAvsQBlo/Vj60DVel0QJ
7EAZxJbmq/vrtyYN9ZVoHkIoV08mXGAfZLDlxNf1H3Takb4C+yADu9Teg+L3
2JI5AvtQ9xzXY+vmqvY2BOtDIRclaeYs3mdFMgX2QQYqn31PfKpxv5Q+N8mu
Vw3rkGbI6UPzE8w6fHEfHW3A6UPzEzwd5JEnRumRXgL7IIMhBwzPlF7XJlKB
fZDBQA+PvNAfLQj2wWrgctDh6ro4CeyGHJQ5WpfW97MhfQV2Qw5NRu/69bDG
iswR2A05VL+1H/bPTAuCdZp4vr/Zc4/vZtx8ad5Cx4rXL1c46HPzpXkLry8p
x4311OXmS/MWmhdkkVXnW5FQgd2QQ8+sUYW/vJoTrB/XwBVwhquX4iSwJwq4
e3iWyqPCgvQV2BMFVIWN2CDe2pbMEdgTBfS8dTpqcldTbvw0n8G0z62fuyK1
ufHTfIbhe77qO3xqQa4I7IkCbMd4BhenaRKss9bAlfCDqyviJLAzSogcl1k0
W21K+grsjBISqj42VtzFfWCa5yAK+A4hs5oTe4GdUUJewHlCxjQjWF+sgaug
nKun4SSwPypY7T/spdZSI+76NP8hOlO17G//ptx18P1qeM3VhWi47zQvAs93
zxB8H9WwdKLf2gmdGxGsm9DARXB0mOJHkB/GE4/y19G/Fx/es2cvbj1c5t8/
dedIV7lzCONnimChqiWJmRPC/T5e46/T+nfHy+nfsU8Qvug4hf5nOnyalOyW
+7AH43+mg8i84PH2td0Z/zMdah1/z8+Cboz/mQ7dXBN9V//pwvif6fDj44rT
njkhjP+ZDuNN1o83iSOM/5kO/SqNe+lcC+bWWwbPIyp0u5TP7cnokA4DjkfH
/zzUkxvPCZ4n6A5KavetJzF0HP/OYdnB/9yv/49jf2vkRsFHUrstciHYjxl5
rr/18MgbzsSG6xOG98V11SCnk55eBPthI++yOvmHKgLzUt7w/MGNF7vKEzHP
pJznryr3LN28yo10+7dfHc5LDInmLmEz03y4vKkbPD//wvfaDCsfgv22kfeb
esJGauNJsD808ucf19iKl2G+aznPb81ep3/9mTvB/rvIdw31+bwI3Ln8SVy3
Emj94856szF+XJ7kNZ6bNx034nuWL5e/l8vzxMknQKzvS7D/N/JWLe7NShyM
+atveN4juMPOy0k4/nKeF/iffele5kE0Hx9PzJq1n/c3JhxY+4Hs8yce/+bd
ZfG8VC/eHeSYb3aH52lNhirGdsQ8w3yeP0mtDt+x0JdgP3Lk99b6hjzy8SbY
Pxu5j//1V+uicPzllLe95fLhOI7/Lc/DG2tteF+E+r/jeRBZt3O6lgfB/q/I
353Qdxjq7U56dX9U68jbkyL41PlRjTwugIT8u04u87y45V3RrnzMH8vh+esh
6xL2tsQ8w4c8b2cYayLr7sflqT7leVhRUOzkZb4E+68jN3bf3LiwHPNU6bld
vR19Rx7TR31o/Au2i72mBaM+b3ne8snrdUZTUJ93PI/0XHhv7xbUh8a/Xo3f
X1mahuuTxr+CrAzv1PevN/i3nx/aZyk89ZzYJ3RQIBn4b1/GDJ6HJfx41n4T
5vfe5vmd8zr7d9xA3fJ43qm56kGUGtcJjWeZ2Mzud9UcdXvO80fFKVcn9cI8
RnqOtU+bV+Yn9qBuNG411zbqpO01zO+lcavTmVvg/kvM733H86mbVj+O+475
vTRulXx6x4fxbVA3GrcK/Pz8qncH1I3Graq+eehW1tuZf8dP/Vvr76HakZN9
iMa/3y+0bzK4PL9gzVezTpwO1N+bvmvazUnXfAjf353jJNNi5458b2K7+eqD
Obwdk8NjB9Nop9WdyErFwDwpb8fk0KLQ8EF8UiCX70r9q5JlB+7qNcc86jc8
14vX2xZtgp9bzvPDnfSf5dh7ky7/fl/QXilAyzLCWr+07jm3+6vITN5eKWDf
gQ6266sDSUN/0FyePypPOm7fOpD7vlB/qTB/iY883Jdgf3rkO+4vbtlitA/B
furIj8YfOeU7xZscFeQfKiB24hx1ZJ3duFt7d+JN3o4pwWLvrK8LfDsT7AuL
vFfUzpdzQjsR7P+KXCMubdf5UTj+fJ53C5oU5DkL842pf/V78LFUjQS0z/R8
1rUtXvH9k3wI9n1HPsD0tvh2sjfpJsi3VEJ3bYsvw1K8yFFB/qQStIZ2P9o8
zZNocf01G7gKFofNVZxZ35lgP1rkE8YZSxP3dCLYdxb5LJ3cFW9OBBLsw4p8
r+nAv1dl4Pf3Kc/TtrSbuECE31/q7/1jFKsd8tSXNPSnp+ek3G+MT9cr9iHY
zx65b69ltbavvQn2X0euEaQJc8q8SDdB/psKZge2PllV7kmwvzXyG3YeI86U
exDsj9vA1bCsexebn687EeyPi7ynVt+RR1SBBPvIIpf/TDTLqA4gkQOiTWe/
pPuB7bs3mtNRA3V4zvPxlzqP1Wnuz+X9Uj+25PKRkvp+yg3fL3q+6YpddaHK
APWh+4HyPz52ZUaoD90PjNcN397eBPV5x/OVvaukOcaoD90PfN58YNZpQ9SH
7gfq2LzMfaaH+bc0D+20/8vQ+vzAhrxEfJ6SwBKuny/2T8XrmHL9c5MF10+H
qm691Hn5DgTr2yI35er/Y58A/Fwz0+CWh6+EcPtF1E/rn/3AOcbZl/NjqZ82
iqtjnynwP8WwMsvMyTijM8G6/MjnD6lxn1UVSLB+LnLDRn6fBoR5EKz3ivxw
4aAPCec7EqxPilzK1W8XPkdIYK390mVTVX5EKngukED2GeeA1bN8uXFSf8zu
4K9/HlR7E6zbi1zs8yzTalkHgnVmkX/TXBCV1tKFYF1U5J9VPY7dSMd8GJqv
u4Grc95QX5v6aSYW1z/Gb/Um2IcA+eXAnIsu4EWwbj7y3PlPbUbU/d41jJ/6
adG7Fy4bet2d8/+pP7Zk59vRK3s7EayHi/yB9u7rXd0wz4T6Yzc7uYrmOLYj
WG8UeZ+u5ae2+tgSrI+J/DtXP/yw4PmuCCxSH64+0cqTXBM8x9X5J92cemSX
uxOs+4+8NuxUXta6jtzzOPXHfgSd+dBrkCvBuurItScVLt/o1Z57PqJ+14bA
44HNAuw5HajfteNZzLjzY+wI1qVFvrhJ09SK3TYE66ginz6v+sigHCuCdT+R
B7cphf2rMM5L/a4iro63SPBcLIXlmr7PiizciYvgOU4KHuPmp2yzdyPY5wC5
6eK8PoMsOxCsy4/8eIRocg8HF4J15JG/uWuamBbkRLDuOXKtpNH9n0/CODj1
u1Si6LVJ5bjvSv2u1z4n17/ohPui1O+y7XIvyiHUimA9WeSKZXnmwYDxWep3
9RoSPu3kUFOC9TqR22R98WuTgHEu6ndtFtTfPty54d9S+Mbl+ewTPOeWgieX
L7Rb8PxeCjFcng/2LUC+lcvnSRA8v5fCaC5vB+vCIy/n8nOwjjlyzMPZKXhO
rxsnlz/TjsmTecrlyVxm8mFSuHwYrA+LvBWX94L1TJHv5/JbsP4m8jAuj6VS
YLdl4Nt+01pDB0eC9b6RR6R2dl4624xIBPZZDjMkzocqN9uTGIF9lsOtzZ8b
zzNCHaifefvgtoDogyYE61kjv/q+SVrZKCOSLrDDCth+rm+61KUdUQjssALM
J82XzH1oS0QCO6wAx25B7zSW2JBQgR1WgPv8i6KBusYE62Uj753ke/1ZVRuC
9Z2RhycOkfh/0ifWV/7X3iphQu9F2Ro1tmS4wN4q4fuO7HvJ52xItMDeKmGR
65zilLnW3DipP3l52vSLE5ZaEqyHjrxTjNhiyBVDEiqwt3XXV+jH1Fw3IFhv
GrmRa+hwnRd6BOsjI/+hFaIhbalLSgV2VQVu+3tman6wIfcEdlUFZvJuPQIu
WZOOAruqgqvVC6fG6ltx95f6jf6Oozw35psT7PeA/I/FgMfHDpoRB4FdVcGh
3ZaP/oltQ7D+OPK453bps8/qk1CBXVWBTu+x3v1kugTrOyPfZDzmZseJ2gTr
ESN3dvzVvJVzS+Jm/7/2Uw37BtfERP22Jn4C+6mGnIMlJ7zSrQj2WUHu+ydi
ddcYC+IqsJ9q0IqrsQyKaEuwjwXy5o8PXegfYkqw7wJy4+DHume6GJMEgf1U
w+B9tQdrVxgQB4H9VIOHuMXR4df1CNYHR94rz7Xt7Va6JFRgP9UQ7j/DW1rW
imD9ZeT3BxdmmT9rTrBeMPIeo6qOpVdinVuMa6TDvWHeJc2zaZ9Z5KpC+enM
YNpfA7nRwuX7AzOx/0gBzx8HayhGuiIv4vmTUa2HvU3CfhNSnutFvv6xvzly
Gv/dmx5VGG6MfRNo/Hf0KC19xxmYz0njv/Ga6bXbMmm/aeRRfi22dPiDeXT0
/M68kPOZe84hx/mKoJdD99TzI2mfaOS7761w86iifaKRf1grPWzOn3Mp4vnM
iD/hIyxofxzkSbekVo9Ssf8LjfMmlKzuv2Mj6kzjvOctkzSb3kM9aZy345rt
2tV3aP9fnEeGu7y0rCX29yng+YIvHXN/bsC8+iKe3+zUNm+aBnIpz9dfqRhv
HOPJXEcCyVeu9Gn2xJu5jgRGDPy12DDAm7mOBNx+btu5NYn93AKouXd6tJ++
D/P+ApgzdHVqj2l4HRoP1VQ6am79hHnUNB66qFpr4YkFrsx16vyoXSuWltV6
M+8vguUfMpe6auN18HmnFLbXrLn1h9B+VcinXdpkPmsD26+qFL4Pl20xzsO+
VBKea4kTH9Zo035VyOPivixpEU77VSEvbvXeuMc22q8KuadZTOPjebQvFXKV
dvXIMSG0/xdyy9YV2qdiUGfqJ5jHqSd9S8X7qOD5iR7pTbu8wfWppJ/b9cPC
NfrIVTzPWBpndDEE162a5wtPVfTc+YrVswwafW66o/48u1DPMhi9Z4HvdwWr
ZxnkvPkWYe1E+38hf7ROtHxfJKtnGQwxKvGecITVs04nvxvSuS9ZPcugbasL
ObcNkNP4cmTZ8/iz6axudePp93P+6jesbmWwPvXSxL91kSt5PqUgsklcEKtb
GVSlab68PJXVrQzmPfE5JLWjfY5wXGv2Oj+sP+cu1EcGFg4h7yIXsvrIwNKt
KLpbGquPDJ5v/Hpp01tWHxmUrFh5x6stcinPD1SUXQ7sj/rQ+LJ80vCuW1vR
/nHID/2z77LUj9VBBkEv52tOG8/qIAPX8OwTHWJZHWSQ4rFO2nUM6kDjy/c1
5m2oP/8unK8cDEKmLf76gZ2vHGzMHyeOtEJexPOBpa1PdB7AzlcOpzMODkhY
hfOl8eV0k9dKm+HsvOTQa/ClUWdWsPOSQ+vTMr1Nyey85LB+3PrwedtwXjS+
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
     "], {{{
        RGBColor[1, 0, 0], 
        EdgeForm[None], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
0XpxKPxjtI4cDDco2OfaDh8Kn5GzLlIeobXQmrG5gnXVIvqKCs5Lv4JnRr+z
LvD30XrxA/jb6Nzvffjr6HyvP7wkWssOgX+I1qMfwt9F685B8MLofK8v/FV0
vtcP/iJag/bWc2W6azy8NtNan8CrorXvGHhNpq/GwRsyLTQRXp1psLHw+kxf
TYA3ZxppMrw901rT4K2Z5vkU3pZpnqnwlkw7TSl1XqTzXdr1r+hcej79f0fn
6l/AK6P168fw8mitPApeEK3F+5Qm/xlZyvMXwruj8/ZZ8O/RefJseFd0Dv8Z
/E90/r8A3hudq8+Dd2Rabjr8R3SePwfeE53bf15qL2ib9gptv+jzVObWprz9
kJmsgapcRyee80PhCxOvmVOD8w7N/8nBuYnm/4Tg3ERz/krqnO537nsS/Tck
nvPTg3MNzfmZwbmD3ku14P2ueZC/I59nL589IDjv0Fp6MtrzHagcPPj+Wj91
5a8lXjPyBM/TWcq4x6P9OOXgysXPlKbm/1cM3u/KX1+Mzo2Un18YnEfonZ4f
nDtoPVQIPpe0144K9jT07o6Ar0i8v44M9j20fy8OzoO0Zo4Ozqe0l/fN/Ez5
muWCz0nt5Wei/Wv5BvIPmtPfT/5SsN+iXOfY4NxNa1vPKq/sI81x8HidOQcG
53TaR8cE525ab02CPRPt/abB3ovOn2bBnozOpcbBHov2ZsPg/Fp7uUHwvOkc
uybn39uR730jOH5Jv90b7YUtUJ4SfJ5Ldz0XHPt0Zstv6AP/zGdfC46D0lqP
BMcsaY9H4XcSa5Lng2OrtOgLwbFVWrRdcGyV5qxfYv/s4Ozcko+xK2ePQ16H
vJEng7WB9Jt8BnkFyu2Ve2q/KseUt6Cz/C+tB+njxPr2oeAYqn2hmKX8XvWQ
p4M1gPThU8Ha4D8tHRynpHMeC/bZtO/2C/ZJ5J/VC86ddebvG+yl6GzsEawB
pLX2CfaIdO49rrwr8d7vDI9JrKmGBnvpyk06BmsA6fMByscSa7x+wTFa2qF/
cOyWrnsmWGNIq38YrQ/kBbUP9v10tg8OjtfSjZ2C9Ya0Xxu4Q+IzRH5LKHI+
cnu0Py5/7NngGK33/mbwe9eZ9lawl6i87PLgXF5n7NjgmoXynTHBtRLlSj2l
yxPnZR2ytSQ9NS643qHcqkuwb6m87y74ycRn47hojSXf7wH6n0t8lr4fXHtS
jvlBcB1EOdegYJ9BOenAYA9BuWpXeFDi2Ncr2INVriq/cL7WZM6e4hK4ps73
4PqO8kFpJmkn5Yzr8/aEp2uNB/u3yvsmBtd3lGtPjNaC8iEnBdePlCfKv5wM
75GGDK4ZKV5PDq4TKZ/dmLdf/Rl9G/L2pWfA6/L2padpvwbXepS3fpStDem4
bsEesnLePtE6WJ7k8ODajXL5ydEaTt7piOAajfL6CcE1JuXX44PnRPmvfE2t
kwXykOkfmziXbxWsyaXNb4uuteiZm0fXWhR3WkTXdWbDu/LWisr7Xgn2qxXv
7oiu68wKyX8FGmk86biXgv1kxdyW0TWeOYo50TUPzf/IaJ0t71cesNbYxtT+
bg34angz36uQrNzzn7x1o3TOzdG1Fs3n3dG+/3zFseg6iub8zuh60lz4nuh6
wBdw22AfXjFavrJi62N8V57+hon1W3m4aWK9tyfv55F3tDdvTa6879Jgr086
5Mpgr0+xXj601vmnymuCawrySfoG5w46B24Jjh2qFdwfXf+Q1y3PW89wD58N
wRpYGrJ2VtNUbXOfrM6reu/LjOmWWOc8El3Tkk9eJ6uNqkb6L89cL7Ev1Cm6
liOffGdWg5Y2l48qj1S+29vZc2qPfxMdbxTrtzG+duL1sD3vGqXe6e68a2Sa
/z/yrq8pBv2Zd31NtQDpdel2vYui4LivdZILrg8q127EdX1i3+zm1PdX/Ui5
gXIE1SPS4Lqhcvzi4Bqfcu3f867N6f3+lvc61O+6P/Vnd8D1g+O4zv+Hg3M6
eR2KJYop8kg1z/KYDyi4DrsmyXKynHMa5SAPBuc7qmu0zs5Y7aOtede5tBeq
BNfElZvvH1wTlxdRP/PV5a/rHwTIN1OsrJTFJmmhysE1YnkahwTX2eV1KI9T
rFTMvDXbv1o/Nwfny/Jbzgmu08lvvCC4xieP8ZLgOqA8xsuCa4jyDw8P9m+l
bS4KrvfJnzwvW5/SOGcF1w3lf54WXCuUp3pKcO1P3umJwbU/eapnBNcl5cce
r/2Z2FO9IrguKa/yquCapnzUu4P9BHlfLbleSeyPXRtc05TneQ3XE4l90RuC
vQv5KjcG+8byqW4Kzn/le1wfXG+VN3tbsBch36l5sF8h7+uOYE9D/tg9wf6D
PKgWwZ6D/Lp7gz0K+VT3B+fv8rvuC/Yx5HfdHuyTyFvTv0PQvithnQwJjhfL
M82p+kZD1tWo4Hy8RraXVQM5sOB/pyFvSZ7AsVltS/Wmo7McQfWm4zP/XDWp
kcG+vWKH/AHpphrc5/8AP3mOGA==
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtmgf8V9Mfxu/vnjrf+/2Vkl1m2avs+bfJ3is7JURW9miIEImMUikVlSKy
i7QQISkyCg3aae+h//PuOa+Xq/Pcc+753nvOZzyf5/zqNrnjotvzLMt66X9V
9O9/VbOsgf49KmTZF+Usy2OW7S78P+GWwhXC9YSPFb5L+MRSltWsyLIt9fDN
wpOKLOuv/n80X6jMsk80/lvhPzV+uPq/Vn8H4a/Vv0Z4g35vH+HD1T9G+HSN
b6jrHuHHhauqfbj6TxD+SnipxlcX3l/4JuGfNd+bwrM1X1X9XlPdu1Tt7XRv
ocb+pP4Bas/i+9Sfab6D9M/Rev5LjW2s+zvxvK45uvex+n9Te6raO2r8PsKN
hK8W/k3jV2nOrYUbCN8ivFJ4K+H6ws2FD9R6rBXeTutxp/CHev4X4d/VX1vz
Pah7z+s3L9K9eupbo+e3Vftg9bdQ32rhbYQPEr5VOGjMHsLHCd9d9pzMvZPW
fJm+7RHh1zTf9cyhsU9Gr8dbGr9RfT8JzxfeUuNP0rvdq/sLdP8M3T9T13W6
2qr/cd1frvv7C18tfJ3w78IfCf8qPEW4jt6/ffR6DhLeoP7JeoeBrJ3eIap/
nd5/L+FD1T9K/euF9xY+THi08MeF5++u8bOFBwqfI/x07t9brPFs074a30x4
gPpPF35C/b8K9xM+jfcVniz8hvCpwo8J/yzcX7ihcHvhX4QXaT79k+2j+W5Q
4031nyH8ZO797Ct8onBr4UnCszUef9hN468Vni+s/7Ldha8XnqDxvbBnBulF
fxR+Tc2/hCuEhwlfJ9xTeJ7GfyJ8jXAP4TnCC6puNsFsD83XRPgDgcnCvwnv
oOeHCk9hPuGdha/XczWEC+1fde37YM13gXAn3f9Tzw8RvkT4ReHpwu8JXyr8
kvAM4Y6ab7Dwe5pvk/C76r9Y+AX1TyvbZ/FdfGBlYZ97R313ZvbF5Xrf3dQ+
QM+P5H015nLhLhrzt/AS9VcT3k/9Nwr/patz7t84RM8P0vhz1X5G96ZgT8JX
CXcTniX8lvB5wh2Fpwq/L3yZ8MvCM/Gfwv7XVfgf4beFzxd+VvgP4W1k02OE
M/3+J8KnCtfRWh0pfIfwIL3Dd+qeIFxL61lD31qu8JrO1r0Do/encfD7fa7r
Es2tn8n+1bfVV/+1al8f/H5HCN8ofEvw+x0lfLNwi+D3axC9/02C3y/X760T
nsd8KQZuj29ljo1H6rpJ7VuD15M1ayJ8Y/BaHircVPim4P06SLixcNPg/T9M
+Abhm4P3/01dU/X+PXXvEb5d+L7cMXQbYqmuZmo3D7aPQu9XReuxs+4t1r0g
vF7tBbqWBMdh4kvv3HFjCD6h9tvsafT37a92Vc1RVruWxleovVz3flW7l8Z/
r/GdhG/T+EO0PxvJL8Q/tQ/StUHtI3XtqvaxJb9PNc11oPbrBfZEz7dR/7V6
/jj1R/VXpn5izGXq3z5z7FkrPF74OeFWGr9SeETuGHd79HM8zzfyrf/TfEG4
pHb9SmO+hW86Ru1XsGG1P9e3fKi5ugm/JTxC+KOyfeqP3DEBX2Me5sOfFmjM
4ZrjP+bStafaTch75Mdkf9vr3iTis9qfaa7emuN94bHJnt8WHi88UXjrSn8D
3/Zi8LftWWm7wr520lx91P8B+VX3hqr/DuHniQfCq4S31pjPhNfkfn/2lL3F
5sgJ26r/C7Ur0vNzq252rayu/ned8Fbq/1R4de71uEfXvWofpntVovN5bbWP
0Pjb1dc92lZGklvxd+HvhX8U3krvXlHF+XIOPpLGrM39jjy7j35vmdrr1be/
xh9d4uW0T+QI9keOulDtZerfu9Ic4ZbcOQjucKTGbFL7WF17q91Z917H9zT+
fXKxcF/hj4XfE35B+A3hocIfCH+KjwRzmIH4ajR/6ah7K9R3m67m+r09dW8t
uU+/sZS2+vfT+2xX8rMl4WFlz8G3/RA895vR6zk+9ZOD39V8d2XOzfcLPyp8
ivDWcAHNt4T11/h9K/3dfD8c6jZyTlXzuHq631jPTtT69Baepr5c45+Kztdv
q/+/su17mPDw4Pw9VriO8NW58+9eurc0eP2qqe+r6P29Mnc+nav5v2atEz+Y
IzwWW0h8B/tcFGz/lXp2nvq/UTsmftVD94YLjxIuCXcR/kT402C+9ku0bd2T
m/9MFj5U+O7cfLSr8FDhz4L5HzbIXhwfbJsvCX8sPCyYj/5MDBJumZu/7qF7
89V3tO6VozkjJrZnMJecr/cdl/ZvJ42dLfwVsSPl6zHRfO283Ov9RTSfuyA3
XxgVzQ/Pys0nvozmphflzv/EHGLGXN3bUT+8qLC/V9f8u6lvdDTfPCe3//1b
2H+qqX9X9S8snN8qhXcRHqHx04kvwrsLH19yvttKv9FA+HeNf1f9izRfZaX5
0Q74hsaPKDvnEUv3Cs6Ff2v8COGNGr+Nxs8U/lx4Q+54NEt4lPAmOLfwP8Ij
hf8T3lZ4gt5n32SbxIN9dG95cPzfXn27qj0rmHPBvabo+SHkIt2oprHfCXcV
npybb74W/XtfBvd/r/5XhH/JzXd7Rf/+F8Hf93r0fn0jXF14vMZ3Izfltv93
1D9B+Kfg930guv/V4Prkuej3+TDYf8jZ5O4/kj2QY4j9fYNzz1jN/xTxW/Ov
Fm4T7X9vqH+98LPC7wi/T1CttA/jy3DSHXjXwrlqZO543Sl6vz4IiV8KT8Wf
0373j/a/b4VrCI8rnB9+0PPryo6ZxM6zdK+Oxm7E74NtBFv5LtVzzXLXL69G
7+9ojSn07NfCOwpfm5vffROd26ibqL/2TjGIPS6iYyD2fUhwbOwZbT9jhMsa
+0Pyz5tz1zvfFs5PE3KvD/EQf/te47fU+AHR8eI74ZrCMwrHi/W580e/6Hgz
Tv1bVDrmEnvP1L3a5Jro+vXG3PXa+FRP3ZS7vmpYci21n+6dpvZizf+D2lto
jrqaa0lh+6ghXA8+UthfiH/Uq3tH8+GrguuTvaL565XB9Qccvhzso3D7PaL5
eqPgemV79W8I5kv7lcxR1+X+Rrgr/PIK/EdjWpHvo/n9FcH1T+fC/tood31F
DF2Qm/MTW2vqOoFv0/hx8PPC8XJV7vU8NPGxh4R/UP9O0Xz9Ao2fILx7NJe/
XPgn/EHPbyl8Ru56gGd4lvi5XH1baPzxap+q8d/gr7p3nPDDuefrU/h9WglP
FP6sMPfoI7xQeLfo+ubi4Hps12i+f1Hw+D8L54eVue09qv8I4RPVP5b4q/4H
hT/JnZ9L0dzyJPV/TT4vzJ/RO+YLDy/Mr/sK/wvXLMynXxdeJDy6ML8fILyM
eF6Yr/cXXiq8S3T9cqHm/1F4aOF64VX1z4UbFs4/K3LbZ+/C6/NI7vEjCvPx
N4QXC48sXF/0E14CF9D8Pwr/HBxffy28twtz++eW0fVrQziKxv8YbcuIOtQ/
vxWON//m9r8uhbnRrbnXi5xAbqgtHzhZtjA42v4nBcf7rVK+PVP4PvhjFddX
dVJM6Fq4vm+Re323Vf+OFY4Z6Cnd1F9f7Tty28PSwt9TM+Wnupr/ZOFLhR9g
/YWnCf+d/O1T4T+Ep6d895nwn8IzUn7sXlivujO3fQ9X/1/CM5P/EpPINScn
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
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt13m8VeMaB/CtXfvso8GlwjVeU8Ybl4RrHnJRiTJXXEWGJoTQQIOSCs1z
NM/RqJEmQoMhCqlUpI4MabiV1P0+n/f88dT7fNfvXWvtvdd61zqnNGheu1mJ
TCbzmSqltuQzma+zmcxR6kv91Fwm8zmbrv9V8G32GlvF5rBdbCbrzT5j09gv
bDLrzo4uyGRWsL1sLhvHvpSby3azd1lftkHdz7qw6uwc/Vdy89geNov1Yz+y
L1k59SmbzBaxDvrJcX5qZ6FtbCrbrp8k103uA3UWu5cdzn7zgVfKTWE/syL1
jrmr5a5kj+rPkCsZ56wuZ43YaaxEnJ+6gj3CTmdZ/aeqKqvHjmN/Ocbl7N9q
pmM1t+1Fx1irv8m4hdxFckfpv7d9JdvH9qsjnWRF399S9od+utxwuavVVepd
+Sdse8n+VugvML5NrqLcXsftb/t17Hl2gF1gXxXUh2wHm8aGmbdS/YvVZkez
feb2Mfcq9hh7XH3gGD+xb1h59ZXcNPO6s0r6u2TuVA3lxrP/soH6enLnyn3B
ZrOdbAbrwz5S57IHWFn2h+MuZeew+qwM28E+ZGezuqw0+50tY5VZDVae7WFv
OMaF2XQecT4LCtP5ncHq6O9Q89lyc89nt+ormPs/c4vkvmNHq6/ZTJltbK2+
olrDZrCtqmVc4/ZTw7im+kZuMfvL/t6TG8J+Us/G9Sd3i3F1tUxuPPtBbrRc
J7aaLcim3zt+95ny37Il7KD+fbmhcp+wkWw9e5O1ZR+zEWwdG8raxHfKhrPv
2Fo11v4ms4fZG/oeaj3bnEvXzk/G1xhfqybIPcgGydS3v3+yH9STbKvcdcbX
qzVyC9mfcvPkBrElrBdbwZbH+civ43fG9am/Xu5U/Qq5iWxLnBvrHNdeQbo+
4zrdadsp+i28hXGR/dxo/J+4f83tzVbKvS7fjH3NFrED8duywbFGqKfYNnNv
MK6mlstNYD/KjZF7ma1X9dkr7BZ2tn6p3GC2mvVnz8Z3wFaxsnFsNomNYw/o
B8jVZefF/auasv7sPnaZfqE6hVVnJdk219oidiqrWSKtuUX+WcxOY7WYYeZn
tsMxfmAnqQ1svg0L1D/0N8v5L7NVbgk7XXM789VltrNN5n7OSqvlbILMZvaF
vkz8Tmxi8Zrzqb5Q5dUc39lG9pnx4WqZ3Pi47tm3+grx3bDp8f2xZfpSaikb
zX5nm/UnxrXK5rHf2Cb9CXGtsrlsLftIX0ItYSPZd+xjfVZ9wEawTbm0Zm4p
TGterH0bVbP4LQvTuhrr68/mrmfHqmPUPNu28efiuWV8q3Et9avcRnZ83COO
Maf42u2pnx/3r9otv51tYH9X38rNkvuFfa8/Tq1ls+Oc1c36p82rwsrrF8t1
Yx+yV9ijxfdN3D+z8+nabO8YI4zvMm4n116tYoV+wDHsC31vc9ubczgby1ax
PqwDG2nuPawnq8NOY3m50exz1ou1Y6Pl7mO9Y31mZ7DScuPi+c76so65dC53
Z9P6EOvE886lrNxk9o1+sNyrcuXY2/GdsCGsKxtubh3WndViJ7NhrDbrxm5l
J7Ey5k6K9ZUNYl3i91Bt2FjWmN2j36FeYhNYM1ZPv121iueW87oj1hW1U7Vn
k+SekLtf/5bj3s66sprsBDaK3ct6xTOAnR7XqXqRjWdNWd24htQL7HfHqG1c
R401tx7rK3e33JnsD9WOTWTNWf24xlVbNo41YffF9aJax7Pb/u4yvluNsb+6
rE88o+QqFR8njrcgnz7jq4Xp88XnXJhP++hamJ4h8SyZl0/PoE6sl/Glxs3t
r7L9HSqVnknxbJqfT9d/Z7nKvvv9thdahLbH9a/vbftlxk+Ye75tB81dxz5h
JeP6ZaNy6V3gav2zcs+opwvTe9M72fSMiWfNIdaTXcya6M8090/768GqsMas
EtvP+rJrWEt2cbx35tKz+6JseteId46m9reBLWc59ZHcmOJ7OO7l92x7PtZu
uVI+y1Djj83rJveC7YdUX7aQdWBPxqIq148tYh21T7HDWH+2mL3MWrASbECs
S6wTe5pl2cBYl1hn9kwuvXd2zKY1I9aOns7ldn6bej+frqUurKS5Q+IzyHSN
55ztB1WPWKfYi6ypPif3JvuEdWetWAF7K9Zh9hprzfrZ97XsOVaV5diNcscf
5l3F77s1rjmZN9VtcT3J1ZA7Ue6Aej3WedaGNdZXMndvrOPmHmKX6Cea24AN
lrufVY5nDN8T14bcQXZxQXpni3e3Mqys2h3PDtlL4llRMp1TNbmz4vqL3zIe
guyygvRe0oi9Fe80qrXvagp7jI3QPyRaxb5eY2eye9gx7BfHfJs9woaxBuxC
uSvts7T951VRfF79dLkmcqPlHonPJjeJNWRD2APs/JirrlAz8unZ0ta5/M38
d403yY2U65lL70nxvjQrn96L2sldL1fOZzrCcY9U1+mPUDNt32juCHN7mDPY
nFuy6R6Ke2mZua+z81hD/clyu0ql95V4b5mTT+9AHeSOsr/5xlvlJsgNsL08
e49tYxPZwFx6n3w/m/6Wib9pCvwNcaTcLLZZP0qul9w0ucZsFGvEqrKp7HE2
kj0cv2/xOVfPpudTPKdaOpc9/BU2LdYDuYb6/6kubHp8NvZQLr2LDsum98F4
L9xXmJ7T64rfNeKd40TnN5TVNO4oU83ciubuVp3Z1FhvWAP9LtWJTWEt2IP6
v2LtYHNZW9ZEv191Z7NYK/aYfp/qymay51gj/V71KpsRn4s9rC/KpXXlt8J0
H8f9fGlBumbj2t1h20n6Y/lNuJZ+t9rpMwxRNeL3sr8bbKsgc4zsanZYrDFs
CntH7lH9cLmG7KJ4h4j9qbn59HfDy44/yPhG4zZyV8sdYftAVo21ZlexsmxN
vF+wXeqcWOP1VQvSvRz39K/8BP2fcS8Zz457zbbHc+nv+/g7fw0/EPuw/wHq
BuNWclfaVk6mSkG65+PeL4p3oPg7Um6Q8Vdy/WxrKfd/ESdCEg==
            "]]}], 
         Lighting -> Automatic]}, {
        RGBColor[0, 0, 1], 
        EdgeForm[None], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
3z/A+DXJe8wi3mdk8vschCck73PzmsvhnqP2g+2Tv/sf+MS8e3Q9OOf+cP+i
OB6VvM8txIOS97MFeDBuhv/l7+1J3peVZ/zK5D1sMXxvuLfyF+f0Tf4uf+N+
yb2Xf/Do5H1ujvPPyHled+b7Xp28H0+MD0nOaao143FXfDDjlcK/l97/3eR1
oB++NJzpNRdqhN9X3+XjcI9M9Xd/uOel2loxvPfWb/tRuNem2v1JuMek2joh
3NdQnqkQ3tvrNy8f7iXpN/w03PNSrX813CNTja4c7hfou1cP9wL0+7wS7p0p
S7wc7r8ot4wL902Uu6qEewH6ra4J70+Una7Al+W8bl8d3uMpv40P94+Uxz4L
r1n/lzHCa5ZyxcRw/1T5rWF4X6Q68na4B6ds8Fa4N6fMMCPc39RcaxTeX2kd
bhzuj2g9fy/ci1R26hbe52ttmRzugSq7vh7u5SlT1Qrv5XTdp4R7o5qPn4fX
XGWYL8LrsnLRmHCfV3n1g3BfUtd6X7hfqRz4WrhHqZz2ZrgnqPxzSbhHo7nw
frgHqrz3cLh/rX1KzXDfR/d5tXBvSPf5N+F6oFr/JO6W8/7oedw358zZF3fN
uUa/gPvlnDmfza6RssQT2Tnaf/XBXXKu9b1x55zzwOPZuPZZl+FOOdfHl8K9
P+XM7eG+ofJSm3C/Q2v7U7h7zvu4p3GPnPd3e3GfnPNzv+zzKw8MyM5R9uif
/V3lk1bhvptqx3O4d845sHu4F6NaPC3cE9c63CPcl1E26BDuxymfdAz36ZQH
2oX7VsonncN9OtX6neFnCdoPPhR+JqH9Y/twj0wZpmq4N6d1Zne4X6/9V9tw
/0u1rHW4n6iaODXcu1cN6hXuJSmr7Ao/p9Fe9bHsN9cetme4l6S88XU4Eyjv
tQz3ClVbO4X7icoz08PPALT+fxveYysTPppdL+1zJ4X7+9qjdQ33uZSjGoT7
DsotW8K9Y+XqVeHnUtoH3cirTNZD2BDuR2tPtD78PED705nh5xmqTWXDNexX
xmeHn8GoFm8N96OV1Q+E+xfK1RvD/WjtrUaFn6loTzo/3EtSnd0c7nFrXzA3
3DNS7Z4X7hmpRm8K96aV4VeEny1pz35d+BmP6v4d4WdL2r+vDT+j0h58Xbi3
rr35PeFnHtpr3x1+3qb9++jwcyDtVReHn0upJ7YgXGtVc4eH+8LaO18ffuak
Gn1D+JmT6u+a8LM99Q3mhHtkyhU3hp8PKYcsCz9XUy2+KfwMSZmkRTjbKb/d
F+6Ja4+zOvyMUD2Bm8O9HuWNoeFetur7ldk6oJrYLNxnVJZbGO4HKZM0Dfd2
lfduCfeVlGEWhftlqsUPhJ8NaD/1bvi5jvat74SfkWg/OCLcN1cf4KrwszTt
33eEnzuqx/Ii7p/z3nlgNq+V/2uHe2eqp/XC/Tjlh23hZxXar9UN9+CUHwZn
656ySvNwn1S5dFC2zmh/0STcK1fWXRl+rqlezV3hZ67q1QzJPo/6EreG+2ja
K9UJ9/VU9+uH87Fy8m3h553qoy4JP5tUH3V5+Pmo8vzS8LNP9WBvDz9XU+/0
f5YomEk=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtmmXAFdXaht/9usZZs61jNx5USgQEVFSkQ0WkS5CwAJEGCRE5AiJli4hJ
Iw0iIaUYmNiNoIKdn0cFCz339d3zY2CueWbPu2etZz1xr132igFt+peWlJQM
1T9B/w9MS0paF0pKyiYlJauKJSU9xA3Eh4oXiQfrmKMbl+radtkuFQ8T/0f8
iLiNjpo630/3z5Kthbia+B/d85D4UvF54gNkXyDuLq4v/pd4oXiAjnt078O6
9ops3XTU0/khsj8qWyfxueKieL74Rh1bdP/Luva7bB101NJ5lH2ubO3FZ4tT
8RxxR/E54kw8T9xaXENcKp4pvkRHLz1vkK7dIdsFOiro/Dddu4/vq/t66f81
ur429fnNst1e8LVWOqrrvKD7HpGtpfgMcYn4YfHF4sriv/SZB8UXiSuJ/xDf
z/uIu4ur6f514uOj7hVvEt8rvlD2iryr7p8hHq7jMZ1v1LVvZDtB9+/T+Wbd
P122Jjo6y36Vro2TfY24q7ineJh4Au+g83N0/0bZumQlJd+Kd+meaeLm4neZ
C/EEvq/4LfGL4nHiZuK3xS+Jx/N+4nfEL4tvLvqdqgSPOe/Kd64cPEe8S1P+
pvhq8XjxSnE7cTdxf8ZTz/tI52/p2mTGU7xd/KZ4kvi0aP84M/evytH+dFbw
eJ8e7b9nB88Hc1gp2CeYW3y8g7hHwb5/oZ7/ps5f0LWxsl0m/k68O3j8W4g/
FL8hnsjY42PBczYA/5f9U52/p2tTZXtAR7Vgn23GepH9a51/omt3M9/6fkdo
7R2uY7TOC7JfInsj2c+TvUTcXNyQZ4j/0T0XixswpuITxUGfLei4PnrOP5Pt
h4J9gXfm3RkTfHOfrjXWeW3GoOg5Zq55x+Nkq6Kjoc5rBa8HxpSxrVvwWmZM
GVvGHN/uqO/3hc4/0rU7i/bp6sFrHF/vLPs3Ov9U1+7hWeJ7xVPF/Rl78efE
EvEdzL14t/gD8W3ituJd4vfFt7I+9cwq4gP1vqP0XdvL/pn4Q9ag7E/quAHf
07VpuretjjN1HuTfs2Wrqs80wt+D41OTzLHjafEYcQPxs+L14lHi+uJnxE+I
ry96TV7Fdy94rTaV/RWdP0MMlG01PpP783XED9m36fxZXbtJtobi58QbxDcU
vQY7iismXpuNZN8q3ij7aPH54jXiJeJh4id0XK3zAbo2Rp/9Tfy9eK/4qOhr
+PIZie9lDIbh64nH5jw973HxIn1mqPi21M+qJ/smcT3ZN4kfl32keIOOvjq/
Ttdu1r11M8eaVbo2ouiY0S/4bxBLuIfYUivxZ9fq6BYcY4bLVlXXrxT3E48W
j9V3Pk5z+Ymu/0Vs0vO/L9iH8eVxsh8v+6ey7yPWik8U7xb/I75JfKz4Y/Gf
4grRa61KHk/LR8eeynm8rCSuXbCP4qsVo32VNcpara2/v1q8mHcWl4uOVZXy
+D9BXEZ/7zP9vZIDtIZ0/zzZH5B9IPFB18fhq7r2EOMlHsJcim8Vnxodeyro
WkGfr6XPzxc/SM4peg6G6vzGgufm3My5dq6uDZFtvD5/gv7+Lj33b/FLidfC
kTpeya9hKy8+WfeexZwHr/krU/tkB/5+Yl8lPzYR7y+uwfpLfW8iro6vi9uJ
j0wcL3hGW/ERiZ/dJXV8OlBcU/yOjtn6e0vIAbJ9Il4p3sAaFXdNHd8O0v1n
yjZTfIe4tbgzvi1ujy+LazEWqXNXOXEdcR9xF/HxiePfYPEV4lPEtcVDxFeK
TxWfTywQ9xWfLm5QtM/he1XEDYseD9ZqeXFd8SjxtfiLuL54pLiP+DRxPdaC
+DJia+J4TM1D7m+VuBaaLb5L3FZ8Gf6ZupaoIW4knigeKT5XfGHR64W1dbb4
AvF6HT3xJV37T+qcOJR8ljhXzhBPIpeK24nHigeLa4obi6eIRxHfxc2K9kF8
8RJxJ/Fm3plYp2u3yzZXxz06by97N/K1eDK5Stye/CWeQiwXdyC+i6eKm4s7
imeJ7xS3EXcRzxHfLW4n7iqeJ54m7iDuLn4KHya269rDsk3XMZFaQPa2xBJ8
RHxi4vzXLfH91FjUWvcwJrI30fXW4rdSr9frEq+/kuh8MTtx/v4udfy9LXE8
K0bXN0sS1w8HROe+pYnri3dSx9thiddjjM7Xi8S3iLPofLY4cf5PovPf/MT1
ETUr67V/4lr22dTru2fifLcrdX4Znzj+UkMTT0cnrq0/Tx3/JySO99R05Kep
iWu9j1LH5xsTx4MlOi7U2LTRtStk+zZ1Pro1cXx+XEdH2S/XtUGp3+H14BqG
dzswOt4u0/1TZDta/Bv5TnyX+OfU9d09ifPhT6nrv7sT50NiYLngHEtspAbn
2Q8krs3/Eu9grhPnP575cfCY8rf+SF3PPZg4//6Zut57KHE+/TV1/Xlv4nz4
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
w78y5yZyFrmreubYSUwltp6ROTYSU4mtp2VeG/g4vl4p89pgzbB2js+ca8ix
5NoamWMzMZJYiQa0LljjQBuqlnntEYOJxdRHjfL4Rn1zeua1wRpjrVXJvNZY
g6zFEzPndmomaqcTMud2cj65v3LmtcgaY61Vzbxfw5pn7R+WOfeSk8nNFTPH
etY8a7+C+JaCcwC54JTMsZCYSew8MHMs4jcW6MflM+cOcgy5plzmWEtOIbcc
kFnLJYYRyw7KvL/FbyDY3zk0c+1ATUBtcHDm/SlqEmoTNGt+W8AeB1o2PVnj
PL5TT56UuXYjR5GrymSuJanpqO2o4Zvk+ZTf3pTNrEcR84n9h4ivKbhmoXYZ
nPv7q8F6HAfn+CRa3VXRe3vUyNTKf4jPL7gGpRalB6AXoGdEG00y99L0sPSy
f+b9EzUttW2/6NjHGmGtoNHx2wH2bNDu8Gl8mz0X6gN6UHpRehR+q4Rmx28r
2KNBy0szawH0/PT+/aPXytZgvW2A+I2C1xBrab/MWhc9Cr0KPRu9G3sIaPMh
c++CJoA2wBpnre/M4zWaD9oPGglaKxoJWgkaClosGgpaCv072i8aC2PBmFBP
ormiDaO5T8zrc/bC2aNBP+I3Gfw2g9+08Nsl6iNic9c8v/ObBn7bgAbNb7EG
Rsc+YjyxvmbmWoUahVqF37Tszp/Pb432l71zwRoKWgoxjdjG70noD/pGxx9i
IrGRPZbt+Xyw93J1dC1PTU9vRcwj9hGT2KvoGZ3L6LHotYhxxDpiJnsP7Fng
T1MS72UwR1vzfPhDnh/fzusF8nev6FhCjiRXsofAXgI9Eb0ROYpcRU7jt2HX
RMd+Yj6x/9ro2E7MJ/aTM8gd5Dh+K9Zb9qcLjlnErj7RuYEcQi65M/fHL3P/
+B8BwkvI
            "]], 
           Polygon3DBox[CompressedData["
1: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
            "]]}], Lighting -> 
         Automatic]}, {}, {
        GrayLevel[1], 
        EdgeForm[None], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJxNkEtOAlEQRau73wsQ09F2Zoz0T5wbjRpjiCEQ5i7BBejYNbgrQWHEz0QF
FwOn8mrA4ObUu13fLp9fn15iEalQglZepIexgWOUEk/gFzok/oTvTZFL4jc4
hBeRSAEbyGsz9E1eB792wdNv7Sj0P4cl/oz4Hv8HTlGBP4JJHGZteV/BI3SN
MnSMcvwPH6j7tGyu9k8t58D28NZHqXnae0lNjZe7cJfW6K0Du0VvWvCuiM9c
iLt4f3COHoh/fejzSLyGNzbz1uantqe3mbqD1pbw1G7Xe09cyM/26pV39g/7
8B/uAEySJTU=
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtkDkKAkEQRXvUhgERx8DY3dgdRUREvIBH8AAam5l7K/fIHffUc+grqoNH
v19TU1M9mdFkOA4ZY5IQgTohBlFowNoaE+cMwwKf+saU8RLMfMXgP0+fSX/K
0xkbfAlpcot8xSuuN+CswodaLaR5i9+s9so7e6s1mVV3vTJPdkvAzu0j82Tu
3Nf+wH1jZRXxuNvnDX28QO2C57l0ER9Q+5Lv0MYz1A74C3rkPPmMP6FLzpFP
+AM65Cz5aPWOTff/ZNc/PfUp1Q==
            "]], 
           
           Polygon3DBox[{{1057, 293, 579, 578, 1490}, {1051, 290, 573, 572, 
            1487}, {1509, 580, 1491, 1059, 1060}, {1055, 292, 577, 576, 
            1489}, {1053, 291, 575, 574, 1488}, {1049, 289, 571, 570, 
            1486}}]}], Lighting -> {{"Ambient", 
            GrayLevel[0.8]}}]}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwt0ksvXVEUAODt/ei93vQqrph6zSUMDOUSaTVEbxphIBgwEsylNRfMBXMJ
YwN+gTdtPSLiD4h2pt8WyVnnW3sn56y19jktE3NfZnNCCD9ErSTmSbcHPhWE
UMFnNvOVnSwrDKGHTexnO7PsjvtiRj7KJU5xhQvciHW4wzXuc4tHbCtShx/V
PmF17EVU5oVwal3Fs7jPc9bwIvbMS9bxKj7PlLiW1/MXP/E3G/iHjbyJ/fOW
ad7F+fjClLr3sQZzxYEej613echN7nGV21zmOuf5k5Nc5AiHxbS8i9/Yykzs
hd1MsIO95q9QKx37lj/GmazL4+z8x4lcZ89xJjnGBL/zA7MsjWfPklifxfzK
IeG14TOVDIP0OcMA85mh8UMfXW+bf9//if8BpzXD
         "]]}, {
        GrayLevel[0], 
        Line3DBox[{521, 286, 519, 512, 2176, 560, 561, 2187, 562, 563, 564, 
         1500, 565, 566, 567, 568, 1492, 569, 1494, 570, 571, 1495, 572, 573, 
         1496, 574, 575, 1497, 576, 577, 1498, 578, 579, 1499, 580, 1509, 581,
          583, 544, 294, 1060, 1059, 293, 1057, 292, 1055, 291, 1053, 290, 
         1051, 289, 1049, 288, 1480, 529, 287, 1474, 515, 521}], 
        Line3DBox[CompressedData["
1:eJwl0rkuRGEYgOHfhBCFKO1iH2MsPbXC0uiISkUklMQFWBItcQEmoeYGEKWC
UFoGse/7zjNRvHm+/xTnfOfklPUNdw2lhRAmlRcJod6hMzOEFvaynYPs4RgH
OMVRznGCC1zUrHmdCW5zmUdc4wO3mJYVQpK5vONJegj3POUDz/jIcz7xgs+8
5Auv+Mpr3ujNfMt33vGD9/xMPZNffOQ3VzJCiHjHbP04ZzFdxXa5dc7hAX/t
upm6H1eZ5BK3OM+11HXNmBMc5yxHOMF+jrKbA2xjD5vZwTib7FTHBsYYZy1j
jDLKGm7YudWOtSrVjnOUxyxhjY7MxazWobmIVUqaC1mpA3MBK7Rvzucey9mo
OsW161oZG1L/gqZ9k1jk/9/4A+07TV8=
         "]]}, {
        GrayLevel[0.2], 
        Line3DBox[{1511, 1816, 799, 1510, 2398, 1728, 1512, 2399, 1729, 1513, 
         2400, 1730, 1514, 2401, 1731, 1515, 2402, 1732, 1516, 2403, 2189, 
         2493, 1517, 2190, 2494, 1518, 2404, 1733, 1519, 2405, 1734, 1520, 
         2406, 1735, 1521, 2407, 1736, 1522, 2293, 2408, 1856, 1737, 1854, 
         2607, 1858, 1859, 1855, 1738, 1817}], 
        Line3DBox[{1524, 2191, 2495, 1523, 813, 1525, 2409, 1739, 1526, 2410, 
         1740, 1527, 2411, 1741, 1528, 2412, 1742, 1529, 2413, 2192, 2496, 
         1530, 2193, 2497, 1531, 2194, 2498, 1532, 2414, 1743, 1533, 1860, 
         2415, 1744, 1861, 1862, 2290, 2416, 1837, 1745, 1850, 1852, 2606, 
         1819, 1838, 1746, 1851, 2605, 1853, 1821, 1839, 1747, 1857}], 
        Line3DBox[{1535, 2195, 2499, 1534, 2196, 2500, 1536, 826, 1537, 2417, 
         1748, 1538, 2418, 1749, 1539, 2419, 1750, 1540, 2420, 2197, 2501, 
         1541, 2198, 2502, 1542, 2199, 2503, 1543, 1823, 1840, 2200, 2599, 
         1544, 1826, 1842, 2604, 1751, 1545, 2596, 1818, 1844, 1752, 1546, 
         2597, 1820, 1846, 1753, 1547, 2598, 1822, 1848, 1754, 1548}], 
        Line3DBox[{1550, 2201, 2504, 1549, 2202, 2505, 1551, 2203, 2506, 1552,
          839, 1553, 2421, 1755, 1554, 2422, 1756, 1555, 2423, 2204, 2507, 
         1556, 2205, 2508, 1557, 2206, 2509, 1558, 1824, 1841, 1825, 2600, 
         1559, 1827, 1843, 2510, 2291, 1560, 2601, 1828, 1845, 1829, 1561, 
         2602, 1830, 1847, 1831, 1562, 2603, 1832, 1849, 1833, 1563}], 
        Line3DBox[{1565, 2207, 2511, 1564, 2208, 2512, 1566, 2209, 2513, 1567,
          2210, 2514, 1568, 852, 1569, 2424, 1757, 1570, 2425, 2211, 2515, 
         1571, 2212, 2516, 1572, 2213, 2517, 1573, 2214, 2518, 1574, 2215, 
         2519, 1575, 2216, 2520, 1576, 2426, 1758, 1577, 2427, 1759, 1578}], 
        Line3DBox[{1580, 2217, 2521, 1579, 2218, 2522, 1581, 2219, 2523, 1582,
          2220, 2524, 1583, 2221, 2525, 1584, 868, 1585, 2428, 2222, 2526, 
         1586, 2223, 2527, 1587, 2224, 2528, 1588, 2225, 2529, 1589, 2226, 
         2530, 1590, 2227, 2531, 1591, 2228, 2532, 1592, 2429, 1760, 1593}], 
        Line3DBox[{1597, 2430, 1761, 1595, 2431, 1762, 1599, 2432, 1763, 1601,
          2433, 1764, 1603, 2434, 1765, 1605, 2435, 1766, 1607, 2436, 885, 
         1609, 2437, 1767, 1611, 2438, 1768, 1613, 2439, 1769, 1615, 2440, 
         1770, 1617, 2441, 1771, 1619, 2442, 1772, 1621, 2443, 1773, 1623}], 
        Line3DBox[{1622, 2546, 2241, 1620, 2545, 2240, 1618, 2544, 2239, 1616,
          2543, 2238, 1614, 2542, 2237, 1612, 2541, 2236, 1610, 2540, 2235, 
         1608, 2539, 884, 1606, 2538, 2234, 1604, 2537, 2233, 1602, 2536, 
         2232, 1600, 2535, 2231, 1598, 2534, 2230, 1594, 2533, 2229, 1596}], 
        Line3DBox[{1625, 2444, 1774, 1624, 2445, 1775, 1626, 2446, 1776, 1627,
          2447, 1777, 1628, 2448, 1778, 1629, 2449, 1779, 1630, 2450, 2242, 
         2547, 1631, 901, 1632, 2451, 1780, 1633, 2452, 1781, 1634, 2453, 
         1782, 1635, 2454, 1783, 1636, 2455, 1784, 1637, 2456, 1785, 1638}], 
        Line3DBox[{1640, 2243, 2548, 1639, 2457, 1786, 1641, 2458, 1787, 1642,
          2459, 1788, 1643, 2460, 1789, 1644, 2461, 1790, 1645, 2462, 2244, 
         2549, 1646, 2245, 2550, 1647, 917, 1648, 2463, 1791, 1649, 2464, 
         1792, 1650, 2465, 1793, 1651, 2466, 1794, 1652, 2467, 1795, 1653}], 
        Line3DBox[{1655, 2246, 2551, 1654, 2247, 2552, 1656, 2468, 1796, 1657,
          2469, 1797, 1658, 2470, 1798, 1659, 2471, 1799, 1660, 2472, 2248, 
         2553, 1661, 2249, 2554, 1662, 2250, 2555, 1663, 933, 1664, 2473, 
         1800, 1665, 2474, 1801, 1666, 2475, 1802, 1667, 2476, 1803, 1668}], 
        Line3DBox[{1670, 2251, 2556, 1669, 2252, 2557, 1671, 2253, 2558, 1672,
          2477, 1804, 1673, 2478, 1805, 1674, 2479, 1806, 1675, 2480, 2254, 
         2559, 1676, 2255, 2560, 1677, 2256, 2561, 1678, 2257, 2562, 1679, 
         949, 1680, 2481, 1807, 1681, 2482, 1808, 1682, 2483, 1809, 1683}], 
        Line3DBox[{1685, 2258, 2563, 1684, 2259, 2564, 1686, 2260, 2565, 1687,
          2261, 2566, 1688, 2484, 1810, 1689, 2485, 1811, 1690, 2486, 2262, 
         2567, 1691, 2263, 2568, 1692, 2264, 2569, 1693, 2265, 2570, 1694, 
         2266, 2571, 1695, 965, 1696, 2487, 1812, 1697, 2488, 1813, 1698}], 
        Line3DBox[{1700, 2267, 2572, 1699, 2268, 2573, 1701, 2269, 2574, 1702,
          2270, 2575, 1703, 2271, 2576, 1704, 2489, 1814, 1705, 2490, 2272, 
         2577, 1706, 2273, 2578, 1707, 2274, 2579, 1708, 2275, 2580, 1709, 
         2276, 2581, 1710, 2277, 2582, 1711, 981, 1712, 2491, 1815, 1713}], 
        Line3DBox[{1727, 1836, 1021, 1726, 2595, 2289, 1725, 2594, 2288, 1724,
          2593, 2287, 1723, 2592, 2286, 1722, 2591, 2285, 1721, 2590, 2284, 
         1720, 2589, 2283, 2492, 1719, 2588, 2282, 1718, 2587, 2281, 1717, 
         2586, 2280, 1716, 2585, 2279, 1715, 2584, 2278, 1714, 2292, 2583, 
         1834, 1835}], 
        Line3DBox[{1868, 2089, 2716, 1867, 2088, 2715, 1866, 2087, 2714, 1865,
          2086, 2713, 1864, 2085, 2712, 1863, 2084, 2817, 2183, 2608, 2294, 
         2816, 2182, 2083, 2815, 2181, 2082, 2814, 2180, 2081, 2813, 2179, 
         2080, 2812, 2178, 2079, 2811, 2177, 2078, 2809, 2175, 2184, 2185, 
         1268, 2186, 2172, 2188}], 
        Line3DBox[{1869, 2171, 2295, 2810, 2174, 2173, 1278, 1870, 2717, 2090,
          1871, 2718, 2091, 1872, 2719, 2092, 1873, 2720, 2093, 1874, 2721, 
         2094, 1875, 2722, 2296, 2609, 1876, 2297, 2610, 1877, 2723, 2095, 
         1878, 2724, 2096, 1879, 2725, 2097, 1880, 2726, 2098, 1881, 2727, 
         2099, 1882}], 
        Line3DBox[{1884, 2298, 2611, 1883, 2299, 2612, 1885, 1294, 1886, 2728,
          2100, 1887, 2729, 2101, 1888, 2730, 2102, 1889, 2731, 2103, 1890, 
         2732, 2300, 2613, 1891, 2301, 2614, 1892, 2302, 2615, 1893, 2733, 
         2104, 1894, 2734, 2105, 1895, 2735, 2106, 1896, 2736, 2107, 1897}], 
        Line3DBox[{1899, 2303, 2616, 1898, 2304, 2617, 1900, 2305, 2618, 1901,
          1310, 1902, 2737, 2108, 1903, 2738, 2109, 1904, 2739, 2110, 1905, 
         2740, 2306, 2619, 1906, 2307, 2620, 1907, 2308, 2621, 1908, 2309, 
         2622, 1909, 2741, 2111, 1910, 2742, 2112, 1911, 2743, 2113, 1912}], 
        Line3DBox[{1914, 2310, 2623, 1913, 2311, 2624, 1915, 2312, 2625, 1916,
          2313, 2626, 1917, 1326, 1918, 2744, 2114, 1919, 2745, 2115, 1920, 
         2746, 2314, 2627, 1921, 2315, 2628, 1922, 2316, 2629, 1923, 2317, 
         2630, 1924, 2318, 2631, 1925, 2747, 2116, 1926, 2748, 2117, 1927}], 
        Line3DBox[{1929, 2319, 2632, 1928, 2320, 2633, 1930, 2321, 2634, 1931,
          2322, 2635, 1932, 2323, 2636, 1933, 1342, 1934, 2749, 2118, 1935, 
         2750, 2324, 2637, 1936, 2325, 2638, 1937, 2326, 2639, 1938, 2327, 
         2640, 1939, 2328, 2641, 1940, 2329, 2642, 1941, 2751, 2119, 1942}], 
        Line3DBox[{1944, 2330, 2643, 1943, 2331, 2644, 1945, 2332, 2645, 1946,
          2333, 2646, 1947, 2334, 2647, 1948, 2335, 2648, 1949, 1358, 1950, 
         2752, 2336, 2649, 1951, 2337, 2650, 1952, 2338, 2651, 1953, 2339, 
         2652, 1954, 2340, 2653, 1955, 2341, 2654, 1956, 2342, 2655, 1957}], 
        Line3DBox[{1961, 2753, 2120, 1959, 2754, 2121, 1963, 2755, 2122, 1965,
          2756, 2123, 1967, 2757, 2124, 1969, 2758, 2125, 1971, 2759, 2126, 
         1973, 2760, 1375, 1975, 2761, 2127, 1977, 2762, 2128, 1979, 2763, 
         2129, 1981, 2764, 2130, 1983, 2765, 2131, 1985, 2766, 2132, 1987}], 
        Line3DBox[{1986, 2669, 2355, 1984, 2668, 2354, 1982, 2667, 2353, 1980,
          2666, 2352, 1978, 2665, 2351, 1976, 2664, 2350, 1974, 2663, 1374, 
         1972, 2662, 2349, 1970, 2661, 2348, 1968, 2660, 2347, 1966, 2659, 
         2346, 1964, 2658, 2345, 1962, 2657, 2344, 1958, 2656, 2343, 1960}], 
        Line3DBox[{1989, 2356, 2670, 1988, 2767, 2133, 1990, 2768, 2134, 1991,
          2769, 2135, 1992, 2770, 2136, 1993, 2771, 2137, 1994, 2772, 2138, 
         1995, 2773, 2357, 2671, 1996, 1391, 1997, 2774, 2139, 1998, 2775, 
         2140, 1999, 2776, 2141, 2000, 2777, 2142, 2001, 2778, 2143, 2002}], 
        Line3DBox[{2004, 2358, 2672, 2003, 2359, 2673, 2005, 2779, 2144, 2006,
          2780, 2145, 2007, 2781, 2146, 2008, 2782, 2147, 2009, 2783, 2148, 
         2010, 2784, 2360, 2674, 2011, 2361, 2675, 2012, 1407, 2013, 2785, 
         2149, 2014, 2786, 2150, 2015, 2787, 2151, 2016, 2788, 2152, 2017}], 
        Line3DBox[{2019, 2362, 2676, 2018, 2363, 2677, 2020, 2364, 2678, 2021,
          2789, 2153, 2022, 2790, 2154, 2023, 2791, 2155, 2024, 2792, 2156, 
         2025, 2793, 2365, 2679, 2026, 2366, 2680, 2027, 2367, 2681, 2028, 
         1423, 2029, 2794, 2157, 2030, 2795, 2158, 2031, 2796, 2159, 2032}], 
        Line3DBox[{2034, 2368, 2682, 2033, 2369, 2683, 2035, 2370, 2684, 2036,
          2371, 2685, 2037, 2797, 2160, 2038, 2798, 2161, 2039, 2799, 2162, 
         2040, 2800, 2372, 2686, 2041, 2373, 2687, 2042, 2374, 2688, 2043, 
         2375, 2689, 2044, 1439, 2045, 2801, 2163, 2046, 2802, 2164, 2047}], 
        Line3DBox[{2049, 2376, 2690, 2048, 2377, 2691, 2050, 2378, 2692, 2051,
          2379, 2693, 2052, 2380, 2694, 2053, 2803, 2165, 2054, 2804, 2166, 
         2055, 2805, 2381, 2695, 2056, 2382, 2696, 2057, 2383, 2697, 2058, 
         2384, 2698, 2059, 2385, 2699, 2060, 1455, 2061, 2806, 2167, 2062}], 
        Line3DBox[{2064, 2386, 2700, 2063, 2387, 2701, 2065, 2388, 2702, 2066,
          2389, 2703, 2067, 2390, 2704, 2068, 2391, 2705, 2069, 2807, 2168, 
         2070, 2808, 2392, 2706, 2071, 2393, 2707, 2072, 2394, 2708, 2073, 
         2395, 2709, 2074, 2396, 2710, 2075, 2397, 2711, 2076, 1471, 2170, 
         2077}]}, {
        GrayLevel[0.2], 
        Line3DBox[{585, 800, 2398, 586, 813, 612, 2500, 825, 624, 2505, 837, 
         636, 2512, 849, 651, 2522, 864, 666, 2534, 879, 2431, 681, 894, 2445,
          696, 909, 2457, 711, 2552, 924, 726, 2557, 939, 741, 2564, 954, 756,
          2573, 969, 771, 2584, 984, 786}], 
        Line3DBox[{587, 801, 2399, 588, 814, 2409, 613, 826, 625, 2506, 838, 
         637, 2513, 850, 652, 2523, 865, 667, 2535, 880, 2432, 682, 895, 2446,
          697, 910, 2458, 712, 925, 2468, 727, 2558, 940, 742, 2565, 955, 757,
          2574, 970, 772, 2585, 985, 787}], 
        Line3DBox[{589, 802, 2400, 590, 815, 2410, 614, 827, 2417, 626, 839, 
         638, 2514, 851, 653, 2524, 866, 668, 2536, 881, 2433, 683, 896, 2447,
          698, 911, 2459, 713, 926, 2469, 728, 941, 2477, 743, 2566, 956, 758,
          2575, 971, 773, 2586, 986, 788}], 
        Line3DBox[{591, 803, 2401, 592, 816, 2411, 615, 828, 2418, 627, 840, 
         2421, 639, 852, 654, 2525, 867, 669, 2537, 882, 2434, 684, 897, 2448,
          699, 912, 2460, 714, 927, 2470, 729, 942, 2478, 744, 957, 2484, 759,
          2576, 972, 774, 2587, 987, 789}], 
        Line3DBox[{593, 804, 2402, 594, 817, 2412, 616, 829, 2419, 628, 841, 
         2422, 640, 853, 2424, 655, 868, 670, 2538, 883, 2435, 685, 898, 2449,
          700, 913, 2461, 715, 928, 2471, 730, 943, 2479, 745, 958, 2485, 760,
          973, 2489, 775, 2588, 988, 790}], 
        Line3DBox[{595, 805, 2403, 597, 818, 2413, 617, 830, 2420, 629, 842, 
         2423, 641, 854, 2425, 656, 869, 2428, 671, 884, 2436, 686, 899, 2450,
          701, 914, 2462, 716, 929, 2472, 731, 944, 2480, 746, 959, 2486, 761,
          974, 2490, 776, 989, 2492, 791}], 
        Line3DBox[{599, 2494, 807, 600, 2497, 820, 619, 2502, 832, 631, 2508, 
         844, 643, 2516, 856, 658, 2527, 871, 673, 2540, 886, 2437, 688, 901, 
         703, 2550, 916, 718, 2554, 931, 733, 2560, 946, 748, 2568, 961, 763, 
         2578, 976, 778, 2590, 991, 793}], 
        Line3DBox[{601, 808, 2404, 602, 2498, 821, 620, 2503, 833, 632, 2509, 
         845, 644, 2517, 857, 659, 2528, 872, 674, 2541, 887, 2438, 689, 902, 
         2451, 704, 917, 719, 2555, 932, 734, 2561, 947, 749, 2569, 962, 764, 
         2579, 977, 779, 2591, 992, 794}], 
        Line3DBox[{603, 809, 2405, 604, 822, 2414, 621, 1010, 2599, 834, 633, 
         1011, 2600, 846, 645, 2518, 858, 660, 2529, 873, 675, 2542, 888, 
         2439, 690, 903, 2452, 705, 918, 2463, 720, 933, 735, 2562, 948, 750, 
         2570, 963, 765, 2580, 978, 780, 2592, 993, 795}], 
        Line3DBox[{605, 810, 2406, 606, 1043, 1044, 823, 2415, 622, 1012, 835,
          2604, 634, 2510, 1013, 847, 646, 2519, 859, 661, 2530, 874, 676, 
         2543, 889, 2440, 691, 904, 2453, 706, 919, 2464, 721, 934, 2473, 736,
          949, 751, 2571, 964, 766, 2581, 979, 781, 2593, 994, 796}], 
        Line3DBox[{607, 811, 2407, 608, 999, 1045, 1000, 2416, 1046, 1025, 
         1001, 2596, 1002, 1028, 1014, 2601, 1015, 647, 2520, 860, 662, 2531, 
         875, 677, 2544, 890, 2441, 692, 905, 2454, 707, 920, 2465, 722, 935, 
         2474, 737, 950, 2481, 752, 965, 767, 2582, 980, 782, 2594, 995, 
         797}], 
        Line3DBox[{609, 1036, 1037, 2408, 1040, 1003, 1031, 2606, 1004, 1033, 
         1026, 1005, 2597, 1006, 1029, 1016, 2602, 1017, 648, 861, 2426, 663, 
         2532, 876, 678, 2545, 891, 2442, 693, 906, 2455, 708, 921, 2466, 723,
          936, 2475, 738, 951, 2482, 753, 966, 2487, 768, 981, 783, 2595, 996,
          798}], 
        Line3DBox[{610, 998, 1038, 1042, 2607, 1041, 1039, 1007, 1032, 1035, 
         2605, 1034, 1027, 1008, 2598, 1009, 1030, 1018, 2603, 1019, 649, 862,
          2427, 664, 877, 2429, 679, 2546, 892, 2443, 694, 907, 2456, 709, 
         922, 2467, 724, 937, 2476, 739, 952, 2483, 754, 967, 2488, 769, 982, 
         2491, 784, 1021, 1022, 1023}], 
        Line3DBox[{785, 983, 1020, 2583, 770, 968, 2572, 755, 953, 2563, 740, 
         938, 2556, 725, 923, 2551, 710, 908, 2548, 695, 2444, 893, 680, 2430,
          878, 2533, 665, 863, 2521, 650, 848, 2511, 635, 836, 2504, 623, 824,
          2499, 611, 812, 2495, 584, 799, 997, 1024}], 
        Line3DBox[{792, 990, 2589, 777, 975, 2577, 762, 960, 2567, 747, 945, 
         2559, 732, 930, 2553, 717, 915, 2549, 702, 900, 2547, 687, 885, 2539,
          672, 870, 2526, 657, 855, 2515, 642, 843, 2507, 630, 831, 2501, 618,
          819, 2496, 598, 806, 2493, 596}], 
        Line3DBox[{1064, 1272, 2712, 1065, 1287, 2723, 1084, 2615, 1302, 1099,
          2621, 1317, 1114, 2629, 1332, 1129, 2639, 1347, 1144, 2651, 1362, 
         1159, 2665, 1377, 2762, 1174, 1392, 2774, 1189, 1407, 1204, 2681, 
         1422, 1219, 2688, 1437, 1234, 2697, 1452, 1249, 2708, 1467, 1264}], 
        Line3DBox[{1066, 1273, 2713, 1067, 1288, 2724, 1085, 1303, 2733, 1100,
          2622, 1318, 1115, 2630, 1333, 1130, 2640, 1348, 1145, 2652, 1363, 
         1160, 2666, 1378, 2763, 1175, 1393, 2775, 1190, 1408, 2785, 1205, 
         1423, 1220, 2689, 1438, 1235, 2698, 1453, 1250, 2709, 1468, 1265}], 
        Line3DBox[{1068, 1274, 2714, 1069, 1289, 2725, 1086, 1304, 2734, 1101,
          1319, 2741, 1116, 2631, 1334, 1131, 2641, 1349, 1146, 2653, 1364, 
         1161, 2667, 1379, 2764, 1176, 1394, 2776, 1191, 1409, 2786, 1206, 
         1424, 2794, 1221, 1439, 1236, 2699, 1454, 1251, 2710, 1469, 1266}], 
        Line3DBox[{1070, 1275, 2715, 1071, 1290, 2726, 1087, 1305, 2735, 1102,
          1320, 2742, 1117, 1335, 2747, 1132, 2642, 1350, 1147, 2654, 1365, 
         1162, 2668, 1380, 2765, 1177, 1395, 2777, 1192, 1410, 2787, 1207, 
         1425, 2795, 1222, 1440, 2801, 1237, 1455, 1252, 2711, 1470, 1267}], 
        Line3DBox[{1072, 1276, 2716, 1073, 1291, 2727, 1088, 1306, 2736, 1103,
          1321, 2743, 1118, 1336, 2748, 1133, 1351, 2751, 1148, 2655, 1366, 
         1163, 2669, 1381, 2766, 1178, 1396, 2778, 1193, 1411, 2788, 1208, 
         1426, 2796, 1223, 1441, 2802, 1238, 1456, 2806, 1253, 1471, 1472, 
         1473}], 
        Line3DBox[{1254, 1457, 2700, 1239, 1442, 2690, 1224, 1427, 2682, 1209,
          1412, 2676, 1194, 1397, 2672, 1179, 1382, 2670, 1164, 2753, 1367, 
         2656, 1149, 1352, 2643, 1134, 1337, 2632, 1119, 1322, 2623, 1104, 
         1307, 2616, 1089, 1292, 2611, 1074, 1277, 2810, 1482, 1484, 1483, 
         1047, 1268, 1501}], 
        Line3DBox[{1255, 1458, 2701, 1240, 1443, 2691, 1225, 1428, 2683, 1210,
          1413, 2677, 1195, 1398, 2673, 1180, 2767, 1383, 1165, 2754, 1368, 
         2657, 1150, 1353, 2644, 1135, 1338, 2633, 1120, 1323, 2624, 1105, 
         1308, 2617, 1090, 1293, 2612, 1075, 1278, 1481, 1048, 2809, 1269, 
         1502}], 
        Line3DBox[{1256, 1459, 2702, 1241, 1444, 2692, 1226, 1429, 2684, 1211,
          1414, 2678, 1196, 2779, 1399, 1181, 2768, 1384, 1166, 2755, 1369, 
         2658, 1151, 1354, 2645, 1136, 1339, 2634, 1121, 1324, 2625, 1106, 
         1309, 2618, 1091, 1294, 1076, 2717, 1279, 1050, 2811, 1503}], 
        Line3DBox[{1257, 1460, 2703, 1242, 1445, 2693, 1227, 1430, 2685, 1212,
          2789, 1415, 1197, 2780, 1400, 1182, 2769, 1385, 1167, 2756, 1370, 
         2659, 1152, 1355, 2646, 1137, 1340, 2635, 1122, 1325, 2626, 1107, 
         1310, 1092, 2728, 1295, 1077, 2718, 1280, 1052, 2812, 1504}], 
        Line3DBox[{1258, 1461, 2704, 1243, 1446, 2694, 1228, 2797, 1431, 1213,
          2790, 1416, 1198, 2781, 1401, 1183, 2770, 1386, 1168, 2757, 1371, 
         2660, 1153, 1356, 2647, 1138, 1341, 2636, 1123, 1326, 1108, 2737, 
         1311, 1093, 2729, 1296, 1078, 2719, 1281, 1054, 2813, 1505}], 
        Line3DBox[{1259, 1462, 2705, 1244, 2803, 1447, 1229, 2798, 1432, 1214,
          2791, 1417, 1199, 2782, 1402, 1184, 2771, 1387, 1169, 2758, 1372, 
         2661, 1154, 1357, 2648, 1139, 1342, 1124, 2744, 1327, 1109, 2738, 
         1312, 1094, 2730, 1297, 1079, 2720, 1282, 1056, 2814, 1506}], 
        Line3DBox[{1260, 2807, 1463, 1245, 2804, 1448, 1230, 2799, 1433, 1215,
          2792, 1418, 1200, 2783, 1403, 1185, 2772, 1388, 1170, 2759, 1373, 
         2662, 1155, 1358, 1140, 2749, 1343, 1125, 2745, 1328, 1110, 2739, 
         1313, 1095, 2731, 1298, 1080, 2721, 1283, 1058, 2815, 1507}], 
        Line3DBox[{1262, 1465, 2706, 1247, 1450, 2695, 1232, 1435, 2686, 1217,
          1420, 2679, 1202, 1405, 2674, 1187, 1390, 2671, 1172, 1375, 2663, 
         1157, 1360, 2649, 1142, 1345, 2637, 1127, 1330, 2627, 1112, 1315, 
         2619, 1097, 1300, 2613, 1082, 1285, 2609, 1062, 1270, 2608, 1493}], 
        Line3DBox[{1263, 1466, 2707, 1248, 1451, 2696, 1233, 1436, 2687, 1218,
          1421, 2680, 1203, 1406, 2675, 1188, 1391, 1173, 2761, 1376, 2664, 
         1158, 1361, 2650, 1143, 1346, 2638, 1128, 1331, 2628, 1113, 1316, 
         2620, 1098, 1301, 2614, 1083, 1286, 2610, 1063, 2817, 1271, 1485}], 
        Line3DBox[{1508, 2816, 1061, 1284, 2722, 1081, 1299, 2732, 1096, 1314,
          2740, 1111, 1329, 2746, 1126, 1344, 2750, 1141, 1359, 2752, 1156, 
         1374, 2760, 1171, 1389, 2773, 1186, 1404, 2784, 1201, 1419, 2793, 
         1216, 1434, 2800, 1231, 1449, 2805, 1246, 1464, 2808, 
         1261}]}, {}, {}, {}, {}, {}}}, VertexNormals -> CompressedData["
1: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
GkDLOy6Qv+B+9aJ7+dsUPTookYvUv7/uRJkCG3yzcI77v3j8P47W+R+O/o+X
rf6Hl//j4gP/w8X/8W/V//Av9n9w7t/2/z+f7v8fPv2PQ8v/cej+fxz6H2/a
/Q9v/seVfP/Dlf/xo/X/8ON/nLj9fzjxPx5U+R8evCj4m76eS7mh001lPZfS
1UMu4f+XS3nDoHtymgrF13xLP+wcRMeq5WdcJYmQv2Apy6dEg3Ly6M2We/3I
X913I+B8IfvTkyU/ngZCz4IVKpJ7UXSLWgcF55H5eNE93j9p8N2x3yp/sRvp
5O+cjsZ1uM3a5vnxMh0e/P2qMaPShVblvFRf49x3M6d2rX2BDpafZKcbl1qQ
jUi97KAoEZj7DRW7D2GAvPNbChcaUeangxtVcR7RGx7VclLBIFCO84L69nq0
676/oe8aAdSdOi/LmWOgH933MFCpBv3qDGfbOIb7Frf5mpR3GFxmd2nenFSJ
2plOPeMuI8AqS1mfBL5Hcq79EJoWKkebQP30JXyPBPGai63nRt4U17y2nhsZ
RhDTWc+NFKSntFzbSodnahqb1fy7kd8jyt1d+PcK5s7e3adCh+X4zq+xbF2I
+8pjjxMaRHitLeQq7EGHjGv2XMcDO5Cw1YY9ZTgv9+rXJxmX0oEx1HefM187
GjZJUf2N3/utXUWBPvjeXDD+fE3oWS3SpJ0fXaTivBPie9rJEYPi7+6BuozV
KFc/eDqrFb/HGOlSSXw/Br0a26OcWYE8CRx/m7MJIKNu+flEEgb3a/1nLO2/
olihARTvi/uTGy9k8nEfu+9+OoNSXQlidXjk4IDvwZG25P3rOY0xTb+JIfYd
iF1lamA9p7FCtz3WrIQOpYUTvl5H29GhGo9cBVkiZArU8pPJdJh0qNl+I68V
Cf9U+8oiQYRdK2VlxJ0YXK0Q71gQaUY7mWcfRB0iws6U3/d3RmCgoLnl1pfe
clRdaZln8IkAHNZ51hI493WZb2N4VozQ7UW1w4GuBDh3SPtJeBHut6+le8qu
FSOZaW42YX0CvHhkSfOqxiDlR899F4fPqJAPnusAAdLrnbXXcw47ZWz+nA5p
Rvzu7lzrOYfa6t1vho9joM3461HT7UYkHhrPR8D7PcHMI9FXGfdRGaLj5AP1
6FWZePeevwR4e6bQlqcEgx5T69t/lItRsEh9aOk9vI86E8SqajDYteXo6gjH
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
VSMLQ+RCLB+hYulXw/B5mf2gNr2+d+z3R+S4qUY9MaOBT22A5ifajxrblxLW
rDLege81f+wnGsoDB/2WuvTBTTJUUvBXPpYt/ZRZKDsEzW+KN6bqerHq27be
KPFCmLTXW8zy9HtcMzn7hHvxKSBi67nzRXiQberqlUmGuE+Ar9AxMjRszF0u
mqYjs3iD5MI1FBRYczuXs57rvDq1LXJXMmBW7CT69RYF22X25715MIjlqiaE
/btMcFkGnBLqosDh1MKFKisGod7Jz+lDz0Kd6dxDBuqs9ei+dY1BwAAsxT/e
uWuUg0pNrzCdKCq6Rl2mb/DN9uU//XnSkgvRX2vIUldoyNw7Tn8w3YeitsxN
PJvyEcx1TEK+mYY7jAefo6z68HuY21p9YwG41TiPqSoNIf1clMLR/F5ocDcs
WKZSyMp77uLBb4ZgXDhjpMrfi9OJ1xhqjkUoPFm62HFmCELxzzOmTvVAWkgv
7E75JzgGDp0rMR+Gttjr68f0usGb9ynMRqcYdmnCCWtWf8BXoXG/OWNMon/9
IeOeH4/h0Wzwe97SBExuGXwkNcokNh/qGisceIKdojrpw0JJcJlJLpvDZBIO
i4c2+1KeorupxfG2fjLKWuzlL4wwCbsnDgL0uZ4oqPVc5hZBguaWE7FmNCYx
92rxyw55L3wfd9nEK56K9OjDd94PMoltC2yukx97YyQ+xvbA3mxIN29p86hn
EuaHA/XPHPNF4BjmhRXngkTy2fqqnEnc2HMCvbZ+yM/3PTCeQKBmq8syC4JJ
vHTYcd3V1x/zJXmlNN0LsKdcsWNRMpNo1zx4au7gCzwQ16+O9i+Ex++FyyWj
WDr2+kXNLGYAyG/Flhs5f8KJwHUPF/gziY6H1dd5DgWh5rR04Sj1M3JJAlVP
3JmE3HpZT0Wrl5A2mMhTu1mCfNtbDzSvMAlG3eoK9WevkKOhl/5jRxlW6XLr
vDzGJKYFasL6aoPRtHXhMVehL2j+edikRJ11/hPpArvl3mD17qBHTj/qEJpj
lBn1hEHcPvehutI4HJwe/aNe/A3oDYvfzjjKIPjbLw6tl3+HiAgn5jx6I5yX
fQ3VW8QgrG8Fy61wfI8zKw9Nnj7VAFPjFbw79RlElY/v+mHTd6h5fF7gIKkR
B8d3ygrzMYifWu7n9OTeY5rSviJEpBmHrsUcN6ymEwufLbVaLRaBOxnXfPli
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
FRvXOiJWNrQ8mZUfb0gUD1eXMxCn/n79/o81hHHG3Lf3VVLQabGvcrYvOdPE
eoiXVBFhTa6XZ/uSS9h8V8pffFe7hxKm6bdZ8RJwaK4600JYb6D/NjD8L6dU
/y9OaYDdXeujIkzsWMxkvNCoIAzj5Hb2CrF0dZ5Nz9RmBtQoQaM/qhuIV6YK
dBpLp62QGfNxOsaAYZqzMHd4PfH47JuYXqP/8jm9/uJzNixePqXAyndhyaFq
qlklxOZdNFIhK98xds373H2ZCRk57u9VZZ8JtfzfpwdYz6fhn8JX42EM+J5/
9sinq5Y4p7/wx2uWrq6q2bGkq4SBkdLy3Iq6GqLUp8ayDCks/R3dRRpiYEJ2
4WLjoGrCKmA8u50Vx/9wLAfYHEtuNsfyrmew79NZPp7w86MjGz4RR+s2Pbry
mQTzC3dWCPizdMXMr7zdtwuJYPoO7+R4ls5prtv8IZyJjmeej0t78okjN+xz
P/mz8l3H7fKU7wxU3r8y8maoihiaLJivui0FHLSoo3dYOlzfStj29vJKgqfN
2usLq44wVu+Xb5ZmQm3a9ekP1S/EhFPNp1zeFPBcNH/ZrcnElHKReeKdMkJC
34VDal7KP3xI/v/wIeV8LKfeMqHxwSp/v14BsdwgYo/8axLICkqth+JYesxB
vf5kKkGU/xbYaONOgoKXkuWmdCaUWgrjPOm5hLb3ntwsexKyOZfLvieY2HXB
TTJGM5swihM5r3OYBB6Tt7cEtzMxt5nIb/tWTiw605r2bkUKelP38ipqM3GF
arbi8aEyYlSi2mAORwqWc6r/vMiKb4RJtl5YagnRfz+1WoylN+bILdhYe4GJ
r78Hf/hvKCZ27LwbJdJNwuWCt4tuujBRZrztbGXYJ8JmG3nfwor/chqPsjmN
wmxO4+HY3K8CJCYYZ6T9Sn9/JJ7Yqj4cv0pChlBS9bUcJrg1RgyEb+QQDieX
8T4+QcIZ3SwzUhETAm8euDRxZxFP23SO3NEiYUechU5/ORNcHasPmWanE9R2
gdIuGZYOSWhPW1fL0lf2IgYTbqnE6e2yCvl8pP/ro0X81UfL6t7/S4p1X/PK
Q7ondhYTomEbCjV6SEgObXvVfYeJGg1uFanST8Sbp3v2OlaRIF7K6SL2lFUv
/ErKDrYtIkZO9/nms3Q10cOntiiIiZKurEw/nkKiU2bPI6VoEvgmfjyIfsfE
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
      "]], Axes -> True, 
    AxesLabel -> {
      FormBox["\"Active Mortality Rate\"", TraditionalForm], 
      FormBox["\"Dormant Mortality Rate\"", TraditionalForm], 
      FormBox["\"A* or P*\"", TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, 
    DisplayFunction -> Identity, FaceGridsStyle -> Automatic, 
    ImageSize -> {346.49641625558195`, 154.9154698258344}, ImageSizeRaw -> 
    Automatic, Method -> {"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
    PlotRange -> {{0, 1}, {0, 1}, {0., 48.76783429336128}}, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02], 
      Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, 
    ViewPoint -> {
     3.307379020263064, -0.49941110416308315`, -0.5116957742275742}, 
    ViewVertical -> {0., 0., 1.}],FormBox[
    FormBox[
     TemplateBox[{"\"A*\"", "\"D*\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], Lighting -> Automatic, 
                    RGBColor[1, 0, 0]]}, Lighting -> Automatic, 
                    ImageSize -> {12, 12}, BoxStyle -> Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], Lighting -> Automatic, 
                    RGBColor[0, 0, 1]]}, Lighting -> Automatic, 
                    ImageSize -> {12, 12}, BoxStyle -> Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Lighting", "\[Rule]", "Automatic"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Lighting", "\[Rule]", "Automatic"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.659109217872879*^9, 3.659109249377349*^9}, 
   3.65910932443836*^9, 3.659109360232584*^9, 3.6591093931708193`*^9, {
   3.659109457313305*^9, 3.659109474182179*^9}, 3.659109597132131*^9, 
   3.6591096567407913`*^9, 3.6591102586903543`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"zngi1", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"dAdt", "\[Equal]", "0"}], ",", "D"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.657907764035203*^9, 3.657907809785692*^9}, {
   3.657908138861299*^9, 3.657908148779326*^9}, {3.6579201544684553`*^9, 
   3.6579201639625883`*^9}, {3.657920226605488*^9, 3.6579202596785717`*^9}, {
   3.659103270762991*^9, 3.659103272825306*^9}, 3.6591213342139378`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"zngi2", "=", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"dDdt", "\[Equal]", "0"}], ",", "D"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.657920166911723*^9, 3.657920172274284*^9}, {
   3.657920228789146*^9, 3.657920262188489*^9}, {3.659103275857616*^9, 
   3.659103277737185*^9}, 3.6591213370371532`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Iso", "=", 
   RowBox[{"Plot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"zngi1", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "/.", "Parms"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"zngi2", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "/.", "Parms"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"A", ",", "0", ",", "Amax"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<A\>\"", ",", "\"\<D\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", "Thick"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Gray", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "Amax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "Dmax"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Active ZNGI\>\"", ",", "\"\<Dormant ZNGI\>\""}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vec", "=", 
   RowBox[{"VectorPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dAdt", "/.", "Parms"}], ",", 
       RowBox[{"dDdt", "/.", "Parms"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"A", ",", "0", ",", "Amax"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"D", ",", "0", ",", "Dmax"}], "}"}], ",", 
     RowBox[{"VectorPoints", "\[Rule]", "10"}], ",", 
     RowBox[{"VectorScale", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{".02", ",", 
        RowBox[{"Scaled", "[", ".5", "]"}], ",", "None"}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"NC", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"Iso", ",", "Vec", ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.025", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Equil", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1", ",", "2"}], "]"}], "]"}], "/.", "Parms"}],
           ",", 
          RowBox[{
           RowBox[{"Equil", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2", ",", "2"}], "]"}], "]"}], "/.", 
           "Parms"}]}], "}"}], "]"}]}], "}"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.657920174793996*^9, 3.6579202151227293`*^9}, {
  3.657920273833761*^9, 3.657920490450385*^9}, {3.659101483892919*^9, 
  3.659101529413805*^9}, {3.659101767730575*^9, 3.6591017700493793`*^9}, {
  3.659102560065691*^9, 3.65910259114398*^9}, {3.659102654772477*^9, 
  3.65910265712284*^9}, {3.659102740991631*^9, 3.659102765797379*^9}, {
  3.659103310668755*^9, 3.659103348826125*^9}, {3.6591206450515547`*^9, 
  3.6591206494749193`*^9}, {3.65912139794738*^9, 3.659121409273761*^9}, {
  3.659121619603937*^9, 3.659121620403812*^9}, {3.659121724355054*^9, 
  3.659121725338851*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwtk3tQ0wUAx+euEBjieCoJhOKOt7CNjcEYvy+jMQbyGI/2M4UEQUgqKySv
JQ4E1Ml1CQcdiIAyH4EXyElHQiZTxBBhgOIMUF5BKYgxHiPlkXV97z73+ePz
93dr0sHoFCqFQuG/4V93VPWr06I2gvLfdkGRfqZ0kEEH7S0573k7iQgLbUEg
kw6xy4TV+lskbFssFJf96ViJ693lfINEs/E3KRkxdLj0eE0dvkZisUbBouXQ
IZ1PsAo9R+LjP5Pv+w3RQf3c9O8GOQkyxZNypsgM2tHcNCmLBPPDtlRyzRz5
1gVjzldk0LC1n5zotAJfSsX1G+/D7d5R7+LUzTCgcP84pI+DRtFkv8zfgmpL
VWE+Mw5MfV5H4IgdygX7FXZ5sbh5uaL/LN8By0UVWYujMVDuCySDVVtBe+mx
6SovBqxsz5anum1wyk88UloVDYX7ZP2FhO0Qpy949qxIIZSYtd6+zcAp3lxZ
fJIUv7cfv9pLdwK1kat6/CAKrg/bWBvkzjDnGZrI+VGIFIaX+HS6YDer/IOV
+EhsRqXyW54bCrTuvzZ7RUBWt68MVe44zddUNNDCkZmVoRx54QHVyljjgeUw
+AyF0epIT4zuzrwrehyK6fAm7o9xXnghIHMcOiRYmji2cPO1Fw7UPhOrWkPw
6A4ra7SeiR7rUc3bKjEcH63PfCVjYab4ZHVJWTCEO9QcV1M2IpSDawtyEc7+
4p1noGYjQ6TPPZH0HvYruoQDqd7I1SWWt8QHgXoy9F6bLQeWdldSa4OE2KCe
Vl+6w0HnJCeAIghEDEsi5qRzoR8oNjb1B9KnlCUD9j6oLo8IKQsLwNzDlzGH
233QN3/OIVrkj3ADv0HXIzxs7HXc8qmlH6zTavr6Gb74KlxbkGPEwzvUBzKP
+77oY5h/dsqIi7/GRy6WZ/uha6qxcPYpG5xFi+R1LnwEXYtd1f/GxM4ot6ms
YT5anxQ33Yr1ROXY8tqlIn+YaY9t2kFzw96Lc3l3fQUQmGtMo0ycMF/f3bc6
I0DvF5JU35+2Qf+8+7RHaQAKO68z2PF24CQohwwDCDBmV/wdD1lBZOM8+2qW
wFBK/zypNkISddFPtxN4srSnTpM/R+Svq7T9KAIwTmwsMdDriO8pwavDkcC4
oX5ckKYjZlZL1F3RwMh3XY0/hM4S8teckBoSqKvbI9n+7gxROJ8ZtzcZcE+r
lQyxJojWyYWD3V8DNkE6mb22mRifqJCKsoBpPBPLphoIgwkR++ejb/qXJsPu
a+eJJRu9jJuN//9JofwDvnShOA==
         "]], 
        LineBox[{{0.4940980662810512, 0.}, {0.4941460784184271, 100.}}]}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         GrayLevel[0.5], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {{{}}, {{
        Hue[0.67, 0.6, 0.6], 
        Directive[
         RGBColor[0.2947336, 0.4054232, 0.5678384000000001]], {{
          Arrowheads[{{0., 1.}}], {}}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{-0.7330385482121421, 11.868584277596991`}, {
           0.7330385482121421, 10.35363794462523}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{-0.7330385482121421, 22.9796953887081}, {
           0.7330385482121421, 21.46474905573634}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{-0.7330385482121422, 34.09080649981921}, {
           0.7330385482121422, 32.57586016684745}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{-0.7330385482121421, 45.20191761093032}, {
           0.7330385482121421, 43.68697127795856}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{-0.7330385482121421, 56.31302872204144}, {
           0.7330385482121421, 54.79808238906968}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{-0.7330385482121422, 67.42413983315255}, {
           0.7330385482121422, 65.90919350018079}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{-0.7330385482121422, 78.53525094426367}, {
           0.7330385482121422, 77.0203046112919}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{-0.7330385482121421, 89.64636205537478}, {
           0.7330385482121421, 88.13141572240302}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          
          ArrowBox[{{2.649611358789431, -0.000662951160323442}, {
           4.757796048617977, 0.000662951160323442}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{2.649787434281154, 11.130388251914814`}, {
           4.757619973126254, 11.091833970307407`}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{2.650562379621397, 22.266993447593837`}, {
           4.756845027786012, 22.177450996850606`}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{2.6525340477348234`, 33.41177736103063}, {
           4.754873359672585, 33.25488930563603}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{2.6570257365701053`, 44.56924966960825}, {
           4.750381670837303, 44.31963921928064}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{2.66727644569736, 55.747726442977566`}, {
           4.740130961710048, 55.36338466813355}}]}, {
          Arrowheads[{{0.014409397720885678`, 1.}}], 
          
          ArrowBox[{{2.6923493388567463`, 66.96377516505761}, {
           4.715058068550662, 66.36955816827573}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          
          ArrowBox[{{2.7622143966087136`, 78.25181258212965}, {
           4.645193010798695, 77.30374297342593}}]}, {
          Arrowheads[{{0.014409397720885696`, 1.}}], 
          
          ArrowBox[{{2.9881935509188393`, 89.66294078144708}, {
           4.419213856488569, 88.11483699633072}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{6.353315946724568, -0.001517770281760749}, {
           8.46149886809025, 0.001517770281760749}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{6.35335862662213, 11.120717298501539`}, {
           8.461456188192686, 11.101504923720684`}}]}, {
          Arrowheads[{{0.014409397720885656`, 1.}}], 
          
          ArrowBox[{{6.35360753043834, 22.24706030610739}, {8.461207284376476,
            22.197384138337053`}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{6.354360997165621, 33.38028404140037}, {
           8.460453817649196, 33.28638262526629}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{6.356501492949125, 44.52634603214401}, {
           8.458313321865692, 44.36254285674488}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{6.363350011141067, 55.70065987807098}, {8.45146480367375,
            55.410451233040135`}}]}, {
          Arrowheads[{{0.014409397720885654`, 1.}}], 
          
          ArrowBox[{{6.39414781677724, 66.95721117807085}, {8.420666998037577,
            66.3761221552625}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          ArrowBox[{{6.718748028105269, 78.5758124702632}, {8.096066786709548,
            76.97974308529236}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{8.184959277860695, 89.60059402436686}, {6.62985553695412,
            88.17718375341093}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{10.057021918627147`, -0.0026618413951615297`}, {
           12.165200303595077`, 0.0026618413951615297`}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{10.057033481286908`, 11.116720158739694`}, {
           12.165188740935315`, 11.105502063482529`}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{10.05716932992518, 22.240050093147754`}, {
           12.165052892297043`, 22.20439435129669}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{10.057692802029118`, 33.371029184589695`}, {
           12.164529420193109`, 33.29563748207696}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{10.05973302092955, 44.52004353569083}, {
           12.162489201292676`, 44.368845353198054`}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{10.071732608963382`, 55.73106464473401}, {
           12.150489613258843`, 55.3800464663771}}]}, {
          Arrowheads[{{0.014409397720885684`, 1.}}], 
          
          ArrowBox[{{10.468419538378033`, 67.50216571121967}, {
           11.753802683844194`, 65.83116762211365}}]}, {
          Arrowheads[{{0.014409397720885654`, 1.}}], 
          
          ArrowBox[{{12.105027835986846`, 78.12883426201275}, {
           10.11719438623538, 77.42672129354284}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{12.148134240955228`, 89.07781781541797}, {
           10.074087981266999`, 88.69995996235983}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{13.760730917661135`, -0.004271869897279355}, {
           15.868898711968498`, 0.004271869897279355}}]}, {
          Arrowheads[{{0.014409397720885678`, 1.}}], 
          
          ArrowBox[{{13.760725532635366`, 11.113737192892636`}, {
           15.868904096994267`, 11.108485029329584`}}]}, {
          Arrowheads[{{0.014409397720885656`, 1.}}], 
          
          ArrowBox[{{13.760815243071518`, 22.23622271778673}, {
           15.868814386558116`, 22.20822172665771}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{13.761347078403718`, 33.36962161590482}, {
           15.868282551225915`, 33.29704505076184}}]}, {
          Arrowheads[{{0.014409397720885656`, 1.}}], 
          
          ArrowBox[{{13.765423403416207`, 44.54388677342936}, {
           15.864206226213426`, 44.34500211545952}}]}, {
          Arrowheads[{{0.014409397720885684`, 1.}}], 
          
          ArrowBox[{{14.266742609934429`, 56.45595989214477}, {
           15.362887019695204`, 54.65515121896634}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{15.852517732897892`, 66.85182542263836}, {
           13.777111896731743`, 66.48150791069499}}]}, {
          Arrowheads[{{0.014409397720885678`, 1.}}], 
          
          ArrowBox[{{15.863521781697468`, 77.88419586234475}, {
           13.766107847932165`, 77.67135969321082}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{15.865776300520562`, 88.97007427349898}, {
           13.763853329109072`, 88.80770350427883}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{17.464447292164255`, -0.0067052876994545966`}, {
           19.57258974487278, 0.0067052876994545966`}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{17.464426231848375`, 11.110361248712056`}, {
           19.572610805188663`, 11.111860973510165`}}]}, {
          Arrowheads[{{0.01440939772088569, 1.}}], 
          
          ArrowBox[{{17.46448447713143, 22.233328558625896`}, {
           19.57255255990561, 22.21111588581855}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          
          ArrowBox[{{17.46543909814225, 33.379537721556666`}, {
           19.57159793889479, 33.28712894510999}}]}, {
          Arrowheads[{{0.014409397720885654`, 1.}}], 
          
          ArrowBox[{{18.243496258003418`, 45.46202680835032}, {
           18.793540779033624`, 43.42686208053857}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{19.568059802860077`, 55.65340341487698}, {
           17.46897723417696, 55.45770769623413}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          
          ArrowBox[{{19.57084267451805, 66.72769929573496}, {
           17.46619436251899, 66.60563403759838}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{19.571478231438267`, 77.82663424182375}, {
           17.46555880559877, 77.72892131373182}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{19.57174224630446, 88.93167779328945}, {
           17.465294790732578`, 88.84609998448836}}]}, {
          Arrowheads[{{0.014409397720885678`, 1.}}], 
          
          ArrowBox[{{21.168185106539404`, -0.01081063708392632}, {
           23.27625933790504, 0.01081063708392632}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{21.168148952539145`, 11.104735120934135`}, {
           23.2762954919053, 11.117487101288088`}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{21.168153830008528`, 22.229359143627835`}, {
           23.276290614435915`, 22.215085300816607`}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{22.9312816052414, 34.11329865465446}, {21.51316283920304,
            32.5533680120122}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{23.27535126221641, 44.489503696901906`}, {
           21.16909318222803, 44.39938519198698}}]}, {
          Arrowheads[{{0.014409397720885654`, 1.}}], 
          
          ArrowBox[{{23.275814582795185`, 55.588024754088934`}, {
           21.168629861649258`, 55.52308635702217}}]}, {
          Arrowheads[{{0.014409397720885678`, 1.}}], 
          
          ArrowBox[{{23.27593734527617, 66.69487217248579}, {
           21.16850709916827, 66.63846116084754}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{23.275992565356198`, 77.80383876475852}, {
           21.16845187908824, 77.75171679079706}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{23.27602369686589, 88.91365909579035}, {
           21.168420747578555`, 88.86411868198745}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{24.87200846770376, -0.019212036998841515`}, {
           26.97984338414809, 0.019212036998841515`}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          
          ArrowBox[{{24.872076534479056`, 11.088471074490577`}, {
           26.97977531737279, 11.133751147731644`}}]}, {
          Arrowheads[{{0.014409397720885656`, 1.}}], 
          
          ArrowBox[{{26.974787218471846`, 22.117336092967626`}, {
           24.877064633380005`, 22.327108351476813`}}]}, {
          Arrowheads[{{0.014409397720885656`, 1.}}], 
          
          ArrowBox[{{26.979971562593995`, 33.34327852976745}, {
           24.871880289257856`, 33.3233881368992}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{26.97993981716167, 44.457321874047814`}, {
           24.871912034690176`, 44.431567014841065`}}]}, {
          Arrowheads[{{0.014409397720885654`, 1.}}], 
          
          ArrowBox[{{26.979926983455623`, 55.56944374612842}, {
           24.871924868396228`, 55.54166736498269}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          
          ArrowBox[{{26.979920114371783`, 66.68106673032855}, {
           24.871931737480065`, 66.65226660300478}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          
          ArrowBox[{{26.979915844137366`, 77.79248707482913}, {
           24.871936007714478`, 77.76306848072643}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{26.979912934355408`, 88.90380522801682}, {
           24.87193891749644, 88.87397254976099}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{28.576542859983185`, -0.046036580093833386`}, {
           30.682716399276067`, 0.046036580093833386`}}]}, {
          Arrowheads[{{0.014409397720885666`, 1.}}], 
          
          ArrowBox[{{30.615982226264173`, 10.739332055456547`}, {
           28.64327703299508, 11.482890166765674`}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{30.683615145026636`, 22.207200756101724`}, {
           28.575644114232613`, 22.237243688342723`}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{30.68372127665588, 33.33195102345769}, {
           28.575537982603375`, 33.334715643208966`}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{30.683716752741233`, 44.44782793397542}, {
           28.57554250651802, 44.44106095491347}}]}, {
          Arrowheads[{{0.014409397720885656`, 1.}}], 
          
          ArrowBox[{{30.683706173106415`, 55.561365168549415`}, {
           28.57555308615284, 55.5497459425617}}]}, {
          Arrowheads[{{0.014409397720885675`, 1.}}], 
          
          ArrowBox[{{30.683697047524827`, 66.67394606518965}, {
           28.575562211734425`, 66.65938726814367}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{30.683689778556925`, 77.78604297919549}, {
           28.57556948070233, 77.76951257636007}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{30.683683996969723`, 88.89786116855367}, {
           28.575575262289533`, 88.87991660922414}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{34.27614237491539, -0.47140452079104}, {
           32.39052429175127, 0.47140452079104}}]}, {
          Arrowheads[{{0.014409397720885663`, 1.}}], 
          
          ArrowBox[{{34.38688847491654, 11.077455877421647`}, {
           32.27977819175012, 11.144766344800574`}}]}, {
          Arrowheads[{{0.01440939772088566, 1.}}], 
          
          ArrowBox[{{34.387355045384076`, 22.210001680633226`}, {
           32.27931162128259, 22.234442763811213`}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{34.387415628618875`, 33.328682970265895`}, {
           32.279251038047775`, 33.33798369640077}}]}, {
          Arrowheads[{{0.014409397720885668`, 1.}}], 
          
          ArrowBox[{{34.387425597534275`, 44.44366363535985}, {
           32.279241069132375`, 44.44522525352903}}]}, {
          Arrowheads[{{0.014409397720885671`, 1.}}], 
          
          ArrowBox[{{34.38742471961899, 55.55712414392801}, {
           32.279241947047666`, 55.55398696718311}}]}, {
          Arrowheads[{{0.014409397720885684`, 1.}}], 
          
          ArrowBox[{{34.38742119041845, 66.66981319758334}, {
           32.27924547624821, 66.66352013574999}}]}, {
          Arrowheads[{{0.01440939772088568, 1.}}], 
          
          ArrowBox[{{34.38741719994171, 77.78205717809094}, {
           32.27924946672495, 77.77349837746463}}]}, {
          Arrowheads[{{0.014409397720885647`, 1.}}], 
          
          ArrowBox[{{34.387413392616104`, 88.89402111389664}, {
           32.279253274050554`, 88.88375666388116}}]}}}}}, {
      PointSize[0.025], 
      PointBox[{25.104789809954017`, 24.169584771073293`}]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"A\"", TraditionalForm], 
       FormBox["\"D\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 18}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 33.333333333333336`}, {0, 100.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Active ZNGI\"", "\"Dormant ZNGI\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.5]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6591214059016848`*^9, 3.659121410264181*^9}, 
   3.659121496719459*^9, 3.65912162129949*^9, 3.659121727544179*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dAnum", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "'"}], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"d", "[", "t", "]"}], "*", "\[Alpha]", "*", 
      SubscriptBox["\[Gamma]", "m"]}], "-", 
     RowBox[{
      RowBox[{"a", "[", "t", "]"}], "*", " ", 
      SubscriptBox["m", "a"], " ", "*", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"a", "[", "t", "]"}], "*", " ", "r", " ", "*", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{
         RowBox[{"a", "[", "t", "]"}], "*", 
         SubscriptBox["\[Gamma]", "g"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", "[", "t", "]"}], "+", 
           RowBox[{"d", "[", "t", "]"}]}], ")"}], "*", 
         SubscriptBox["\[Gamma]", "m"]}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"a", "[", "t", "]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}], "*", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", "t", "]"}], "*", 
         SubscriptBox["\[Gamma]", "g"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", "[", "t", "]"}], "+", 
           RowBox[{"d", "[", "t", "]"}]}], ")"}], "*", 
         SubscriptBox["\[Gamma]", "m"]}]}], ")"}], "*", " ", 
      SubscriptBox["\[Delta]", "max"]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dDnum", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"d", "'"}], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"d", "[", "t", "]"}]}], "*", "\[Alpha]", "*", 
      SubscriptBox["\[Gamma]", "m"]}], "+", 
     RowBox[{
      RowBox[{"a", "[", "t", "]"}], "*", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "[", "t", "]"}], "*", 
         SubscriptBox["\[Gamma]", "g"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a", "[", "t", "]"}], "+", 
           RowBox[{"d", "[", "t", "]"}]}], ")"}], "*", 
         SubscriptBox["\[Gamma]", "m"]}]}], ")"}], "*", " ", 
      SubscriptBox["\[Delta]", "max"]}], "-", 
     RowBox[{
      SubscriptBox["m", "d"], "*", 
      RowBox[{"d", "[", "t", "]"}], "*", 
      SubscriptBox["\[Gamma]", "m"]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.659104371879609*^9, 3.659104385810492*^9}, {
  3.659104418435935*^9, 3.659104477863984*^9}, {3.659104507903338*^9, 
  3.6591045646823483`*^9}, {3.659104614138699*^9, 3.659104848935409*^9}, {
  3.659104909639073*^9, 3.65910493637429*^9}, {3.659105230410824*^9, 
  3.659105256456965*^9}, {3.659105597141673*^9, 3.659105625351945*^9}, {
  3.659121301384747*^9, 3.659121303181984*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ADsolve1", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dAnum", "/.", "Parms"}], ",", 
       RowBox[{"dDnum", "/.", "Parms"}], ",", 
       RowBox[{
        RowBox[{"d", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"a", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", "t", "]"}], ",", 
       RowBox[{"d", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlotADTime1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "[", "t", "]"}], ",", 
         RowBox[{"d", "[", "t", "]"}]}], "}"}], "/.", "ADsolve1"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", "Solid"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Gray", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Active\>\"", ",", "\"\<Dormant\>\""}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotADTimePS1", " ", "=", " ", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "[", "t", "]"}], ",", 
         RowBox[{"d", "[", "t", "]"}]}], "}"}], "/.", "ADsolve1"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10000"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "Amax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "Dmax"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<A\>\"", ",", "\"\<D\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ADsolve2", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dAnum", "/.", "Parms"}], ",", 
       RowBox[{"dDnum", "/.", "Parms"}], ",", 
       RowBox[{
        RowBox[{"d", "[", "0", "]"}], "\[Equal]", "100"}], ",", 
       RowBox[{
        RowBox[{"a", "[", "0", "]"}], "\[Equal]", "30"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", "t", "]"}], ",", 
       RowBox[{"d", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlotADTime2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "[", "t", "]"}], ",", 
         RowBox[{"d", "[", "t", "]"}]}], "}"}], "/.", "ADsolve2"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10000"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", "Solid"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Gray", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Active\>\"", ",", "\"\<Dormant\>\""}], "}"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotADTimePS2", " ", "=", " ", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "[", "t", "]"}], ",", 
         RowBox[{"d", "[", "t", "]"}]}], "}"}], "/.", "ADsolve2"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10000"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "Amax"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "Dmax"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<A\>\"", ",", "\"\<D\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"NC", ",", "PlotADTimePS1", ",", "PlotADTimePS2"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.6591048620987062`*^9, 3.659104877975013*^9}, {
   3.6591049552934313`*^9, 3.659105071974742*^9}, 3.659105214800384*^9, {
   3.6591053402477503`*^9, 3.6591053782465982`*^9}, {3.659105464581853*^9, 
   3.659105542512706*^9}, {3.659105642161766*^9, 3.659105642815034*^9}, {
   3.659107049238761*^9, 3.6591070759960318`*^9}, {3.65912099764074*^9, 
   3.659121000258185*^9}, {3.659121049611861*^9, 3.6591211180250893`*^9}, {
   3.659121213374811*^9, 3.6591212832187853`*^9}, {3.659121454062543*^9, 
   3.659121454942854*^9}, {3.6591214849815693`*^9, 3.659121486020832*^9}, {
   3.6591215165490103`*^9, 3.659121557378134*^9}, {3.659121610462058*^9, 
   3.6591216154045353`*^9}, {3.65912173259514*^9, 3.659121739978743*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwtk3tQ0wUAx+euEBjieCoJhOKOt7CNjcEYvy+jMQbyGI/2M4UEQUgqKySv
JQ4E1Ml1CQcdiIAyH4EXyElHQiZTxBBhgOIMUF5BKYgxHiPlkXV97z73+ePz
93dr0sHoFCqFQuG/4V93VPWr06I2gvLfdkGRfqZ0kEEH7S0573k7iQgLbUEg
kw6xy4TV+lskbFssFJf96ViJ693lfINEs/E3KRkxdLj0eE0dvkZisUbBouXQ
IZ1PsAo9R+LjP5Pv+w3RQf3c9O8GOQkyxZNypsgM2tHcNCmLBPPDtlRyzRz5
1gVjzldk0LC1n5zotAJfSsX1G+/D7d5R7+LUzTCgcP84pI+DRtFkv8zfgmpL
VWE+Mw5MfV5H4IgdygX7FXZ5sbh5uaL/LN8By0UVWYujMVDuCySDVVtBe+mx
6SovBqxsz5anum1wyk88UloVDYX7ZP2FhO0Qpy949qxIIZSYtd6+zcAp3lxZ
fJIUv7cfv9pLdwK1kat6/CAKrg/bWBvkzjDnGZrI+VGIFIaX+HS6YDer/IOV
+EhsRqXyW54bCrTuvzZ7RUBWt68MVe44zddUNNDCkZmVoRx54QHVyljjgeUw
+AyF0epIT4zuzrwrehyK6fAm7o9xXnghIHMcOiRYmji2cPO1Fw7UPhOrWkPw
6A4ra7SeiR7rUc3bKjEcH63PfCVjYab4ZHVJWTCEO9QcV1M2IpSDawtyEc7+
4p1noGYjQ6TPPZH0HvYruoQDqd7I1SWWt8QHgXoy9F6bLQeWdldSa4OE2KCe
Vl+6w0HnJCeAIghEDEsi5qRzoR8oNjb1B9KnlCUD9j6oLo8IKQsLwNzDlzGH
233QN3/OIVrkj3ADv0HXIzxs7HXc8qmlH6zTavr6Gb74KlxbkGPEwzvUBzKP
+77oY5h/dsqIi7/GRy6WZ/uha6qxcPYpG5xFi+R1LnwEXYtd1f/GxM4ot6ms
YT5anxQ33Yr1ROXY8tqlIn+YaY9t2kFzw96Lc3l3fQUQmGtMo0ycMF/f3bc6
I0DvF5JU35+2Qf+8+7RHaQAKO68z2PF24CQohwwDCDBmV/wdD1lBZOM8+2qW
wFBK/zypNkISddFPtxN4srSnTpM/R+Svq7T9KAIwTmwsMdDriO8pwavDkcC4
oX5ckKYjZlZL1F3RwMh3XY0/hM4S8teckBoSqKvbI9n+7gxROJ8ZtzcZcE+r
lQyxJojWyYWD3V8DNkE6mb22mRifqJCKsoBpPBPLphoIgwkR++ejb/qXJsPu
a+eJJRu9jJuN//9JofwDvnShOA==
          "]], 
         LineBox[{{0.4940980662810512, 0.}, {0.4941460784184271, 100.}}]}, {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0.5], 
          Dashing[{Small, Small}]], 
         LineBox[CompressedData["
1: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
          "]]}}}, {{{}}, {{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          RGBColor[0.2947336, 0.4054232, 0.5678384000000001]], {{
           Arrowheads[{{0., 1.}}], {}}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{-0.7330385482121421, 11.868584277596991`}, {
            0.7330385482121421, 10.35363794462523}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{-0.7330385482121421, 22.9796953887081}, {
            0.7330385482121421, 21.46474905573634}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{-0.7330385482121422, 34.09080649981921}, {
            0.7330385482121422, 32.57586016684745}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{-0.7330385482121421, 45.20191761093032}, {
            0.7330385482121421, 43.68697127795856}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{-0.7330385482121421, 56.31302872204144}, {
            0.7330385482121421, 54.79808238906968}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{-0.7330385482121422, 67.42413983315255}, {
            0.7330385482121422, 65.90919350018079}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{-0.7330385482121422, 78.53525094426367}, {
            0.7330385482121422, 77.0203046112919}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{-0.7330385482121421, 89.64636205537478}, {
            0.7330385482121421, 88.13141572240302}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           
           ArrowBox[{{2.649611358789431, -0.000662951160323442}, {
            4.757796048617977, 0.000662951160323442}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{2.649787434281154, 11.130388251914814`}, {
            4.757619973126254, 11.091833970307407`}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{2.650562379621397, 22.266993447593837`}, {
            4.756845027786012, 22.177450996850606`}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{2.6525340477348234`, 33.41177736103063}, {
            4.754873359672585, 33.25488930563603}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           ArrowBox[{{2.6570257365701053`, 44.56924966960825}, {
            4.750381670837303, 44.31963921928064}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{2.66727644569736, 55.747726442977566`}, {
            4.740130961710048, 55.36338466813355}}]}, {
           Arrowheads[{{0.014409397720885678`, 1.}}], 
           
           ArrowBox[{{2.6923493388567463`, 66.96377516505761}, {
            4.715058068550662, 66.36955816827573}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           
           ArrowBox[{{2.7622143966087136`, 78.25181258212965}, {
            4.645193010798695, 77.30374297342593}}]}, {
           Arrowheads[{{0.014409397720885696`, 1.}}], 
           
           ArrowBox[{{2.9881935509188393`, 89.66294078144708}, {
            4.419213856488569, 88.11483699633072}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{6.353315946724568, -0.001517770281760749}, {
            8.46149886809025, 0.001517770281760749}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{6.35335862662213, 11.120717298501539`}, {
            8.461456188192686, 11.101504923720684`}}]}, {
           Arrowheads[{{0.014409397720885656`, 1.}}], 
           
           ArrowBox[{{6.35360753043834, 22.24706030610739}, {
            8.461207284376476, 22.197384138337053`}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{6.354360997165621, 33.38028404140037}, {
            8.460453817649196, 33.28638262526629}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{6.356501492949125, 44.52634603214401}, {
            8.458313321865692, 44.36254285674488}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{6.363350011141067, 55.70065987807098}, {
            8.45146480367375, 55.410451233040135`}}]}, {
           Arrowheads[{{0.014409397720885654`, 1.}}], 
           
           ArrowBox[{{6.39414781677724, 66.95721117807085}, {
            8.420666998037577, 66.3761221552625}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           
           ArrowBox[{{6.718748028105269, 78.5758124702632}, {
            8.096066786709548, 76.97974308529236}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{8.184959277860695, 89.60059402436686}, {
            6.62985553695412, 88.17718375341093}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{10.057021918627147`, -0.0026618413951615297`}, {
            12.165200303595077`, 0.0026618413951615297`}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{10.057033481286908`, 11.116720158739694`}, {
            12.165188740935315`, 11.105502063482529`}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{10.05716932992518, 22.240050093147754`}, {
            12.165052892297043`, 22.20439435129669}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{10.057692802029118`, 33.371029184589695`}, {
            12.164529420193109`, 33.29563748207696}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{10.05973302092955, 44.52004353569083}, {
            12.162489201292676`, 44.368845353198054`}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{10.071732608963382`, 55.73106464473401}, {
            12.150489613258843`, 55.3800464663771}}]}, {
           Arrowheads[{{0.014409397720885684`, 1.}}], 
           
           ArrowBox[{{10.468419538378033`, 67.50216571121967}, {
            11.753802683844194`, 65.83116762211365}}]}, {
           Arrowheads[{{0.014409397720885654`, 1.}}], 
           
           ArrowBox[{{12.105027835986846`, 78.12883426201275}, {
            10.11719438623538, 77.42672129354284}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{12.148134240955228`, 89.07781781541797}, {
            10.074087981266999`, 88.69995996235983}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           ArrowBox[{{13.760730917661135`, -0.004271869897279355}, {
            15.868898711968498`, 0.004271869897279355}}]}, {
           Arrowheads[{{0.014409397720885678`, 1.}}], 
           
           ArrowBox[{{13.760725532635366`, 11.113737192892636`}, {
            15.868904096994267`, 11.108485029329584`}}]}, {
           Arrowheads[{{0.014409397720885656`, 1.}}], 
           
           ArrowBox[{{13.760815243071518`, 22.23622271778673}, {
            15.868814386558116`, 22.20822172665771}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{13.761347078403718`, 33.36962161590482}, {
            15.868282551225915`, 33.29704505076184}}]}, {
           Arrowheads[{{0.014409397720885656`, 1.}}], 
           
           ArrowBox[{{13.765423403416207`, 44.54388677342936}, {
            15.864206226213426`, 44.34500211545952}}]}, {
           Arrowheads[{{0.014409397720885684`, 1.}}], 
           
           ArrowBox[{{14.266742609934429`, 56.45595989214477}, {
            15.362887019695204`, 54.65515121896634}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{15.852517732897892`, 66.85182542263836}, {
            13.777111896731743`, 66.48150791069499}}]}, {
           Arrowheads[{{0.014409397720885678`, 1.}}], 
           
           ArrowBox[{{15.863521781697468`, 77.88419586234475}, {
            13.766107847932165`, 77.67135969321082}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{15.865776300520562`, 88.97007427349898}, {
            13.763853329109072`, 88.80770350427883}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{17.464447292164255`, -0.0067052876994545966`}, {
            19.57258974487278, 0.0067052876994545966`}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{17.464426231848375`, 11.110361248712056`}, {
            19.572610805188663`, 11.111860973510165`}}]}, {
           Arrowheads[{{0.01440939772088569, 1.}}], 
           
           ArrowBox[{{17.46448447713143, 22.233328558625896`}, {
            19.57255255990561, 22.21111588581855}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           
           ArrowBox[{{17.46543909814225, 33.379537721556666`}, {
            19.57159793889479, 33.28712894510999}}]}, {
           Arrowheads[{{0.014409397720885654`, 1.}}], 
           
           ArrowBox[{{18.243496258003418`, 45.46202680835032}, {
            18.793540779033624`, 43.42686208053857}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{19.568059802860077`, 55.65340341487698}, {
            17.46897723417696, 55.45770769623413}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           
           ArrowBox[{{19.57084267451805, 66.72769929573496}, {
            17.46619436251899, 66.60563403759838}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{19.571478231438267`, 77.82663424182375}, {
            17.46555880559877, 77.72892131373182}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{19.57174224630446, 88.93167779328945}, {
            17.465294790732578`, 88.84609998448836}}]}, {
           Arrowheads[{{0.014409397720885678`, 1.}}], 
           
           ArrowBox[{{21.168185106539404`, -0.01081063708392632}, {
            23.27625933790504, 0.01081063708392632}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{21.168148952539145`, 11.104735120934135`}, {
            23.2762954919053, 11.117487101288088`}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{21.168153830008528`, 22.229359143627835`}, {
            23.276290614435915`, 22.215085300816607`}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{22.9312816052414, 34.11329865465446}, {
            21.51316283920304, 32.5533680120122}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{23.27535126221641, 44.489503696901906`}, {
            21.16909318222803, 44.39938519198698}}]}, {
           Arrowheads[{{0.014409397720885654`, 1.}}], 
           
           ArrowBox[{{23.275814582795185`, 55.588024754088934`}, {
            21.168629861649258`, 55.52308635702217}}]}, {
           Arrowheads[{{0.014409397720885678`, 1.}}], 
           
           ArrowBox[{{23.27593734527617, 66.69487217248579}, {
            21.16850709916827, 66.63846116084754}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{23.275992565356198`, 77.80383876475852}, {
            21.16845187908824, 77.75171679079706}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{23.27602369686589, 88.91365909579035}, {
            21.168420747578555`, 88.86411868198745}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{24.87200846770376, -0.019212036998841515`}, {
            26.97984338414809, 0.019212036998841515`}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           
           ArrowBox[{{24.872076534479056`, 11.088471074490577`}, {
            26.97977531737279, 11.133751147731644`}}]}, {
           Arrowheads[{{0.014409397720885656`, 1.}}], 
           
           ArrowBox[{{26.974787218471846`, 22.117336092967626`}, {
            24.877064633380005`, 22.327108351476813`}}]}, {
           Arrowheads[{{0.014409397720885656`, 1.}}], 
           
           ArrowBox[{{26.979971562593995`, 33.34327852976745}, {
            24.871880289257856`, 33.3233881368992}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{26.97993981716167, 44.457321874047814`}, {
            24.871912034690176`, 44.431567014841065`}}]}, {
           Arrowheads[{{0.014409397720885654`, 1.}}], 
           
           ArrowBox[{{26.979926983455623`, 55.56944374612842}, {
            24.871924868396228`, 55.54166736498269}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           
           ArrowBox[{{26.979920114371783`, 66.68106673032855}, {
            24.871931737480065`, 66.65226660300478}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           ArrowBox[{{26.979915844137366`, 77.79248707482913}, {
            24.871936007714478`, 77.76306848072643}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{26.979912934355408`, 88.90380522801682}, {
            24.87193891749644, 88.87397254976099}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{28.576542859983185`, -0.046036580093833386`}, {
            30.682716399276067`, 0.046036580093833386`}}]}, {
           Arrowheads[{{0.014409397720885666`, 1.}}], 
           
           ArrowBox[{{30.615982226264173`, 10.739332055456547`}, {
            28.64327703299508, 11.482890166765674`}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{30.683615145026636`, 22.207200756101724`}, {
            28.575644114232613`, 22.237243688342723`}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{30.68372127665588, 33.33195102345769}, {
            28.575537982603375`, 33.334715643208966`}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{30.683716752741233`, 44.44782793397542}, {
            28.57554250651802, 44.44106095491347}}]}, {
           Arrowheads[{{0.014409397720885656`, 1.}}], 
           
           ArrowBox[{{30.683706173106415`, 55.561365168549415`}, {
            28.57555308615284, 55.5497459425617}}]}, {
           Arrowheads[{{0.014409397720885675`, 1.}}], 
           
           ArrowBox[{{30.683697047524827`, 66.67394606518965}, {
            28.575562211734425`, 66.65938726814367}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{30.683689778556925`, 77.78604297919549}, {
            28.57556948070233, 77.76951257636007}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{30.683683996969723`, 88.89786116855367}, {
            28.575575262289533`, 88.87991660922414}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{34.27614237491539, -0.47140452079104}, {
            32.39052429175127, 0.47140452079104}}]}, {
           Arrowheads[{{0.014409397720885663`, 1.}}], 
           
           ArrowBox[{{34.38688847491654, 11.077455877421647`}, {
            32.27977819175012, 11.144766344800574`}}]}, {
           Arrowheads[{{0.01440939772088566, 1.}}], 
           
           ArrowBox[{{34.387355045384076`, 22.210001680633226`}, {
            32.27931162128259, 22.234442763811213`}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{34.387415628618875`, 33.328682970265895`}, {
            32.279251038047775`, 33.33798369640077}}]}, {
           Arrowheads[{{0.014409397720885668`, 1.}}], 
           
           ArrowBox[{{34.387425597534275`, 44.44366363535985}, {
            32.279241069132375`, 44.44522525352903}}]}, {
           Arrowheads[{{0.014409397720885671`, 1.}}], 
           
           ArrowBox[{{34.38742471961899, 55.55712414392801}, {
            32.279241947047666`, 55.55398696718311}}]}, {
           Arrowheads[{{0.014409397720885684`, 1.}}], 
           
           ArrowBox[{{34.38742119041845, 66.66981319758334}, {
            32.27924547624821, 66.66352013574999}}]}, {
           Arrowheads[{{0.01440939772088568, 1.}}], 
           
           ArrowBox[{{34.38741719994171, 77.78205717809094}, {
            32.27924946672495, 77.77349837746463}}]}, {
           Arrowheads[{{0.014409397720885647`, 1.}}], 
           
           ArrowBox[{{34.387413392616104`, 88.89402111389664}, {
            32.279253274050554`, 88.88375666388116}}]}}}}}, {
       PointSize[0.025], 
       PointBox[{25.104789809954017`, 24.169584771073293`}]}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
fwCc4swb
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         FaceForm[
          Opacity[0.3]], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
eVvNlHrGE/9uzwxl/D9XKImc
         "]]}}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"A\"", TraditionalForm], 
       FormBox["\"D\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 18}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 33.333333333333336`}, {0, 100.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Active ZNGI\"", "\"Dormant ZNGI\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontSize -> 18, 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontSize", "\[Rule]", "18"}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.5]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.659121517649123*^9, 3.659121559071884*^9}, 
   3.659121624346711*^9, {3.659121734670739*^9, 3.659121740811035*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["With a predator, Implicit Resources", "Section",
 CellChangeTimes->{{3.657837788529409*^9, 3.65783780370368*^9}, {
  3.6579177957689753`*^9, 3.6579177977597723`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"R", "=", 
  RowBox[{"1", "-", 
   RowBox[{"A", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
   RowBox[{"D", "*", 
    SubscriptBox["\[Gamma]", "m"]}], "-", 
   RowBox[{"P", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"], "+", 
      SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"dAdt", "=", 
  RowBox[{
   RowBox[{"R", "*", "r", "*", "A", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
   RowBox[{
    SubscriptBox["\[Delta]", "max"], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", "R"}], ")"}], "*", "A", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
   RowBox[{"\[Alpha]", "*", "D", "*", 
    SubscriptBox["\[Gamma]", "m"]}], "-", 
   RowBox[{"f", "*", "A", "*", "P", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"dDdt", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Delta]", "max"], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", "R"}], ")"}], "*", "A", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
   RowBox[{"\[Alpha]", "*", "D", "*", 
    SubscriptBox["\[Gamma]", "m"]}], "-", 
   RowBox[{"f", "*", "D", "*", "P", "*", 
    RowBox[{"(", 
     SubscriptBox["\[Gamma]", "m"], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"dPdt", "=", 
  RowBox[{
   RowBox[{
    SubscriptBox["e", "a"], "*", "f", "*", "A", "*", "P", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"], "+", 
      SubscriptBox["\[Gamma]", "p"]}], ")"}]}], "+", 
   RowBox[{
    SubscriptBox["e", "d"], "*", "f", "*", "D", "*", "P", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"], "+", 
      SubscriptBox["\[Gamma]", "p"]}], ")"}]}], "-", 
   RowBox[{"d", "*", "P", "*", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"], "+", 
      SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.6578349951593122`*^9, 3.65783508601048*^9}, {
   3.6578351276085663`*^9, 3.657835142431384*^9}, {3.657835172748931*^9, 
   3.657835173123654*^9}, {3.6578353966518106`*^9, 3.6578354275462*^9}, {
   3.65783797208996*^9, 3.657837999544742*^9}, 3.657838129034318*^9, {
   3.657907191583003*^9, 3.657907201565024*^9}, {3.657907676664372*^9, 
   3.657907683087576*^9}, {3.657908101694631*^9, 3.657908106892516*^9}, {
   3.657916109044235*^9, 3.657916172657714*^9}, {3.657916208476606*^9, 
   3.657916239122384*^9}, {3.657916271608152*^9, 3.6579162825224657`*^9}, {
   3.65791648795074*^9, 3.657916496661708*^9}, {3.657916905187428*^9, 
   3.6579169496612453`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"D", " ", 
   SubscriptBox["\[Gamma]", "m"]}], "-", 
  RowBox[{"A", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
  RowBox[{"P", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"], "+", 
     SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.65783508851589*^9, 3.6578351438140583`*^9, 
  3.657835174439577*^9, 3.657835433877486*^9, 3.657838002636219*^9, 
  3.657838130528221*^9, 3.6578394641315737`*^9, 3.657907203276125*^9, 
  3.657907684999604*^9, 3.65790810848608*^9, 3.6579162981251698`*^9, 
  3.6579164975673656`*^9, 3.657916729471065*^9, 3.6579169581004047`*^9, 
  3.657922609151287*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"D", " ", "\[Alpha]", " ", 
   SubscriptBox["\[Gamma]", "m"]}], "-", 
  RowBox[{"A", " ", "f", " ", "P", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
  RowBox[{"A", " ", "r", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"D", " ", 
      SubscriptBox["\[Gamma]", "m"]}], "-", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
     RowBox[{"P", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"], "+", 
        SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}], ")"}]}], "-", 
  RowBox[{"A", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"D", " ", 
      SubscriptBox["\[Gamma]", "m"]}], "+", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
     RowBox[{"P", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"], "+", 
        SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}], ")"}], " ", 
   SubscriptBox["\[Delta]", "max"]}]}]], "Output",
 CellChangeTimes->{3.65783508851589*^9, 3.6578351438140583`*^9, 
  3.657835174439577*^9, 3.657835433877486*^9, 3.657838002636219*^9, 
  3.657838130528221*^9, 3.6578394641315737`*^9, 3.657907203276125*^9, 
  3.657907684999604*^9, 3.65790810848608*^9, 3.6579162981251698`*^9, 
  3.6579164975673656`*^9, 3.657916729471065*^9, 3.6579169581004047`*^9, 
  3.6579226091683493`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "D"}], " ", "f", " ", "P", " ", 
   SubscriptBox["\[Gamma]", "m"]}], "-", 
  RowBox[{"D", " ", "\[Alpha]", " ", 
   SubscriptBox["\[Gamma]", "m"]}], "+", 
  RowBox[{"A", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"D", " ", 
      SubscriptBox["\[Gamma]", "m"]}], "+", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
     RowBox[{"P", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"], "+", 
        SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}], ")"}], " ", 
   SubscriptBox["\[Delta]", "max"]}]}]], "Output",
 CellChangeTimes->{3.65783508851589*^9, 3.6578351438140583`*^9, 
  3.657835174439577*^9, 3.657835433877486*^9, 3.657838002636219*^9, 
  3.657838130528221*^9, 3.6578394641315737`*^9, 3.657907203276125*^9, 
  3.657907684999604*^9, 3.65790810848608*^9, 3.6579162981251698`*^9, 
  3.6579164975673656`*^9, 3.657916729471065*^9, 3.6579169581004047`*^9, 
  3.657922609177302*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "d"}], " ", "P", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"], "+", 
     SubscriptBox["\[Gamma]", "p"]}], ")"}]}], "+", 
  RowBox[{"A", " ", "f", " ", "P", " ", 
   SubscriptBox["e", "a"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"], "+", 
     SubscriptBox["\[Gamma]", "p"]}], ")"}]}], "+", 
  RowBox[{"D", " ", "f", " ", "P", " ", 
   SubscriptBox["e", "d"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"], "+", 
     SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.65783508851589*^9, 3.6578351438140583`*^9, 
  3.657835174439577*^9, 3.657835433877486*^9, 3.657838002636219*^9, 
  3.657838130528221*^9, 3.6578394641315737`*^9, 3.657907203276125*^9, 
  3.657907684999604*^9, 3.65790810848608*^9, 3.6579162981251698`*^9, 
  3.6579164975673656`*^9, 3.657916729471065*^9, 3.6579169581004047`*^9, 
  3.65792260918646*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Equil", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dAdt", "\[Equal]", "0"}], ",", 
       RowBox[{"dDdt", "\[Equal]", "0"}], ",", 
       RowBox[{"dPdt", "\[Equal]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"A", ",", "D", ",", "P"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.657835098187402*^9, 3.6578351135580072`*^9}, {
  3.657835184003831*^9, 3.657835185395637*^9}, {3.657916305210125*^9, 
  3.657916312191494*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.657835114106292*^9, 3.657835151729498*^9, 
  3.657835186965685*^9, 3.657835436055895*^9, 3.657838012273365*^9, 
  3.6578381401965513`*^9, 3.657839473191437*^9, 3.657907212877651*^9, 
  3.657907687398191*^9, 3.657908111104912*^9, 3.6579163137250967`*^9, 
  3.657916500101426*^9, 3.657917027590857*^9, 3.657918607287984*^9, 
  3.6579321607821712`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JacGen", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dAdt", ",", "A"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dAdt", ",", "D"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dDdt", ",", "P"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dDdt", ",", "A"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dDdt", ",", "D"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dDdt", ",", "P"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"dPdt", ",", "A"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dPdt", ",", "D"}], "]"}], ",", 
      RowBox[{"D", "[", 
       RowBox[{"dPdt", ",", "P"}], "]"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.657835189691493*^9, 3.6578352395472317`*^9}, {
  3.6579163220586042`*^9, 3.657916365015246*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "f"}], " ", "P", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
      RowBox[{"A", " ", "r", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SubscriptBox["\[Gamma]", "g"]}], "-", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"D", " ", 
          SubscriptBox["\[Gamma]", "m"]}], "-", 
         RowBox[{"A", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
         RowBox[{"P", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"], "+", 
            SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{"A", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}], "2"], " ", 
       SubscriptBox["\[Delta]", "max"]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", " ", 
          SubscriptBox["\[Gamma]", "m"]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
         RowBox[{"P", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"], "+", 
            SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}], ",", 
     RowBox[{
      RowBox[{"\[Alpha]", " ", 
       SubscriptBox["\[Gamma]", "m"]}], "-", 
      RowBox[{"A", " ", "r", " ", 
       SubscriptBox["\[Gamma]", "m"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "-", 
      RowBox[{"A", " ", 
       SubscriptBox["\[Gamma]", "m"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "D"}], " ", "f", " ", 
       SubscriptBox["\[Gamma]", "m"]}], "+", 
      RowBox[{"A", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"], "+", 
         SubscriptBox["\[Gamma]", "p"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"A", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}], "2"], " ", 
       SubscriptBox["\[Delta]", "max"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D", " ", 
          SubscriptBox["\[Gamma]", "m"]}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
         RowBox[{"P", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"], "+", 
            SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "f"}], " ", "P", " ", 
       SubscriptBox["\[Gamma]", "m"]}], "-", 
      RowBox[{"\[Alpha]", " ", 
       SubscriptBox["\[Gamma]", "m"]}], "+", 
      RowBox[{"A", " ", 
       SubscriptBox["\[Gamma]", "m"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "D"}], " ", "f", " ", 
       SubscriptBox["\[Gamma]", "m"]}], "+", 
      RowBox[{"A", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"], "+", 
         SubscriptBox["\[Gamma]", "p"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", " ", "P", " ", 
      SubscriptBox["e", "a"], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"], "+", 
        SubscriptBox["\[Gamma]", "p"]}], ")"}]}], ",", 
     RowBox[{"f", " ", "P", " ", 
      SubscriptBox["e", "d"], " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"], "+", 
        SubscriptBox["\[Gamma]", "p"]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "d"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"], "+", 
         SubscriptBox["\[Gamma]", "p"]}], ")"}]}], "+", 
      RowBox[{"A", " ", "f", " ", 
       SubscriptBox["e", "a"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"], "+", 
         SubscriptBox["\[Gamma]", "p"]}], ")"}]}], "+", 
      RowBox[{"D", " ", "f", " ", 
       SubscriptBox["e", "d"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"], "+", 
         SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.657835240606516*^9, 3.65783543827591*^9, 
  3.657838014960504*^9, 3.657838145599725*^9, 3.65783947506275*^9, 
  3.657907222714848*^9, 3.657907696034635*^9, 3.657908114402459*^9, 
  3.657916367011971*^9, 3.657916503202794*^9, 3.657917032715479*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Jtriv", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"JacGen", "/.", 
    RowBox[{"Equil", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.657835244684657*^9, 3.657835261170986*^9}, {
  3.657916530596549*^9, 3.6579165329789352`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"f", " ", "P"}], "-", "r", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "A"}], "+", "P"}], ")"}], " ", 
             SubscriptBox["\[Gamma]", "g"]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "A"}], "+", "D", "+", "P"}], ")"}], " ", 
             SubscriptBox["\[Gamma]", "m"]}], "+", 
            RowBox[{"P", " ", 
             SubscriptBox["\[Gamma]", "p"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"r", "+", 
            SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], ",", 
      RowBox[{
       SubscriptBox["\[Gamma]", "m"], " ", 
       RowBox[{"(", 
        RowBox[{"\[Alpha]", "-", 
         RowBox[{"A", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"r", "+", 
            SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "D"}], " ", "f", " ", 
        SubscriptBox["\[Gamma]", "m"]}], "+", 
       RowBox[{"A", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"], "+", 
          SubscriptBox["\[Gamma]", "p"]}], ")"}], " ", 
        SubscriptBox["\[Delta]", "max"]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "A"}], "+", "P"}], ")"}], " ", 
          SubscriptBox["\[Gamma]", "g"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "A"}], "+", "D", "+", "P"}], ")"}], " ", 
          SubscriptBox["\[Gamma]", "m"]}], "+", 
         RowBox[{"P", " ", 
          SubscriptBox["\[Gamma]", "p"]}]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}], ",", 
      RowBox[{
       SubscriptBox["\[Gamma]", "m"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "f"}], " ", "P"}], "-", "\[Alpha]", "+", 
         RowBox[{"A", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
          SubscriptBox["\[Delta]", "max"]}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "D"}], " ", "f", " ", 
        SubscriptBox["\[Gamma]", "m"]}], "+", 
       RowBox[{"A", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"], "+", 
          SubscriptBox["\[Gamma]", "p"]}], ")"}], " ", 
        SubscriptBox["\[Delta]", "max"]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", " ", "P", " ", 
       SubscriptBox["e", "a"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"], "+", 
         SubscriptBox["\[Gamma]", "p"]}], ")"}]}], ",", 
      RowBox[{"f", " ", "P", " ", 
       SubscriptBox["e", "d"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"], "+", 
         SubscriptBox["\[Gamma]", "p"]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "d"}], "+", 
         RowBox[{"A", " ", "f", " ", 
          SubscriptBox["e", "a"]}], "+", 
         RowBox[{"D", " ", "f", " ", 
          SubscriptBox["e", "d"]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"], "+", 
         SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}], "}"}]}], "}"}], "/.", 
  "\[VeryThinSpace]", 
  RowBox[{
  "Equil", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]], "Output",\

 CellChangeTimes->{
  3.657835262007155*^9, 3.657835444538683*^9, 3.65783801783891*^9, 
   3.657838150197969*^9, 3.657839477897621*^9, 3.6579072285360413`*^9, 
   3.657907699061263*^9, 3.657908115980966*^9, 3.657916379396923*^9, {
   3.6579165060427303`*^9, 3.657916533706463*^9}, 3.657917035838697*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Jint", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"JacGen", "/.", 
    RowBox[{"Equil", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.657835263563579*^9, 3.65783527190707*^9}, {
  3.657916536803133*^9, 3.657916539891083*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "d"}], " ", "e", " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"f", "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[Gamma]", "g"], "+", 
               SubscriptBox["\[Gamma]", "m"], "+", 
               SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[Gamma]", "g"], "+", 
               SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "e"}], " ", "f", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "d"}], "+", 
                  RowBox[{"e", " ", "r"}]}], ")"}], " ", "\[Alpha]"}], "+", 
               RowBox[{"d", " ", "r", " ", 
                RowBox[{"(", 
                 RowBox[{"d", "-", 
                  RowBox[{"e", " ", "\[Alpha]"}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["\[Gamma]", "g"], "+", 
                  SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}]}], "-", 
            RowBox[{"e", " ", "r", " ", "\[Alpha]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"e", " ", "f"}], "+", 
               RowBox[{"d", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["\[Gamma]", "g"], "+", 
                  SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}], " ", 
             SubscriptBox["\[Gamma]", "p"]}]}], ")"}], " ", 
          SubscriptBox["\[Delta]", "max"]}], "+", 
         RowBox[{
          SuperscriptBox["d", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Gamma]", "g"], "+", 
             SubscriptBox["\[Gamma]", "m"]}], ")"}], "2"], " ", 
          SubsuperscriptBox["\[Delta]", "max", "2"]}]}], ")"}]}], 
      RowBox[{"e", " ", "f", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"e", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"f", "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[Gamma]", "g"], "+", 
               SubscriptBox["\[Gamma]", "m"], "+", 
               SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}], ")"}]}], "-", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
          SubscriptBox["\[Delta]", "max"]}]}], ")"}]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SubscriptBox["\[Gamma]", "m"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "e"}], " ", "f", " ", "\[Alpha]"}], "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Gamma]", "g"], "+", 
             SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"r", "+", 
             SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], 
       RowBox[{"e", " ", "f"}]]}], ",", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"], "+", 
         SubscriptBox["\[Gamma]", "p"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}], 
      RowBox[{"e", " ", "f"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"e", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[Gamma]", "g"], "+", 
               SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"f", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "d"}], "+", 
                  RowBox[{"e", " ", "r"}]}], ")"}]}], "+", 
               RowBox[{"d", " ", "r", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["\[Gamma]", "g"], "+", 
                  SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"e", " ", "f"}], "+", 
               RowBox[{"d", " ", 
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["\[Gamma]", "g"], "+", 
                  SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}], " ", 
             SubscriptBox["\[Gamma]", "p"]}]}], ")"}]}], "-", 
         RowBox[{
          SuperscriptBox["d", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Gamma]", "g"], "+", 
             SubscriptBox["\[Gamma]", "m"]}], ")"}], "2"], " ", 
          SubscriptBox["\[Delta]", "max"]}]}], ")"}]}], 
      RowBox[{"e", " ", "f", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"e", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{"f", "+", 
            RowBox[{"r", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[Gamma]", "g"], "+", 
               SubscriptBox["\[Gamma]", "m"], "+", 
               SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}], ")"}]}], "-", 
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
          SubscriptBox["\[Delta]", "max"]}]}], ")"}]}]], ",", 
     RowBox[{
      SubscriptBox["\[Gamma]", "m"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Alpha]"}], "+", 
        FractionBox[
         RowBox[{"d", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
          SubscriptBox["\[Delta]", "max"]}], 
         RowBox[{"e", " ", "f"}]]}], ")"}]}], ",", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"], "+", 
         SubscriptBox["\[Gamma]", "p"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}], 
      RowBox[{"e", " ", "f"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"e", " ", "r", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"], "+", 
          SubscriptBox["\[Gamma]", "p"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "e"}], " ", "f", " ", "\[Alpha]"}], "+", 
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Gamma]", "g"], "+", 
             SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", 
             SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"e", " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{"f", "+", 
           RowBox[{"r", " ", 
            RowBox[{"(", 
             RowBox[{
              SubscriptBox["\[Gamma]", "g"], "+", 
              SubscriptBox["\[Gamma]", "m"], "+", 
              SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}], ")"}]}], "-", 
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Gamma]", "g"], "+", 
           SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
         SubscriptBox["\[Delta]", "max"]}]}]]}], ",", "0", ",", "0"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.65783527240974*^9, 3.657835446424217*^9, 
  3.6578380196713877`*^9, 3.657838151949204*^9, 3.657839479686924*^9, 
  3.6579072305074587`*^9, 3.6579077016581707`*^9, 3.6579081175200233`*^9, 
  3.657916382556488*^9, 3.657916512054666*^9, 3.657916543511114*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Jbound", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"JacGen", "/.", 
    RowBox[{"Equil", "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.657916515297402*^9, 3.657916553258868*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", " ", "\[Alpha]"}], "+", 
          RowBox[{"2", " ", "\[Alpha]", " ", 
           SubscriptBox["\[Delta]", "max"]}], "+", 
          SubsuperscriptBox["\[Delta]", "max", "2"]}], ")"}]}], 
       RowBox[{"\[Alpha]", "+", 
        SubscriptBox["\[Delta]", "max"]}]]}], ",", 
     FractionBox[
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "r"}], "+", "\[Alpha]"}], ")"}], " ", 
       SubscriptBox["\[Gamma]", "m"]}], 
      RowBox[{"\[Alpha]", "+", 
       SubscriptBox["\[Delta]", "max"]}]], ",", 
     FractionBox[
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"], "+", 
         SubscriptBox["\[Gamma]", "p"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}], 
      RowBox[{"\[Alpha]", "+", 
       SubscriptBox["\[Delta]", "max"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[Alpha]"}], "+", 
         SubscriptBox["\[Delta]", "max"]}], ")"}]}], 
      RowBox[{"\[Alpha]", "+", 
       SubscriptBox["\[Delta]", "max"]}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SubscriptBox["\[Gamma]", "m"]}], 
       RowBox[{"\[Alpha]", "+", 
        SubscriptBox["\[Delta]", "max"]}]]}], ",", 
     FractionBox[
      RowBox[{"\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"], "+", 
         SubscriptBox["\[Gamma]", "p"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}], 
      RowBox[{"\[Alpha]", "+", 
       SubscriptBox["\[Delta]", "max"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"], "+", 
        SubscriptBox["\[Gamma]", "p"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "d"}], "+", 
        FractionBox[
         RowBox[{"e", " ", "f", " ", "\[Alpha]"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "+", 
            SubscriptBox["\[Delta]", "max"]}], ")"}]}]]}], ")"}]}]}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.657916554031435*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Jtriv", "//", "Eigenvalues"}], "]"}]], "Input",
 CellChangeTimes->{{3.6578356394460297`*^9, 3.6578356420303164`*^9}, {
  3.657835722328991*^9, 3.6578357281133413`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[Alpha]"}], " ", 
    SubscriptBox["\[Gamma]", "m"]}], ",", 
   RowBox[{"r", " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", "d"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"], "+", 
      SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.657835642430519*^9, 3.657835730329527*^9, 
  3.657838038907131*^9, 3.657838157848124*^9, 3.6578394859728603`*^9, 
  3.657907235708284*^9, 3.657907706322336*^9, 3.6579081198725777`*^9, 
  3.657916385525922*^9, 3.657916560775976*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"-", 
   RowBox[{"Tr", "[", "Jint", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Det", "[", "Jint", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.657838580303112*^9, 3.657838589377034*^9}, {
  3.657838626238986*^9, 3.6578386331585503`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SubscriptBox["\[Gamma]", "m"]}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Alpha]"}], "+", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}], 
      RowBox[{"e", " ", "f"}]]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "d"}], " ", "e", " ", "r", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"f", "+", 
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"], "+", 
            SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "e"}], " ", "f", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "d"}], "+", 
               RowBox[{"e", " ", "r"}]}], ")"}], " ", "\[Alpha]"}], "+", 
            RowBox[{"d", " ", "r", " ", 
             RowBox[{"(", 
              RowBox[{"d", "-", 
               RowBox[{"e", " ", "\[Alpha]"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[Gamma]", "g"], "+", 
               SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}]}], "-", 
         RowBox[{"e", " ", "r", " ", "\[Alpha]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"e", " ", "f"}], "+", 
            RowBox[{"d", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[Gamma]", "g"], "+", 
               SubscriptBox["\[Gamma]", "m"]}], ")"}]}]}], ")"}], " ", 
          SubscriptBox["\[Gamma]", "p"]}]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}], "+", 
      RowBox[{
       SuperscriptBox["d", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}], "2"], " ", 
       SubsuperscriptBox["\[Delta]", "max", "2"]}]}], ")"}]}], 
   RowBox[{"e", " ", "f", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"e", " ", "\[Alpha]", " ", 
       RowBox[{"(", 
        RowBox[{"f", "+", 
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"], "+", 
            SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.6578386003469973`*^9, 3.657838645828158*^9, 
  3.657839488388715*^9, 3.6579072423340473`*^9, 3.657907709176633*^9, 
  3.657908123168004*^9, 3.657916391383815*^9, 3.657916591930372*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"d", " ", "r", " ", 
   SubscriptBox["\[Gamma]", "m"], " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "+", 
     SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Gamma]", "g"], "+", 
      SubscriptBox["\[Gamma]", "m"], "+", 
      SubscriptBox["\[Gamma]", "p"]}], ")"}], "2"], " ", 
   SubscriptBox["\[Delta]", "max"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "e"}], " ", "f", " ", "\[Alpha]"}], "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Alpha]", "+", 
        SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "e", " ", "f", " ", "\[Alpha]"}], "+", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"r", "+", 
        RowBox[{"2", " ", 
         SubscriptBox["\[Delta]", "max"]}]}], ")"}]}]}], ")"}]}], 
  RowBox[{"e", " ", 
   SuperscriptBox["f", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"e", " ", "\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{"f", "+", 
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Gamma]", "g"], "+", 
           SubscriptBox["\[Gamma]", "m"], "+", 
           SubscriptBox["\[Gamma]", "p"]}], ")"}]}]}], ")"}]}], "-", 
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
      SubscriptBox["\[Delta]", "max"]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.6578386003469973`*^9, 3.657838645828158*^9, 
  3.657839488388715*^9, 3.6579072423340473`*^9, 3.657907709176633*^9, 
  3.657908123168004*^9, 3.657916391383815*^9, 3.657916592609931*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Parms", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", "\[Rule]", "2"}], ",", 
    RowBox[{
     SubscriptBox["\[Gamma]", "g"], "\[Rule]", ".02"}], ",", 
    RowBox[{
     SubscriptBox["\[Gamma]", "m"], "\[Rule]", ".01"}], ",", 
    RowBox[{
     SubscriptBox["\[Gamma]", "p"], "\[Rule]", "0.2"}], ",", 
    RowBox[{
     SubscriptBox["e", "a"], "\[Rule]", ".2"}], ",", 
    RowBox[{
     SubscriptBox["e", "d"], "\[Rule]", ".05"}], ",", 
    RowBox[{"f", "\[Rule]", "0.4"}], ",", 
    RowBox[{"\[Alpha]", "\[Rule]", ".3"}], ",", 
    RowBox[{
     SubscriptBox["\[Delta]", "max"], "\[Rule]", ".2"}], ",", 
    RowBox[{"d", "\[Rule]", ".01"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.657836791101138*^9, 3.6578369032375307`*^9}, {
   3.657837047275097*^9, 3.6578370476094503`*^9}, {3.6578370873625307`*^9, 
   3.6578371032968407`*^9}, {3.657838072482644*^9, 3.657838077246369*^9}, {
   3.657838806716035*^9, 3.6578388241087217`*^9}, {3.6578388573193693`*^9, 
   3.6578388706199827`*^9}, {3.657838952662613*^9, 3.657838958276593*^9}, 
   3.6578395217017097`*^9, {3.657907280138755*^9, 3.657907284322071*^9}, 
   3.6579077540245857`*^9, {3.657910642976322*^9, 3.657910660424062*^9}, {
   3.657916632554582*^9, 3.657916667753364*^9}, {3.6579168270105343`*^9, 
   3.657916830633697*^9}, {3.657917057073049*^9, 3.6579170763727703`*^9}, {
   3.6591219418388243`*^9, 3.659121947565483*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"r", "\[Rule]", "2"}], ",", 
   RowBox[{
    SubscriptBox["\[Gamma]", "g"], "\[Rule]", "0.01`"}], ",", 
   RowBox[{
    SubscriptBox["\[Gamma]", "m"], "\[Rule]", "0.005`"}], ",", 
   RowBox[{
    SubscriptBox["\[Gamma]", "p"], "\[Rule]", "0.2`"}], ",", 
   RowBox[{
    SubscriptBox["e", "a"], "\[Rule]", "0.2`"}], ",", 
   RowBox[{
    SubscriptBox["e", "d"], "\[Rule]", "0.05`"}], ",", 
   RowBox[{"f", "\[Rule]", "0.4`"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "0.3`"}], ",", 
   RowBox[{
    SubscriptBox["\[Delta]", "max"], "\[Rule]", "0.2`"}], ",", 
   RowBox[{"d", "\[Rule]", "0.01`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6578369070610228`*^9, 3.657837049856925*^9, {3.657837096693191*^9, 
   3.6578371047034807`*^9}, 3.6578380793976517`*^9, 3.657838175746892*^9, {
   3.657838791250641*^9, 3.6578388249188957`*^9}, 3.657838872115847*^9, 
   3.6578389609803343`*^9, {3.657839512662703*^9, 3.657839527284305*^9}, 
   3.65790724998785*^9, {3.657907281558536*^9, 3.657907285159387*^9}, 
   3.657907712004046*^9, 3.6579077548681593`*^9, 3.657908125338825*^9, {
   3.657910645462639*^9, 3.657910662026609*^9}, 3.657916670141201*^9, 
   3.657916742628007*^9, 3.657916831339823*^9, 3.657917076871015*^9, 
   3.657922624340849*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"dPdt", "/", "P"}], ")"}], "/.", "Parms"}], "]"}]], "Input",
 CellChangeTimes->{{3.657916703720785*^9, 3.657916748611953*^9}, {
  3.6579170958693657`*^9, 3.657917135859263*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.0021500000000000004`"}], "+", 
  RowBox[{"0.017200000000000007`", " ", "A"}], "+", 
  RowBox[{"0.004300000000000002`", " ", "D"}]}]], "Output",
 CellChangeTimes->{{3.657916707542218*^9, 3.6579167719183187`*^9}, {
  3.6579170787304163`*^9, 3.6579171362233343`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"dPdt", "/", "P"}], "/.", "Parms"}], ",", 
   RowBox[{"{", 
    RowBox[{"A", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"D", ",", "0", ",", "100"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Active\>\"", ",", "\"\<Dormant\>\"", ",", "\"\<dP/dt\>\""}],
      "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "18"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.657836908736711*^9, 3.6578369297571297`*^9}, {
   3.6578369696376743`*^9, 3.6578369786476393`*^9}, {3.65783706367459*^9, 
   3.657837068698104*^9}, {3.657837107736948*^9, 3.657837151999578*^9}, {
   3.6578373168521023`*^9, 3.657837337706089*^9}, {3.6578374473695393`*^9, 
   3.657837478679192*^9}, {3.657838884437954*^9, 3.657838928303049*^9}, {
   3.657839532485478*^9, 3.657839580275837*^9}, 3.6578468279122057`*^9, {
   3.657907260020049*^9, 3.6579072612741623`*^9}, {3.6579081764531603`*^9, 
   3.6579081786430893`*^9}, {3.657908555030221*^9, 3.657908587019766*^9}, 
   3.6579098964949837`*^9, {3.657914676449315*^9, 3.6579146899359617`*^9}, {
   3.65791668327306*^9, 3.657916698520208*^9}, {3.657916777842992*^9, 
   3.657916791010148*^9}, {3.6579168610357637`*^9, 3.657916888426713*^9}, {
   3.6579170462290287`*^9, 3.657917049092834*^9}, {3.6579171401719847`*^9, 
   3.657917140514538*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
SWF51Jjczd3vh43HvF87jBq+aIutxC/zTgQt7KT/nr/QucmfCybodfx7k8YB
v7mHR+hzHh+El0gs89jc5/xcTMSWWa5bx+j1/DvfF1zHeJm/8Jyfa9aveqHs
hc34eR3qsVzPv3+tEnUyZJ2pK/I6d2Jr5ckd/UDHo39n+ZwGVhjyZwqHvFqf
LBCRPsdir9O24OmnDzg4lNbxMy+Dcz31nMxfYtwcTlXR63dHnTi2Ydo/yvX1
a1Q9d2fsHVv9sq+dHRxq6/XEBzjXk1cM6fmhnINl0+t/X/Fl4soiT5RzfY6T
lRyqFoyyXb/0PbPDqQZ6PXEbzvXEmf59Jzs6PDb1/J5/L8z7KOULW/J//2um
3FO+N7me18nz9MKGCUnmen2/Ev9XrZ3xLbmwqf/3f+h0uHj0O+VcX9ixh/OZ
yPe2itXTxCbbWuv15Dlwrud7Ofp5SFxyRbNecNih+86gqI/KuX5ZzolvfHp+
slX693VOttXrj0jcg3P9csmXJs1o8ja5tYdeH+xXenyXdl+Uc/3Kv5ocLXXz
iy30+pyXyZFmPeKofB/BuX6VxM8cBS/GJA816xTHnT43TQqJV871a2pnn3fF
5buN+5bvje8zPjql6HxO7084dTDuQ/gC37+uZhl6T+83OPGE+wp+5YWXz/U8
T/X+gVNP4H6A38iYsmju7y/1ftD5tHxP8XfXevPqKz32en/Qvy+cfIC/I3xo
mdUV2j0yf0f4MMm7+LvARxzrk/il1Vf1Dx8p+S2e4Xwv4Jnv4Qelw6uPbHpR
PcNZj8AzPEG+F/AMJ7/CM9wn+9Z0g3OYzymcPBbP8Lk16m478PmVeoYvkPkC
nuHNAl5unvzaeNb6v+QDeIY3tx0aVuR387mAt5C8C8/wVjen2c5dMZ7hrLvh
Gd6mT4vMA+slqGfymiM3QprEVL+qnuHMv/AM96q05NH0bhHqGU5+hWd4nbqR
C9JljVHPcPJYPMNtPceUcY99rZ7hDWW+gGd4sTNpo5sPNPEKzrwMz/CSHmGB
7+8bz7peIHkXnuFlnm2YvszNxBM46254hpeXfAbP5IlXnO/sKut3Qz3DmX/h
Gf5A8h88w5nn4hn+sW/ebFt/eaae4dQT8Az/5rtvz5s3b9QznPkCnuEOd4uV
yPfceIYzL8MzPNXA93HHO35Wz3DqkHiGp00IDukVajzDycfwDE+/cLZfmto/
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
3E/qb7Eyfptr4h8V2pu60GEZ/7ahhU+eTzSep8j4M650edR9m/HM+Jlf4zm9
jP9e1KwCi78az4y/fvrtziU3Gc8rZPz+FS91OdnM1N8ubJoaEbSwmVWv0751
QS6m/rbAJfmId/5mug6L57ZRU1Y47WhqHT7X85JziKlz5p6ZNDy8RlNrpsyv
8fyw2JRWfmebWK17vGyyvq+pc245m1jGtW0TK//u8rOuBJk6J4/Pvg0P+eFo
6m882tffzsr483fPF/UjzHieJ+Of7lM3xYqJpv7WRsb/fGf338o7mbpQLhl/
S5lf4zlCxn/w65bu3Uab+hvjzyvr73geIOOf2uj5+oXnjee1Mt6AXU7+72uZ
+lsP55S3gwKa63o9notHTN/v7dzcGvp+bat7J0yd89WkFIucLrpZzjK/xvO+
gtO9wju4WY6+xS7X6mXqb6NPODT1i3a1bt3un35goKlz1ukxrZjrCFdrY9Hd
TdekMvW3sJ/U33j8OqKm02V3UxfqJuPvtqZzwz7xxrOTjD/k5MTeCZuNZ8Zf
WubXeN4r41+S8dSmsp+MZ8b/WfoE8Ows4+/aOXVk10am/jZ4+awcroGtrYLJ
q3eXqmTqb5VlvEGri5T2DXuknr/e9rkadLWVVTLv7bBRwabOefzfekjXVjq/
xvOM3D6znV62tE4Gdmt9+3dTf2t2JFWf8DEtrfnJmxem2WPqnJk6z7T5pW5p
dWjx7HL1ZDvP/5/620AZ/605Hv3WXDOeeay9Z8ysymNN/e2LjP+Pf1b7Xyxs
Vxf6z/jTyPwaz4x/cJGHUfHDTP2N8d9smpzCL6+pC2WW8dccUqRImTPGc+Gm
jfK4bmljLWib6VCvkqb+9t/XH9jGyv7lUp4nnqb+FiPjjWyQpWO2IFPnbPrv
7/3ibu2S+TWed85teDPouLs1NmLVreGdTP3tvz593K2GpSOybdlh6pxDS4cE
eDd3txyds5YaONnU347+pP5WSMa/d/3w7f1bmLrQNBl/zpBlF5LjjGceJ748
9GzVBuOZ8bMOgmfG36zGd6fQd8Yz49/ze4FGPVcZz8Nk/L/OrN/nm83M+9Kd
bbzNe1A7K2Hr9ONrC5n626B/75Mq7axLhdNsmNzT1N+ueZ6b4RT/n3xzsGt4
wH5T52S8zK/xvCxN4x7hs/9d5wnrmNnD1N/+e1+1bGt9b5trZf2tps7ZadtZ
Z78cba2nrct71Uwwnv1/Un9zlPHP37/oVfVLxrOXjD/27r7010aY+ttVGX/H
pLBS/fKbuhCPrIPgmfE7Nc/df+VgU39j/L7Da8+ukNPUhTrL+N+v6rr1/HHj
OdZqWs2vWnvLK/7zuVs5Tf3NI9ucLd4JHtZ0V1uRfL+b+tvhJ+ezup7xsFqt
nNnDLcDUOfMGpp3q5Oth5Zd1EO3/kfE+q5gxYmdrU3+LbDu7a3guDytwknu+
8E2mzulS7PzFoIftrJOebrvTjDf1t4U/qb99kPH3P7+rXOpmpi7UVsZ/9c3V
5us/GM9BMv6qv37wqrbGeGb8rINo/4w8OvSstsPzlfHM+PvO7hD6w894biDj
v7x73PPlzqb+9uB4szNBiR0s7xLV+89Oa+pv9RbNreR3toNVe+T4rUEdTf1t
U/fQjd7zO1hpTh1/+my7qXOmrJguk2vbDroOgue+yU0nOuXtYG3s3KRn0+am
/sZ4q7drfN25lam/ldl0oWP4tvbWuvH93936YjyP+Un97b6Mv2F46JCwc8Zz
XRn/jhSvF3oNMfW3P2T8WUplCkiZ29SFGD/9Kvhl/OGj2ryuMsDU33h0WTcy
w+Wspv5WVsb/1+kVpfv8bTyfrePmHn6+k1XcfejroilN/Y1+utj1B0q3a2fq
b77hF8v5eXSyTrz82n+mv6lz0pfIOgieW09yTe8a1dHqMHNa9NMmpv62v4Xv
WKcdHa2sA3pny3DFeNZ64SKfSltGmfpbz5/U387I+At/iNm3qaGpvxWX8c/K
le5GrTfGM+N/XbfM+xvLjWfGzzoInlvJ+I/4Dimf4pnxzPgL7lvSYs0iEx9y
bPxfvavS8knz7nw6qv7jpA7W6UKtrEdumfljkPxc4sprp7NXMfN0/j18X8O5
3o0f6/X6uRl0/9Dq/A76nL9jjnb+mc+7GU6dsLfT+Y9b2pq6K31o47wapK3z
LVj7lvn3vfl6PYh/ekb7LeHL4z8dWtBmjfYzw3OFp8jypJXZFw+/XepWpXNl
zb54uKtz2x0ePmZfPLy01A10n6Fw8lVd76dOKHGSdVa456AJYzIXNvu1dX37
xLspTXOZ/drwBtn7zJmWyezX1npq37uL/05t9mvDf5P6AHVtOHkpPvk8Be4u
t2ODx3n1Cb/XqNTK9oN2qk849S58wu/KPAufcL7f8Qnfef5twPtWZv87fK73
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
l/oMfdvwOVI/uSTxiu+7D7KfIlDikdZvpY+XPm84+8joS4azryGFxDG+p+rJ
fq5LEsfg32UfQQbW74VHSP8qfeTw8u87XX1zONZWTOKbfv/KfiviGzyT9Pn3
lvjG99ccOTcgSuIbfIvse1op8Q0+Q/rtiW9wzld5KfENzvlLRyW+wSNlXxLx
Dc5+89MS3/h+vCn9P98lvsGbSv9PUYlv8JLS/3NJ4hs8nfT/EN/0nADp56Ev
HE4/D/ENTj8P8Q3Ofh/iG5x+ngYS3/h+LyDrv8Q3+FtZ/yW+wdkX2V7iG3y3
rP9+l/gGZ/33T4lvcNZ5iW9aT5N1XuIbnHVe4hucdV7iG5x9N8Q3OOu87N/j
c+wn9f/REsfgw6X+z/4ouLvU/30kjsErSv2f/Sdw6v/08cOp89N3DqfOT5+0
1pekzk9fL5w6P3FM999LnZ++Se2/kzq/9nVJ3Goh633kJfA9EsfIA7Q+c/2o
S8185tw/+MPxO4aeTDT7auGPZZ8XcRP+ZIOVyTHyhfZDwl/Y7Z+Fsw5IfDH7
L/9Xf9Z1AuHxzht+KZje7EOEJ6RO9WnIabN/Fv5D5vV40LxR6sB4gB+S+IwH
ePfuv/d5cd/sh9U+sQ8lqyxwM/s04b1lH1ZFu/qS/f5WrTtJHZj3C2ffBO8X
7jw2YvDMimY/ILyu1cDj9nOzvxXOvireLz7o5+T9wh/J9wXvFx71z4Pih0qY
/ZLwp/22xXVa9er/qTvZ7yeFT/jNPblxjHlfep6l7FPgfcEnB+a/9rK96VOF
T5k4/ZBz5gQdP+/P/vxJOOcpMX4450za16Ps92Pq+St25yvq/hu7cxTh7KNn
PIw3Sj4vjAceLX2kP6tT8XvhSTJf4/fCk3v8b77G6/P7+0pfJdfDbdLHyOeH
+sxOu3Ou4PvtzrmCd7U750rrYHbnXMF72Z1zBe9rd84VvJ/deZ7aZ2J3nhXc
/jwruP15VnD786zg9udZwe3Ps4JznhXeGC/xVuu5wiMk3uINzr5avMG5f/AG
Z78G3uD25xjAiav4gX+XuKr7wYUnyH2IHzh1A/zAk+Q+xA/cQfrf8KD78yTe
4gHeU+ItHuDse8WD9mnIfY4HeDXpW+P9wutIXOX96j4Jiau8XzhxlfcL53Ok
+YRw9kHwvvj9xFX9/AuPkbjK+4K/kH5d3hec/is9J4FzaiV+Mn74VImfjB8+
TeZBjB8+XfqRGCe/h88p49S+AvmcMk44+2EZD5w4yXjgfI4YD5y6sZ4/LK/3
Uu5zPWdYOPmGnpfL/iC5D/VcXOEppf+H1+Hn6KvhenhD6WPh808cjZHPI8+J
Bw2kn1PjkXDuWz4ncPYB8Tp8bppIXyLXwXdKnwyvD38u9w+vD+f+4X7V84Sk
v4Xfy/3randOtfZF251HDef/l8d44PbnM8Ptz2GGH7E7b1n7wCXOM07uU/rf
GCecvgvGCT8o8ZnX1X3hEp8ZP5z8lvHDud8YP5z+CsYPJw5zf8PJb3lf3O/0
m/G+9BwRyW95X3DyW94XnPyW3wcn3vJ+4dyHvF84nwveL5w+B94vvI7kt7xf
OPktn0N4PYnDeOBzuV3uc10nFk79GQ9w8l69/zj/Q/JePMCfSHxmHBp3JT7j
Bz5KPkf40f5Y+Rzpuohw8mTtexM+XvJk/MAnSJ6MHzh5MvFIucR5+3qX/X5/
xrtLPhe8L/hnuZ+5nvfB/RZsV+/ifuN14MyDdB2OdS65T3h9fOyTvyOvD+fv
mNmu3sXfkd8LHyP++b1w/Ou5Iqw3iX/Gw99hn8QxxgPn/BnGA+f/J8V44Jzr
xXi0z03iGOPReaHkq4xP981Lvqr76ZgfSxzT/78A50NIHNN5l3Dm9fr/CyBf
kDyT8dv3iel5+8KJY3quvnDimOYlnNsk+aSeky88yW4fIvf1QbmvdL1HOHkj
7wtOHON9wT0lb9TzxPjcyPcv7xfOPJ33q31cEsd4v/C6Esd4v3DiGO9X55GS
T+r5P8ItySd1n5t8jrnPeb9w4hXvV/M4iVe8X61fST5AfNN+LYljeIDzecED
nM8LHjSfkniFBzjxSvtKhTOvxwN8usQrvMDpk//ZOub/AdUSPLM=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
XtG+V/Xal6ntULY9P/U+kp/5IrWtau/8nDqflC86N7rf8ovul9rOFdvv1ncS
14P1kUcT1+CNons7ssOG0X0b1ciNo3s1P2uvRcfB9Yo70fmt/G756PxcPZZW
0fFL8XNL6jxQvbX20b5a8Wp56hxbNcXm1Dmhao1lqXNs9VjWpc4rlOeuz3MV
8drUuYdq8EF5Lq0aWTmfchjlMkuQkxPX4w8hPyWOCVtT5+fqIaxOnUOq3t+W
ul5QD6FedJ9NvYIG0fmb+pw/5u9QPmNjvvay3VmpfeY0/uzI7WNTbiN7cvuZ
yWfrtL6p7XR3bjP7c9valduj7HJnbnf67o78WuNbkPmZ95j22t58r2xN3OPR
/ZcF33t7/mwnRueW6iXOVU3L539Fvwu9k2+4ns34bvQ+rZv8AeOluH40s69U
vKwSnb+pP1km2leUzWOp9ksX+b/o2kq9uG6Zfb3+l/6nfEjN4B75L/B3ek7Z
tH579B7Sc2/MfYHql7+RGflzfsvY8HwdNaY13pJ/dydSER6L3hH97sVny0YT
96tLRtdT6uMVj65Z1K8+kL9b+QH1iZdp3RX3tIcT9+HVS16uPaJ3ktu88rRd
+drp/ReLrolK5+9StldRPjBzPNa7rS4/nrjf/lVq/6yej3p1K/UMzJub+rdr
n8bouli96COja0P18D9LXUuqF3RsdM2lHqb6Gau035VfRNenqjkKRdfU6rer
F7IW/jW4X67+z1fBfXf1uBYE99TVp/o6uBeintKXwX139abmB7+z33KbVJ9+
Cfp7xcnoGkc9bfVg1sBLg3vtv8KLgvs0q+Elyg2ia3n12Aui633159VfXwov
ZM5Z0f1k9TqWpq5B1FurFd2jVm9KNrMh34M3RddE6jXJHhQrKpK/zMyciyte
t4muNdRHUj2+Nberv1LXyIXz2D4DflW5QeoaWWc3tzP/tcR9p52pa1Wdy7Rm
fELi/tK7mfNp5Uu7U9e2OsfZk7pO13mN8in1it8N/t9bc/8wNrdt2Xi76Nxe
PvNA6jVVT7VudD9fPSIleKrNVaP/m7rW1jnFodT1tc6D9qWu5dXv3Zt6vuq/
/an7AzonCtF5ke7zX+q+is4y2kbXleqDfZI6/1FOdTB1/0S93zmpcyflZn/D
NyfuA58XHVt13vRp6titfO8wfFXiM6zOebxQPtMpuo5Tb/DNzHWUYmi36Lpb
faq7otdFvawZmWsqxaPpmWuqdfCUzGcMq7RWmc8tVsKvZj6TWAHPTp2zKYd8
OfN5yVJ4Uubzkl9lO5lrgLV6B5nPY5bA4zOfwSgmTsh8BqM4OytzfaXc6fXM
tcQaeFrmGmM1fHV0TqLzoMuj61ydB3WNroUb5nWPcram2mt57NN6tYyuSRVb
O0bXv+qdNo/uOagfe0d0/ave6WXwY4nP4FrAoxL3aa+J7l2on3l69NmNeoyX
RtfvOge8Nrpnol7C1MznNzoD0lmQ7Hyk8uHU+Z7OMXfB58IqCP5J3YvTeV/F
6D6AzmKOi67v1Oe/OLr+VT52UXSdpXdeKrpOVD+zSXQtpnVpGl1Tax2Pj65D
dUZQLbrGVB+yanRdqT7kjdG1g9buqugaXPZwQ3QtoHW5IP+Nyp8vgUcmzrev
jK7TZSffpa5lVINvT90n1PnIMdE1oM5H1jBeK/FZQInoelZnEAsZr5m4Ti+c
+0b55KLRvVCdxRRBuiQ+W/k+da2kGv/66DpdNtNMtpvYtitH193q65aLrovV
W/4mdW2oGv+nPHdSrrI4dX9StcaF0XWubPiE6NitGH5m9DmjerYLUteVqnNr
Rp8t6lygTvR5ovr/NaLPH1WnnBFdgyhnnpe69lHt9m3qmlS9iB1w08RnTBWi
+wPqUVeK7huon3xd7utkb/8HixnqXA==
          "]], Polygon3DBox[CompressedData["
1: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
Cr4bvhUeG17QGAtfAffAc8Dnw2fCf3ouFxsL/hjeGF6Gdi98Ozwu5z/J+KTw
T/C2jC1Luw++Ax6P8SW8x/BweEx4Ee8pfB08KrwAfB18OVzhheAb4CvhXvDC
8I3wVfAo8OI+Y2MrPAZ8F/9/TPgjeCPHuFnbdfFE/ad+Nd4sURJP7uv03GDG
j4InNM74ftrVxlj4K+NJ94xfb7NWXDNf8N7f2qwt15jaRg+2PLx6E2/Wr8Tb
GcON5WruNdpoUrW4mnypNppcra5HWqKNhtY7+Yz/aRLzfPZq7NUZX6+J9vaZ
/kW/d5NnbR56UO1F68v9OJ7P+K7P0+cCHwe/4/11nfTKHC5tYpBz+85O3xtv
D2HsWPht+DLjFucfDb8JX+J3g4+C32iS+/x/R8KvG7/giXplTTVtYq5r7QTG
3/N5um57xSPoBcxR5io91JJtPIXeSk2u91GjqFWWq4m3+nX10LI18XjTEr2j
Hjjb512S31aumb9bwz/Bq9bE421L9NYqNfF6mxI9NVuN3lkO/gpetyYe71QS
7xer0Wvrleihw+BX4PNK/M3h8KvGP+M6fAT8mvHaPASPVuItFm+i9fQUc7bx
yHoNPf4cbTyJ3t8cNAM8R5PcpGfWq6n51H7GsJ42Oc7YZo6YsY3HMXfo4edq
41H19nqeBeAlmnghPcmCbWoIehU91txtPKPeyxwxUxsPY+5YtEZ/rkv/257k
XHOPOchcbA4d2Mbjm1sn5ztf08Xoe7v1c1UXk4Z3c8a5+mSTufQH7z+jzTPb
CC6MX9YmJgyxFsP4tm1qGn318vBC8FLG6JIax15tPJC1D8+ZqMYH+N6xuN4t
bWLevnonXlsBXgP+gXO+5rWH6d/dJp6roRZuo3HVVsuXxApjhl7QGG+sN8ZP
WRPjjfVqmKn10vDM8NzwS7x3gRIf0o+x/jV9vYk50deco0e2ucfOXefgdvAu
Team93zvNnPUZ6HmW7GN5lMLHtQTv7OZy67G44zSJgfe0cUH9apr1LVqThun
jQYy15nzxmqjqcyF5ky1RN/u/Wqu/vDAJlpMzTJJG42iljHmT92mhmQuMAdP
1cZDm5vVPFO2qWmphczZ07Tx+OZyNdnEbTSYWs0YPl4bzWRsV9NN0CbHqPXM
QX3a5Hxzkx5xtO7z6h1vMWe20SiDazSK8fGJJtpFzzJLG8+ml1EjTtpGI6kd
9XCTt9FEersb4EudG/CGPv82WmVAEy+r57H2pOfSC10Jnw6fB69U48mPaFPT
0qvr39Xjq5fo3/lq/N5qJfpg7Rq9Z5FS/WXNz9qfnn3cmpqitUVj9pg1OWxw
N1+cX843549rxvlvTdDaoDWnCWtqftb+rDmNX1MTszZ4WJNamTUla5tDm9Sa
rHla+7RG1Lsmp27WzXdrLXqaa9t4ZL3O7CXrwfWh17bGZq1Pz2ftzfW0Tzef
nd8nML5zm5rINHo7eIc2Nbopamou1hYP6dafNSi9gznd3G4NzVqkNTdra9Y0
dmtTI7HWYU3L2qo1FWtd1tis1VqTsfZmzjP36TnGrvF457bxaHo/PeB5bTyc
3lCPeE4bj6R3XL/Ey5sjzBXWdKwd62Gt9ehBT23jmfSmemhrayc38dZ62FPa
5DBzmZ7YWpgeVa+sJ7Z2qEfVK+txj2/jSfW+emRrtXpWvbM1Ib2ec8y5Zs3J
Wqie2FqUNSVrZ3poa03WKK216pGtXe5S4n30QOvVeOSz4YuaeOftSryNOdXc
qge8GL66iTc8Bt6+TY1yshoPeTU8vIm31ENe0sYz6y2tuVr71cNbi9Wjn9bG
c+rd9ynRfmrATWs88zVtakZ66aPhIV18ngQ+Dt6xTc13IHw8vFObGu9UNdfw
WnuX+LMdavTsESX6d6ea+tZRJXpz4xp9vGeJHt6kRp/uVeL3tq/R14eX6Nct
a/T5ASV+yBxm7jmsJLeZ48xte5Tkvv3hp+HTS/T5AfAz8Bkl+vpA+Fn4zBI9
fRD8HDyspP62FzwSPrFEDx8KvwyfW1Iv/+8ZwjuX+NW94cfhk0r0+LY1+vzg
Er+7R0399vgSf7FbTf39uBK9vh/8FHxaiX8wp5rLTy3JtTvW6P8jS/T7nvBj
8Akl/uSLLn6o0adlbJsaPX+QAoHx6Uu83iBQ42PNytqjNTRrWdaoZuv0kLWr
kZ0+Uj+pF43P6uM+Xb7S46rfe3fx+u4uv5nv1C960L5dPLfWqL7v3+Uj9Zee
tF+X/9T76jn1mXpLPfVfza6NXlPfWXOzFqo/sBb3QKeX1Efqt0NKvJD33Huv
x9XrPt+kdngW44+3ecY+a2tKN8EjmtSatq7xeweW1AOOLqnFOmedu9Yo72pT
g7R2qafX26vXrEXqKfXy1lT1mif7GdvMCeeGNdgR8ANNarNfdvFxSBdvj6G9
Rf9S3tef53VdSY3uvSZa/9Ka3K4mUBs4B927cU45Ny+jzdJEA6gFLq7RCmoE
tcJ6tFHpT8Rrt3PdS2q0hZpCbaHmdm/BOaUW34LXJoOngR8p8SyPtllDx3b3
c0R3P7y/Z9doUzWF2mKVnsznR9p8n9Nq/rcaW629ek/W38g2fsp4dHYX/41n
q/Xkfz3Wxl8ZU87q4qWxZliNVlHTqG2urNGGamy1tjFkWBdPjS1ew2v5P/Vu
fiY/mzHCe39uzdx0jqrN/Ewju/mi9zu/Rsuo0dRqw2u8lR5Tr+nzcr5ZY/m2
xrM90Okj9eFN6tWmq2GaP2q0nhpNraYHfLjNPdMb6nHu7+aP3uesGq2mRlOr
XV6zVlwzehs90n1tYpbe6aIabaiH0EtcWLNWXDN6jVNrvI6eVe96co231CPr
lU+p8bJ6Tr2nnmOcJl5eL+IasXamp3PtGJOtVamxjNXGdGsdekJjvTHcWoQx
39huTrA2Ysw3VxgDrV0Y442NxjRrL8YwY517Eu7VWcP5qouh1mpcs8bWM2q0
t5pb7W1Mv6Nbv8Z6Y/qd3fpz/RtDr+zyn7HVnHRVl09d7zfV1BL00HrpG2q8
kR5Pr3djTW1BT623tsZkrcma1YAaD+V8HLPEWxlPru7yq+v/9JpYaczUG1xf
4x31lHpLc5a1JXOoucycZW3IHGAuM0dYazJHmjuurvG+el69rxrXWqOeXu1r
Driw0x/mhqtqYrsxXi98Zo030MPoZcxpJ3f6yVy3ak/WijHAWLByT/KTc9a5
u2JP5p5z1rmrx7e2a41h3U7/qMfUa+oZc+TwLv4aH82xN3bx29x7Uk2uMedY
mzkR/rrJnoXry/hq/NaP6D9W6slacc259oxxo5or2sQ+c/BFnZ4yP5gvLu70
kvFfv2pt6lPaNzU1lce7/GH8PaemlvWx86+mxuHekfrU2od6VT2tvld/3kxb
sUlNytrUNTW1A2sU1iqseajXD2mibz+tiaXGVHOFnsXapnpcL3MdbeEmNQVr
C3ogvc9WnTdyj8C9XPfw3Dtwj8C9W/eQ3Dt4o+be+wzUxq5h17Lf6cuaPQ3n
snPa+tG1NbULax7WPtQP1uP09/ph9zisx1mfU0+8VePN1JhqTfc83Mt1j8W9
EPco/K2D9Tv3LryG15qhxGt/Bj/UJMeaa/WYesNDO+95W02tz5qdtTtrVu7l
qcetZT1Q423UyGrlR+C9m3ggvdBjNV5FD6OX0SPqd/Qz6nlrXu716Rmthd1f
o7XVwGrhR2vO9T16JeuRrlXXrPXJh2u8lppYbXw7vEGTGqW1yo/hW5p4Or3d
rTW1R2t21u4+qZnLzmm1yUM12lrNrfb+qMYLqtHV6q/VeBM9i97lw5rYYozR
G1iz06/oR/Q/D9Zodz2gXtA9MOtnSzSpp75Z4w30VHor93z97Y57ju4FX1FT
u7ImZm3MGoza4K82tZn31CBNPJ3ezj0197oXb7LX5m8S/G2Ce1Z9OPf9mrXn
GtTrfNA9bz2MXmbDbj7t3tUKVuiJNjHHmev0w84F54R+2T1n76X3VH+sZlFv
fN1Gy1ij1E/qD/VX+i39on5Q/+WeinsrW8KT1vwmxd+muIc3Xs1vUPwtintw
48AX1Hx/axzWOtzTdq/fPUf3uv2Ni791cQ9vjJrfCPhbgUHwBM79nmgLY4yx
xj0L9y7cs5jcudKtD9ectXD3xP0thHu+7pW/U+Ol9cx6Z/eA/e2Oe87uDbsn
5N7QFvDENXug/tbB+q97o+7J+9sI68Xu1bun7G8b3NN2r9kanvlu4pLanntE
+ofNmtQB367Ramo2vey7NV5ej6/X/z9et7qN
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt13e4FcUZB+DL2QNKVxGJBQ2CEqqhKwiIVJEi3dCMVCNVKRJpKlUpGmlq
KCaAmlgTuiAautKMVFFAkWLHIBZ63u9Z/vg9M987s/fcO2d2dm+JbgNa98/k
5OS8L7nlrSQn5zJQKVdOzm3qL/XfYHm1ZVkVdkh/DvtanSNXatayf7HLtZVZ
TfaV/t/Y/9SF5Jr4HPYqy2hLsnJsn/5L7FTMkZLsI/YCO6ouEtez1eyfLJf2
RlaWfaz/MjutvlZKsR3sHyxHW4KV0d2rP5d9o85IUbaOvch+UBeQq9km9ibL
py3HqrIv9Oexb9VZuYqtZ6+wM+rr5Ca2kz3Pjqgvl4LsHTabfaU+ry4ia9hr
LNGW4uXZJ/rPscPqwvH7sFWsICsgV2atq/px7QL1yVh3KW7eFl6FD4vfib3J
uppzCxsYfyN7hXVg5dkD8VlsHmvByrJebCabEXPVFWVA/N3ql81rZ15l9kis
N3uDdYnvO/aLFDNWzdhYbQWJTTXXvJfMa2+8iFwhvzFW3dg4bSUZGt+9ea+b
19l4OdabzWJzWXNWmt3HnmazWGP2O/ZH9gx7jjViZdj97C/sedaE3czuZRPZ
06wOK8VaxVqyJ1kN9ns2hC1kC2IN1TdJBzZBPT7WS11S7mGPqSe69lbXFpZC
cpWxqsbGaIvGdyZX69dg47X5Y19JUf0q7AltCfVv5Xr9OmxyfIb6RrlBvy6b
oi0s5fQ7+dxusbWNV2Uj2etsCevJqrPRsYfZMtYrfk78fClurLaxSdr56h/N
uSL2r3mb+d/ZCfVlcS+xD1hxdl3ENbern4p1iTWM31v/DjY1/g6pp/+Qa//s
2jKxL1h51pl1Z0nsl9gfrAvrwbKxL2K/sa6sZ5xDbKH8FPeaXM+2Gi9i3i3a
+1gvlifWN/aUXGOsZnzP2tfVWf2bzKtg3qdxXvAm2mHsEZmuvjauk2v1axl7
MvawjIozz5ylru1h/FY2JpPui9gfGQflDP65ft6IeSuM/8A+U18ql8i9rluZ
pHviYDa9T+J+WS6VWGtzOro2r/rtJN0TB7LpXoo9tSJJ7/n92XTfxP75UY67
7ga52bUbjJ9g38c6xXkQa23+qiS9Hz/Lpvdd3H+LY71YTXPqu/aE/jtJej9+
nk33a+zb1Um6Zw+xq+Leln/H9xTnjGtrufZr/XeTdM0PZy+uo+yXB2OPmTfN
vFZx/ssxdbH4vdl7xk+yn+NvkIpsO8vGd6K9mzWV4epL5QbWUt3evJ/1C7Cb
te1ZV3ZePx8rpW3LOrMzF3/eNdpa7HbZqs4b9xdro+5k3ln9/LGnte1YF3ZO
/xJ2vbYFa8d+0s/Dimubs7bspH7Cimkbs5bsuH4m1k3biLVg38cDNtZX24A1
U36nnyvOCW1D1px9q5+bXadtxtqwH/V/sla/qEvLLWwbK2RemUy6TrFee9SL
4ntmVePvNe8b/aWshPbOWFN2Sn8ba67tz4ayquqt0oz1Y0NYFfX70pD1YgNY
BfVmacr6sEGsknqL3M36ssGssnqTNGA9WX9WXr1R6rMerB8rp94gd7LurC8r
q/5QWrKBbBirrl6XpGfhV9n07IkzaLu0YAPinjavmnpNkp5xx7LpuRrn69ok
PVu/zKbnapyvH0gj1tu1A11bUb0kzjRWj93FftXfx7rFmc4ms6bqj6UrG80m
sIbqXdKRDWdjWL0kPQ8OqnNLHlnh8/+TpOfo0Wx6JsfZvCzOe1Y/vkvXntZ/
L0nPpCPZ9PyNc3intGNDzRttXm31f6U1G8RGsJrqj6QNG8xGslrqT6VHPHfZ
VNZMvVe6sFHxfGMN1HukMxvJxrH66t3SiY1gY9md6h3Slg1ho9jt6k+ke7wD
sCnsbvUs+SLehSQ/W2n8V3Yh9rJUZ7vZL+x8nAVSje1iz8bvrb5w8d10CZsW
ZwzLFWvKlsbzPj5bfS69zXIWx9mq84p2Lz/IppjzjOxTn4lnkSwy3sq8l7V7
+AE22cB0OaBO4hxny4zfY95L2t1sP5tkzl1sDtvKdrExsafYLLaRbWMjWRM2
m21hO9kTsW/jPY7tZJ+wJ2PPs4VsF/uUPcUas+fYJradjYp7jc1j2+O+Z+Pi
PmUz2YY459iI2D9sAlvGVrN+rB57JvYX28QeifuFTWar2Do2mN3Bno4znm1k
Q+MeYlPimcHWs0FxT7KpbDXbwIbEPc6ms3VsM3s07nE2ja1la+LdJN6L5DH2
lnq5eb3j3mAT2XL2LuvPbmPj2BK2ivWJ5w4bH+cbe4f1TdLn9Fi2mC2SxeoG
MoOtV28xb7h5M+VQ7EfJx942/tckfc+I941X1d/EOefauXFest3GxsYZyV5k
H7K9bDw7LMPZbLaAdYs9L4/Gz2Xz2f3qM3IJq8HqsoPxjGWDtNPZHNZJfURG
sDnxvsG6q89KgUz6HIvn2RC/x2mWh1VX1zFvv/55VkhbhzVkR/QvsMLauqwR
OxrnKHtBu5KtZY/H81jOqStI+TijfcYpltu8aura5h3QP8cKamuzBuyw/mes
n3Yqm8naxjMm3jPZDraPTUzS/zV6ZtL36XivPqk+wPuwyerp5rVWfymT2Gvx
PbKHk/QdfXAm/R8l/lc5rT7Gn2Kvxndu3kNJ+mwsyzqyP8RZqS4opVkH9X3m
Xcike/LZzMW9IgVyp+ucP5P+/bEO67PpupzNlb5bxTvWu9n0fbKxeQ+o/yTf
Xvx/oX0mfb+M98zj6s9d+3CcW+rZPrej+qg8weaz19iDSfoO912u9L0x3h9X
uvYg62veFPUM89qo1yfpO/fX8Q6kX1r+D29i0zg=
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvRUEYgOFjX68loiUaoqAUBaUoqEQUdERBQSIKSoXQ6fgFtEToJXT2
fd8iItbCvoZnEsV7n8k9kzvf5J6i1u6Grrgoigb1qrB+1IWm46Moh3Ms5CrL
ecJq3rOe32xhZkIUxdRpXcp+VnKYtRxjEyfYzln2coEPvOK7NvWsOy0aaItL
3OYyd7jC3TAT97jGfa5zQwfhd3jILR5xm8fc4Ql3eco9nnHSPa75oXO9hDtq
xGwbHOA8ezjDNo6zkaOs4RAr2McSFqvDOo3N/HRGHW9ZxSOWhXuxINzZvku+
KVtPYa/yzZjFPMaYy8ywhxmMMZ0ZTAvnMZXJTFKKdQKTw38cvuOvEvUTnulL
xoimfNz8vw9/yG9K8w==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1002, 473, 689, 1107, 912, 691, 1108, 913, 692, 1109, 
       914, 693, 1110, 915, 694, 1111, 916, 695, 1112, 1008, 1209, 696, 1113, 
       917, 697, 1114, 918, 698, 1115, 919, 699, 1116, 920, 700, 1117, 921, 
       701, 1118, 922, 702, 1310, 1003, 923, 1004}], 
      Line3DBox[{704, 1009, 1210, 703, 488, 705, 1119, 924, 706, 1120, 925, 
       707, 1121, 926, 708, 1122, 927, 709, 1123, 1010, 1211, 710, 1011, 1212,
        711, 1124, 928, 712, 1125, 929, 713, 1126, 930, 714, 1127, 931, 715, 
       1128, 932, 716, 1129, 933, 717}], 
      Line3DBox[{719, 1012, 1213, 718, 1013, 1214, 720, 504, 721, 1130, 934, 
       722, 1131, 935, 723, 1132, 936, 724, 1133, 1014, 1215, 725, 1015, 1216,
        726, 1016, 1217, 727, 1134, 937, 728, 1135, 938, 729, 1136, 939, 730, 
       1137, 940, 731, 1138, 941, 732}], 
      Line3DBox[{734, 1017, 1218, 733, 1018, 1219, 735, 1019, 1220, 736, 520, 
       737, 1139, 942, 738, 1140, 943, 739, 1141, 1020, 1221, 740, 1021, 1222,
        741, 1022, 1223, 742, 1023, 1224, 743, 1142, 944, 744, 1143, 945, 745,
        1144, 946, 746, 1145, 947, 747}], 
      Line3DBox[{749, 1024, 1225, 748, 1025, 1226, 750, 1026, 1227, 751, 1027,
        1228, 752, 536, 753, 1146, 948, 754, 1147, 1028, 1229, 755, 1029, 
       1230, 756, 1030, 1231, 757, 1031, 1232, 758, 1032, 1233, 759, 1148, 
       949, 760, 1149, 950, 761, 1150, 951, 762}], 
      Line3DBox[{764, 1033, 1234, 763, 1034, 1235, 765, 1035, 1236, 766, 1036,
        1237, 767, 1037, 1238, 768, 552, 769, 1151, 1038, 1239, 770, 1039, 
       1240, 771, 1040, 1241, 772, 1041, 1242, 773, 1042, 1243, 774, 1043, 
       1244, 775, 560, 776, 1152, 952, 777}], 
      Line3DBox[{781, 1153, 953, 779, 1154, 954, 783, 1155, 955, 785, 1156, 
       956, 787, 1157, 957, 789, 1158, 958, 791, 1159, 569, 793, 1160, 959, 
       795, 1161, 960, 797, 1162, 961, 799, 1163, 962, 801, 1164, 963, 803, 
       1165, 964, 805, 1166, 965, 807}], 
      Line3DBox[{806, 1258, 1056, 804, 1257, 1055, 802, 1256, 1054, 800, 1255,
        1053, 798, 1254, 1052, 796, 1253, 1051, 794, 1252, 1050, 792, 1251, 
       568, 790, 1250, 1049, 788, 1249, 1048, 786, 1248, 1047, 784, 1247, 
       1046, 782, 1246, 1045, 778, 1245, 1044, 780}], 
      Line3DBox[{809, 1057, 1259, 808, 1167, 966, 810, 1168, 967, 811, 1169, 
       968, 812, 1170, 969, 813, 1171, 970, 814, 1172, 1058, 1260, 815, 585, 
       816, 1173, 971, 817, 1174, 972, 818, 1175, 973, 819, 1176, 974, 820, 
       1177, 975, 821, 1178, 976, 822}], 
      Line3DBox[{824, 1059, 1261, 823, 1060, 1262, 825, 1179, 977, 826, 1180, 
       978, 827, 1181, 979, 828, 1182, 980, 829, 1183, 1061, 1263, 830, 1062, 
       1264, 831, 601, 832, 1184, 981, 833, 1185, 982, 834, 1186, 983, 835, 
       1187, 984, 836, 1188, 985, 837}], 
      Line3DBox[{839, 1063, 1265, 838, 1064, 1266, 840, 1065, 1267, 841, 1189,
        986, 842, 1190, 987, 843, 1191, 988, 844, 1192, 1066, 1268, 845, 1067,
        1269, 846, 1068, 1270, 847, 617, 848, 1193, 989, 849, 1194, 990, 850, 
       1195, 991, 851, 1196, 992, 852}], 
      Line3DBox[{854, 1069, 1271, 853, 1070, 1272, 855, 1071, 1273, 856, 625, 
       857, 1197, 993, 858, 1198, 994, 859, 1199, 1072, 1274, 860, 1073, 1275,
        861, 1074, 1276, 862, 1075, 1277, 863, 633, 864, 1200, 995, 865, 1201,
        996, 866, 1202, 997, 867}], 
      Line3DBox[{869, 1076, 1278, 868, 1077, 1279, 870, 1078, 1280, 871, 1079,
        1281, 872, 641, 873, 1203, 998, 874, 1204, 1080, 1282, 875, 1081, 
       1283, 876, 1082, 1284, 877, 1083, 1285, 878, 1084, 1286, 879, 649, 880,
        1205, 999, 881, 1206, 1000, 882}], 
      Line3DBox[{884, 1085, 1287, 883, 1086, 1288, 885, 1087, 1289, 886, 1088,
        1290, 887, 1089, 1291, 888, 657, 889, 1207, 1090, 1292, 890, 1091, 
       1293, 891, 1092, 1294, 892, 1093, 1295, 893, 1094, 1296, 894, 1095, 
       1297, 895, 665, 896, 1208, 1001, 897}], 
      Line3DBox[{911, 1007, 685, 910, 1309, 1106, 909, 1308, 1105, 908, 1307, 
       1104, 907, 1306, 1103, 906, 1305, 1102, 905, 1304, 1101, 904, 1303, 
       673, 903, 1302, 1100, 902, 1301, 1099, 901, 1300, 1098, 900, 1299, 
       1097, 899, 1298, 1096, 898, 684, 1005, 1006}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1107, 252, 488, 280, 1214, 503, 295, 1219, 518, 
       310, 1226, 533, 325, 1235, 548, 340, 1246, 563, 1154, 355, 578, 1167, 
       370, 1262, 593, 385, 1266, 608, 400, 1272, 623, 415, 1279, 638, 430, 
       1288, 653, 445, 1298, 668, 460}], 
      Line3DBox[{253, 475, 1108, 254, 489, 1119, 281, 504, 296, 1220, 519, 
       311, 1227, 534, 326, 1236, 549, 341, 1247, 564, 1155, 356, 579, 1168, 
       371, 594, 1179, 386, 1267, 609, 401, 1273, 624, 416, 1280, 639, 431, 
       1289, 654, 446, 1299, 669, 461}], 
      Line3DBox[{255, 476, 1109, 256, 490, 1120, 282, 505, 1130, 297, 520, 
       312, 1228, 535, 327, 1237, 550, 342, 1248, 565, 1156, 357, 580, 1169, 
       372, 595, 1180, 387, 610, 1189, 402, 625, 417, 1281, 640, 432, 1290, 
       655, 447, 1300, 670, 462}], 
      Line3DBox[{257, 477, 1110, 258, 491, 1121, 283, 506, 1131, 298, 521, 
       1139, 313, 536, 328, 1238, 551, 343, 1249, 566, 1157, 358, 581, 1170, 
       373, 596, 1181, 388, 611, 1190, 403, 626, 1197, 418, 641, 433, 1291, 
       656, 448, 1301, 671, 463}], 
      Line3DBox[{259, 478, 1111, 260, 492, 1122, 284, 507, 1132, 299, 522, 
       1140, 314, 537, 1146, 329, 552, 344, 1250, 567, 1158, 359, 582, 1171, 
       374, 597, 1182, 389, 612, 1191, 404, 627, 1198, 419, 642, 1203, 434, 
       657, 449, 1302, 672, 464}], 
      Line3DBox[{261, 479, 1112, 263, 493, 1123, 285, 508, 1133, 300, 523, 
       1141, 315, 538, 1147, 330, 553, 1151, 345, 568, 1159, 360, 583, 1172, 
       375, 598, 1183, 390, 613, 1192, 405, 628, 1199, 420, 643, 1204, 435, 
       658, 1207, 450, 673, 465}], 
      Line3DBox[{265, 481, 1113, 266, 1212, 495, 287, 1216, 510, 302, 1222, 
       525, 317, 1230, 540, 332, 1240, 555, 347, 1252, 570, 1160, 362, 585, 
       377, 1264, 600, 392, 1269, 615, 407, 1275, 630, 422, 1283, 645, 437, 
       1293, 660, 452, 1304, 675, 467}], 
      Line3DBox[{267, 482, 1114, 268, 496, 1124, 288, 1217, 511, 303, 1223, 
       526, 318, 1231, 541, 333, 1241, 556, 348, 1253, 571, 1161, 363, 586, 
       1173, 378, 601, 393, 1270, 616, 408, 1276, 631, 423, 1284, 646, 438, 
       1294, 661, 453, 1305, 676, 468}], 
      Line3DBox[{269, 483, 1115, 270, 497, 1125, 289, 512, 1134, 304, 1224, 
       527, 319, 1232, 542, 334, 1242, 557, 349, 1254, 572, 1162, 364, 587, 
       1174, 379, 602, 1184, 394, 617, 409, 1277, 632, 424, 1285, 647, 439, 
       1295, 662, 454, 1306, 677, 469}], 
      Line3DBox[{271, 484, 1116, 272, 498, 1126, 290, 513, 1135, 305, 528, 
       1142, 320, 1233, 543, 335, 1243, 558, 350, 1255, 573, 1163, 365, 588, 
       1175, 380, 603, 1185, 395, 618, 1193, 410, 633, 425, 1286, 648, 440, 
       1296, 663, 455, 1307, 678, 470}], 
      Line3DBox[{273, 485, 1117, 274, 499, 1127, 291, 514, 1136, 306, 529, 
       1143, 321, 544, 1148, 336, 1244, 559, 351, 1256, 574, 1164, 366, 589, 
       1176, 381, 604, 1186, 396, 619, 1194, 411, 634, 1200, 426, 649, 441, 
       1297, 664, 456, 1308, 679, 471}], 
      Line3DBox[{275, 486, 1118, 276, 500, 1128, 292, 515, 1137, 307, 530, 
       1144, 322, 545, 1149, 337, 560, 352, 1257, 575, 1165, 367, 590, 1177, 
       382, 605, 1187, 397, 620, 1195, 412, 635, 1201, 427, 650, 1205, 442, 
       665, 457, 1309, 680, 472}], 
      Line3DBox[{277, 682, 1310, 683, 278, 501, 1129, 293, 516, 1138, 308, 
       531, 1145, 323, 546, 1150, 338, 561, 1152, 353, 1258, 576, 1166, 368, 
       591, 1178, 383, 606, 1188, 398, 621, 1196, 413, 636, 1202, 428, 651, 
       1206, 443, 666, 1208, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 444, 652, 1287, 429, 637, 1278, 414, 622, 
       1271, 399, 607, 1265, 384, 592, 1261, 369, 577, 1259, 354, 1153, 562, 
       1245, 339, 547, 1234, 324, 532, 1225, 309, 517, 1218, 294, 502, 1213, 
       279, 487, 1210, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1303, 451, 659, 1292, 436, 644, 1282, 421, 629, 
       1274, 406, 614, 1268, 391, 599, 1263, 376, 584, 1260, 361, 569, 1251, 
       346, 554, 1239, 331, 539, 1229, 316, 524, 1221, 301, 509, 1215, 286, 
       494, 1211, 264, 480, 1209, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
+Pd+3HttrxIl4z6R58LKzjH/DwbbV6Q=
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"Active\"", TraditionalForm], 
    FormBox["\"Dormant\"", TraditionalForm], 
    FormBox["\"dP/dt\"", TraditionalForm]},
  BaseStyle->{FontSize -> 18},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{700.8544660385191, 470.},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 100}, {0, 100}, {-0.002149846428571429, 2.147849846428572}},
  
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.6246969127433604, -3.2255005686660296`, 0.8098764404179404},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.657836931096026*^9, {3.657836979936071*^9, 3.657836982052703*^9}, {
   3.65783705145545*^9, 3.6578370700966177`*^9}, 3.657837108109602*^9, 
   3.657837153621821*^9, 3.6578373383468027`*^9, 3.657837480017371*^9, 
   3.657838081355097*^9, 3.657838177636868*^9, {3.6578387954810762`*^9, 
   3.657838827251614*^9}, 3.657838873907366*^9, {3.657838920523467*^9, 
   3.6578389291497393`*^9}, 3.657838963661721*^9, {3.657839514832327*^9, 
   3.657839580892748*^9}, 3.657846829828395*^9, {3.657907253708971*^9, 
   3.657907262359009*^9}, 3.6579077140107517`*^9, 3.65790775890455*^9, 
   3.657908129374628*^9, {3.65790816281052*^9, 3.657908180046248*^9}, {
   3.657908577942292*^9, 3.657908587670827*^9}, 3.657909897730412*^9, {
   3.657910647600243*^9, 3.657910664359379*^9}, 3.6579146924777403`*^9, {
   3.6579166862097187`*^9, 3.6579167003243313`*^9}, {3.657916766499837*^9, 
   3.6579167918307858`*^9}, 3.657916833421715*^9, {3.6579168641789618`*^9, 
   3.657916889791147*^9}, 3.657917049553526*^9, 3.657917141746561*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"dAdt", "/.", "Parms"}], "/.", 
      RowBox[{"D", "\[Rule]", "0"}]}], "]"}], "\[Equal]", "0"}], ",", "A"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.657907764035203*^9, 3.657907809785692*^9}, {
  3.657908138861299*^9, 3.657908148779326*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"A", "\[Rule]", 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"A", "\[Rule]", "60.3030303030303`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6579077658986397`*^9, 3.657907810121705*^9}, {
  3.657908136754201*^9, 3.657908149376321*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"dPdt", "\[Equal]", "0"}], ",", "A"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"dPdt", "\[Equal]", "0"}], ",", "D"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6579172616276083`*^9, 3.657917312034696*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"A", "\[Rule]", 
    FractionBox[
     RowBox[{"d", "-", 
      RowBox[{"D", " ", "f", " ", 
       SubscriptBox["e", "d"]}]}], 
     RowBox[{"f", " ", 
      SubscriptBox["e", "a"]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6579172995086823`*^9, 3.6579173125534887`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"D", "\[Rule]", 
    FractionBox[
     RowBox[{"d", "-", 
      RowBox[{"A", " ", "f", " ", 
       SubscriptBox["e", "a"]}]}], 
     RowBox[{"f", " ", 
      SubscriptBox["e", "d"]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6579172995086823`*^9, 3.657917312563538*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"dAdt", "\[Equal]", "0"}], ",", "P"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"dAdt", "\[Equal]", "0"}], ",", "D"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.657917315519648*^9, 3.6579173525557404`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"P", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["A", "2"]}], " ", 
       SubsuperscriptBox["\[Gamma]", "g", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"r", "+", 
         SubscriptBox["\[Delta]", "max"]}], ")"}]}], "+", 
      RowBox[{
       SubscriptBox["\[Gamma]", "m"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A", " ", "r"}], "+", 
         RowBox[{"D", " ", "\[Alpha]"}], "-", 
         RowBox[{"A", " ", 
          RowBox[{"(", 
           RowBox[{"A", "+", "D"}], ")"}], " ", 
          SubscriptBox["\[Gamma]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"r", "+", 
            SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{"A", " ", 
       SubscriptBox["\[Gamma]", "g"], " ", 
       RowBox[{"(", 
        RowBox[{"r", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "A"}], "+", "D"}], ")"}], " ", 
          SubscriptBox["\[Gamma]", "m"], " ", 
          RowBox[{"(", 
           RowBox[{"r", "+", 
            SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]}], 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "g"], "+", 
        SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"f", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Gamma]", "g"], "+", 
           SubscriptBox["\[Gamma]", "m"], "+", 
           SubscriptBox["\[Gamma]", "p"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"r", "+", 
           SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.657917327523458*^9, 3.657917353423983*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"D", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"A", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"f", " ", "P"}], "-", "r", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"A", "+", "P"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["\[Gamma]", "g"], "+", 
               SubscriptBox["\[Gamma]", "m"]}], ")"}]}], "+", 
            RowBox[{"P", " ", 
             SubscriptBox["\[Gamma]", "p"]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"r", "+", 
            SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}], 
      RowBox[{
       SubscriptBox["\[Gamma]", "m"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "\[Alpha]"}], "+", 
         RowBox[{"A", " ", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"r", "+", 
            SubscriptBox["\[Delta]", "max"]}], ")"}]}]}], ")"}]}]]}]}], "}"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.657917327523458*^9, 3.657917353478101*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"dDdt", "\[Equal]", "0"}], ",", "A"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"dDdt", "\[Equal]", "0"}], ",", "P"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.657917345770403*^9, 3.657917377841435*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"A", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Gamma]", "g"], "+", 
           SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"P", " ", 
            SubscriptBox["\[Gamma]", "g"]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"D", "+", "P"}], ")"}], " ", 
            SubscriptBox["\[Gamma]", "m"]}], "+", 
           RowBox[{"P", " ", 
            SubscriptBox["\[Gamma]", "p"]}]}], ")"}], " ", 
         SubscriptBox["\[Delta]", "max"]}], "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["\[Gamma]", "g"], "+", 
             SubscriptBox["\[Gamma]", "m"]}], ")"}], "2"], " ", 
          SubscriptBox["\[Delta]", "max"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", "D", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"f", " ", "P"}], "+", "\[Alpha]"}], ")"}], " ", 
             SubscriptBox["\[Gamma]", "m"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"P", " ", 
                 SubscriptBox["\[Gamma]", "g"]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"D", "+", "P"}], ")"}], " ", 
                 SubscriptBox["\[Gamma]", "m"]}], "+", 
                RowBox[{"P", " ", 
                 SubscriptBox["\[Gamma]", "p"]}]}], ")"}], "2"], " ", 
             SubscriptBox["\[Delta]", "max"]}]}], ")"}]}]]}], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Gamma]", "g"], "+", 
           SubscriptBox["\[Gamma]", "m"]}], ")"}], "2"], " ", 
        SubscriptBox["\[Delta]", "max"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"A", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Gamma]", "g"], "+", 
           SubscriptBox["\[Gamma]", "m"]}], ")"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"P", " ", 
           SubscriptBox["\[Gamma]", "g"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"D", "+", "P"}], ")"}], " ", 
           SubscriptBox["\[Gamma]", "m"]}], "+", 
          RowBox[{"P", " ", 
           SubscriptBox["\[Gamma]", "p"]}]}], ")"}], " ", 
        SubscriptBox["\[Delta]", "max"]}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Gamma]", "g"], "+", 
            SubscriptBox["\[Gamma]", "m"]}], ")"}], "2"], " ", 
         SubscriptBox["\[Delta]", "max"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "D", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"f", " ", "P"}], "+", "\[Alpha]"}], ")"}], " ", 
            SubscriptBox["\[Gamma]", "m"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"P", " ", 
                SubscriptBox["\[Gamma]", "g"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"D", "+", "P"}], ")"}], " ", 
                SubscriptBox["\[Gamma]", "m"]}], "+", 
               RowBox[{"P", " ", 
                SubscriptBox["\[Gamma]", "p"]}]}], ")"}], "2"], " ", 
            SubscriptBox["\[Delta]", "max"]}]}], ")"}]}]]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[Gamma]", "g"], "+", 
          SubscriptBox["\[Gamma]", "m"]}], ")"}], "2"], " ", 
       SubscriptBox["\[Delta]", "max"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.657917384292474*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"P", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "D"}], " ", "\[Alpha]", " ", 
       SubscriptBox["\[Gamma]", "m"]}], "+", 
      RowBox[{"A", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"A", " ", 
          SubscriptBox["\[Gamma]", "g"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"A", "+", "D"}], ")"}], " ", 
          SubscriptBox["\[Gamma]", "m"]}]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}], 
     RowBox[{
      RowBox[{"D", " ", "f", " ", 
       SubscriptBox["\[Gamma]", "m"]}], "-", 
      RowBox[{"A", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[Gamma]", "g"], "+", 
         SubscriptBox["\[Gamma]", "m"], "+", 
         SubscriptBox["\[Gamma]", "p"]}], ")"}], " ", 
       SubscriptBox["\[Delta]", "max"]}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.657917384562437*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{"\[Alpha]", "*", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"r", "-", "d"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"r", "*", "\[Alpha]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "-", "d"}], ")"}], "*", "\[Delta]"}]}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.657918619204178*^9, 3.657918671447166*^9}, {
  3.657918853482037*^9, 3.65791890241191*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"d", "-", "r"}], ")"}], " ", "\[Alpha]"}], 
  RowBox[{
   RowBox[{
    RowBox[{"-", "r"}], " ", "\[Alpha]"}], "+", 
   RowBox[{"d", " ", "\[Delta]"}], "-", 
   RowBox[{"r", " ", "\[Delta]"}]}]]], "Output",
 CellChangeTimes->{3.6579189035217524`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6579226018406677`*^9, 3.657922602359922*^9}}]
}, Closed]]
},
WindowSize->{1259, 717},
WindowMargins->{{Automatic, 8}, {Automatic, 0}},
FrontEndVersion->"10.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 29, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 185, 2, 64, "Section"],
Cell[CellGroupData[{
Cell[790, 28, 1140, 32, 80, "Input"],
Cell[1933, 62, 300, 9, 46, "Output"],
Cell[2236, 73, 379, 11, 48, "Output"],
Cell[2618, 86, 323, 10, 48, "Output"],
Cell[2944, 98, 261, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3242, 109, 621, 16, 28, "Input"],
Cell[3866, 127, 20707, 545, 432, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24610, 677, 1622, 45, 97, "Input"],
Cell[26235, 724, 1387, 44, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27659, 773, 129, 2, 28, "Input"],
Cell[27791, 777, 1709, 53, 105, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29537, 835, 305, 7, 28, "Input"],
Cell[29845, 844, 32308, 849, 746, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62190, 1698, 205, 5, 28, "Input"],
Cell[62398, 1705, 31536, 837, 685, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93971, 2547, 297, 6, 28, "Input"],
Cell[94271, 2555, 77, 1, 28, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[94397, 2562, 190, 2, 50, "Section"],
Cell[CellGroupData[{
Cell[94612, 2568, 2098, 55, 77, "Input"],
Cell[96713, 2625, 700, 15, 35, "Output"],
Cell[97416, 2642, 1630, 45, 35, "Output"],
Cell[99049, 2689, 1131, 29, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100217, 2723, 449, 12, 28, "Input"],
Cell[100669, 2737, 2646, 76, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103352, 2818, 569, 16, 63, "Input"],
Cell[103924, 2836, 4118, 119, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108079, 2960, 206, 5, 28, "Input"],
Cell[108288, 2967, 1153, 32, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109478, 3004, 204, 5, 28, "Input"],
Cell[109685, 3011, 11556, 340, 274, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121278, 3356, 224, 4, 28, "Input"],
Cell[121505, 3362, 812, 22, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122354, 3389, 334, 8, 46, "Input"],
Cell[122691, 3399, 3172, 97, 57, "Output"],
Cell[125866, 3498, 421, 13, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126324, 3516, 202, 5, 28, "Input"],
Cell[126529, 3523, 18989, 419, 299, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145555, 3947, 1400, 27, 35, "Input"],
Cell[146958, 3976, 1301, 26, 35, "Output"]
}, Open  ]],
Cell[148274, 4005, 473, 15, 51, "Input"],
Cell[CellGroupData[{
Cell[148772, 4024, 1857, 37, 80, "Input"],
Cell[150632, 4063, 66561, 1101, 393, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217230, 5169, 1455, 32, 80, "Input"],
Cell[218688, 5203, 73118, 1203, 493, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291843, 6411, 1607, 42, 86, "Input"],
Cell[293453, 6455, 707, 16, 35, "Output"],
Cell[294163, 6473, 82609, 1354, 360, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376809, 7832, 1249, 36, 63, "Input"],
Cell[378061, 7870, 187699, 3087, 172, "Output"]
}, Open  ]],
Cell[565775, 10960, 503, 11, 28, "Input"],
Cell[566281, 10973, 401, 10, 28, "Input"],
Cell[CellGroupData[{
Cell[566707, 10987, 3488, 93, 182, "Input"],
Cell[570198, 11082, 32323, 668, 258, "Output"]
}, Open  ]],
Cell[602536, 11753, 3191, 90, 56, "Input"],
Cell[CellGroupData[{
Cell[605752, 11847, 5944, 163, 301, "Input"],
Cell[611699, 12012, 39481, 789, 258, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[651229, 12807, 190, 2, 50, "Section"],
Cell[CellGroupData[{
Cell[651444, 12813, 2220, 57, 77, "Input"],
Cell[653667, 12872, 726, 16, 35, "Output"],
Cell[654396, 12890, 1956, 56, 35, "Output"],
Cell[656355, 12948, 1438, 39, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[657830, 12992, 449, 12, 28, "Input"],
Cell[658282, 13006, 22880, 576, 389, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[681199, 13587, 569, 16, 63, "Input"],
Cell[681771, 13605, 5525, 157, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[687333, 13767, 206, 5, 28, "Input"],
Cell[687542, 13774, 1178, 33, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[688757, 13812, 204, 5, 28, "Input"],
Cell[688964, 13819, 109545, 2743, 2070, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[798546, 16567, 224, 4, 28, "Input"],
Cell[798773, 16573, 812, 22, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[799622, 16600, 334, 8, 46, "Input"],
Cell[799959, 16610, 29098, 744, 540, "Output"],
Cell[829060, 17356, 4945, 136, 118, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[834042, 17497, 1400, 27, 35, "Input"],
Cell[835445, 17526, 1323, 26, 35, "Output"]
}, Open  ]],
Cell[836783, 17555, 473, 15, 51, "Input"],
Cell[CellGroupData[{
Cell[837281, 17574, 1857, 37, 80, "Input"],
Cell[839141, 17613, 65387, 1086, 393, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[904565, 18704, 1455, 32, 80, "Input"],
Cell[906023, 18738, 83064, 1369, 493, "Output"]
}, Open  ]],
Cell[989102, 20110, 390, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[989517, 20120, 1432, 40, 101, "Input"],
Cell[990952, 20162, 436, 11, 35, "Output"],
Cell[991391, 20175, 54058, 899, 336, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1045486, 21079, 1456, 35, 69, "Input"],
Cell[1046945, 21116, 780, 17, 35, "Output"],
Cell[1047728, 21135, 82191, 1349, 360, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1129956, 22489, 1416, 40, 86, "Input"],
Cell[1131375, 22531, 496, 14, 35, "Output"],
Cell[1131874, 22547, 44413, 743, 322, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1176324, 23295, 1249, 36, 63, "Input"],
Cell[1177576, 23333, 187745, 3089, 172, "Output"]
}, Open  ]],
Cell[1365336, 26425, 503, 11, 28, "Input"],
Cell[1365842, 26438, 401, 10, 28, "Input"],
Cell[CellGroupData[{
Cell[1366268, 26452, 3488, 93, 182, "Input"],
Cell[1369759, 26547, 32369, 670, 258, "Output"]
}, Open  ]],
Cell[1402143, 27220, 3191, 90, 56, "Input"],
Cell[CellGroupData[{
Cell[1405359, 27314, 5944, 163, 301, "Input"],
Cell[1411306, 27479, 39527, 791, 258, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1450882, 28276, 172, 2, 50, "Section"],
Cell[CellGroupData[{
Cell[1451079, 28282, 3150, 84, 98, "Input"],
Cell[1454232, 28368, 810, 20, 35, "Output"],
Cell[1455045, 28390, 1955, 55, 35, "Output"],
Cell[1457003, 28447, 1248, 33, 35, "Output"],
Cell[1458254, 28482, 1101, 28, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1459392, 28515, 556, 14, 28, "Input"],
Cell[1459951, 28531, 406, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1460394, 28542, 1049, 29, 80, "Input"],
Cell[1461446, 28573, 7020, 202, 101, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1468503, 28780, 299, 7, 28, "Input"],
Cell[1468805, 28789, 5089, 146, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1473931, 28940, 295, 7, 28, "Input"],
Cell[1474229, 28949, 9226, 253, 206, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1483492, 29207, 249, 6, 28, "Input"],
Cell[1483744, 29215, 3064, 92, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1486845, 29312, 224, 4, 28, "Input"],
Cell[1487072, 29318, 763, 21, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1487872, 29344, 334, 7, 46, "Input"],
Cell[1488209, 29353, 3555, 101, 107, "Output"],
Cell[1491767, 29456, 2093, 61, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1493897, 29522, 1414, 29, 35, "Input"],
Cell[1495314, 29553, 1292, 28, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1496643, 29586, 262, 6, 28, "Input"],
Cell[1496908, 29594, 306, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1497251, 29605, 1504, 28, 63, "Input"],
Cell[1498758, 29635, 60602, 994, 485, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1559397, 30634, 366, 10, 28, "Input"],
Cell[1559766, 30646, 405, 10, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1560208, 30661, 386, 10, 46, "Input"],
Cell[1560597, 30673, 338, 10, 50, "Output"],
Cell[1560938, 30685, 336, 10, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1561311, 30700, 386, 10, 46, "Input"],
Cell[1561700, 30712, 1845, 55, 58, "Output"],
Cell[1563548, 30769, 1439, 43, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1565024, 30817, 384, 10, 46, "Input"],
Cell[1565411, 30829, 4047, 115, 161, "Output"],
Cell[1569461, 30946, 1245, 37, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1570743, 30988, 457, 14, 28, "Input"],
Cell[1571203, 31004, 317, 10, 48, "Output"]
}, Open  ]],
Cell[1571535, 31017, 94, 1, 28, "Input"]
}, Closed]]
}
]
*)

(* End of internal cache information *)
